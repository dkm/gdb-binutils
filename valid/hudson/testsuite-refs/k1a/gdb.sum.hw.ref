Test Run By mgligor on Fri May  6 16:58:07 2016
Target is k1-unknown-elf
Host   is i686-pc-linux-gnu

		=== gdb tests ===

Schedule of variations:
    k1-jtag-runner

Running target k1-jtag-runner
Running ../../../gdb/testsuite/gdb.mi/mi-var-list-children-invalid-grandchild.exp ...
PASS: gdb.mi/mi-var-list-children-invalid-grandchild.exp: set print object on
PASS: gdb.mi/mi-var-list-children-invalid-grandchild.exp: breakpoint at main
PASS: gdb.mi/mi-var-list-children-invalid-grandchild.exp: mi runto main
PASS: gdb.mi/mi-var-list-children-invalid-grandchild.exp: run to 41 (set breakpoint)
PASS: gdb.mi/mi-var-list-children-invalid-grandchild.exp: create variable object
PASS: gdb.mi/mi-var-list-children-invalid-grandchild.exp: list children #1
PASS: gdb.mi/mi-var-list-children-invalid-grandchild.exp: run to 43 (set breakpoint)
PASS: gdb.mi/mi-var-list-children-invalid-grandchild.exp: update variable object
PASS: gdb.mi/mi-var-list-children-invalid-grandchild.exp: list children #2
Running ../../../gdb/testsuite/gdb.mi/mi-console.exp ...
PASS: gdb.mi/mi-console.exp: breakpoint at main
PASS: gdb.mi/mi-console.exp: mi runto main
PASS: gdb.mi/mi-console.exp: Testing console output
UNSUPPORTED: gdb.mi/mi-console.exp: Testing console output inferior output
PASS: gdb.mi/mi-console.exp: finished step over hello
Running ../../../gdb/testsuite/gdb.mi/mi-nonstop-exit.exp ...
UNSUPPORTED: gdb.mi/mi-nonstop-exit.exp: Couldn't compile non-stop-exit.c: unrecognized error
Running ../../../gdb/testsuite/gdb.mi/mi-reg-undefined.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi-var-cmd.exp ...
PASS: gdb.mi/mi-var-cmd.exp: create global variable
PASS: gdb.mi/mi-var-cmd.exp: update varobj before running inferior
PASS: gdb.mi/mi-var-cmd.exp: create non-existent variable
PASS: gdb.mi/mi-var-cmd.exp: create out of scope variable
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at do_locals_tests
PASS: gdb.mi/mi-var-cmd.exp: mi runto do_locals_tests
PASS: gdb.mi/mi-var-cmd.exp: run to 148 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: create local variable linteger
PASS: gdb.mi/mi-var-cmd.exp: create local variable lpinteger
PASS: gdb.mi/mi-var-cmd.exp: create local variable lcharacter
PASS: gdb.mi/mi-var-cmd.exp: create local variable lpcharacter
PASS: gdb.mi/mi-var-cmd.exp: create local variable llong
PASS: gdb.mi/mi-var-cmd.exp: create local variable lplong
PASS: gdb.mi/mi-var-cmd.exp: create local variable lfloat
PASS: gdb.mi/mi-var-cmd.exp: create local variable lpfloat
PASS: gdb.mi/mi-var-cmd.exp: create local variable ldouble
PASS: gdb.mi/mi-var-cmd.exp: create local variable lpdouble
PASS: gdb.mi/mi-var-cmd.exp: create local variable lsimple
PASS: gdb.mi/mi-var-cmd.exp: create local variable lpsimple
PASS: gdb.mi/mi-var-cmd.exp: create local variable func
PASS: gdb.mi/mi-var-cmd.exp: create lsimple.character
PASS: gdb.mi/mi-var-cmd.exp: create lsimple->integer
PASS: gdb.mi/mi-var-cmd.exp: create lsimple.integer
PASS: gdb.mi/mi-var-cmd.exp: create int
PASS: gdb.mi/mi-var-cmd.exp: update all vars
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_test
PASS: gdb.mi/mi-var-cmd.exp: update all vars: linteger changed
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (2)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: lpinteger changed
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (3)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: lcharacter changed
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (4)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: lpcharacter changed
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (5)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: many changed
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (6)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: func and lpsimple changed
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (7)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: lsimple and others changed
PASS: gdb.mi/mi-var-cmd.exp: assign to global_simple
PASS: gdb.mi/mi-var-cmd.exp: assign to linteger
PASS: gdb.mi/mi-var-cmd.exp: update all vars: linteger changed after assign
PASS: gdb.mi/mi-var-cmd.exp: assign to linteger again, same value
PASS: gdb.mi/mi-var-cmd.exp: update all vars: linteger not changed after same assign
PASS: gdb.mi/mi-var-cmd.exp: eval linteger
PASS: gdb.mi/mi-var-cmd.exp: assign to lpinteger
PASS: gdb.mi/mi-var-cmd.exp: update all vars: lpinteger changed after assign
PASS: gdb.mi/mi-var-cmd.exp: update all vars: no changes on second update
PASS: gdb.mi/mi-var-cmd.exp: eval lpinteger
PASS: gdb.mi/mi-var-cmd.exp: assign to linteger
PASS: gdb.mi/mi-var-cmd.exp: assign to lpinteger
PASS: gdb.mi/mi-var-cmd.exp: assign to lcharacter
PASS: gdb.mi/mi-var-cmd.exp: eval lcharacter
PASS: gdb.mi/mi-var-cmd.exp: assign to llong
PASS: gdb.mi/mi-var-cmd.exp: eval llong
PASS: gdb.mi/mi-var-cmd.exp: assign to llong
PASS: gdb.mi/mi-var-cmd.exp: assign to lplong
PASS: gdb.mi/mi-var-cmd.exp: eval lplong
PASS: gdb.mi/mi-var-cmd.exp: assign to lplong
PASS: gdb.mi/mi-var-cmd.exp: assign to lfloat
PASS: gdb.mi/mi-var-cmd.exp: eval lfloat
PASS: gdb.mi/mi-var-cmd.exp: assign to lfloat
PASS: gdb.mi/mi-var-cmd.exp: assign to lpfloat
PASS: gdb.mi/mi-var-cmd.exp: assign to ldouble
PASS: gdb.mi/mi-var-cmd.exp: assign to func
PASS: gdb.mi/mi-var-cmd.exp: assign to lsimple.character
PASS: gdb.mi/mi-var-cmd.exp: assign to lsimple->integer
PASS: gdb.mi/mi-var-cmd.exp: assign to lsimple.integer
PASS: gdb.mi/mi-var-cmd.exp: var update
PASS: gdb.mi/mi-var-cmd.exp: assign same value to func
PASS: gdb.mi/mi-var-cmd.exp: assign same value to func (update)
PASS: gdb.mi/mi-var-cmd.exp: create global variable array_ptr
PASS: gdb.mi/mi-var-cmd.exp: assign array to pointer
PASS: gdb.mi/mi-var-cmd.exp: assign array to pointer (update)
PASS: gdb.mi/mi-var-cmd.exp: assign same array to pointer
PASS: gdb.mi/mi-var-cmd.exp: assign same array to pointer (update)
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at subroutine1
PASS: gdb.mi/mi-var-cmd.exp: mi runto subroutine1
PASS: gdb.mi/mi-var-cmd.exp: create i
PASS: gdb.mi/mi-var-cmd.exp: create l
PASS: gdb.mi/mi-var-cmd.exp: create linteger
PASS: gdb.mi/mi-var-cmd.exp: step at subroutine1
XFAIL: gdb.mi/mi-var-cmd.exp: update all vars: changed FIXME
PASS: gdb.mi/mi-var-cmd.exp: step at subroutine1 (2)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: i changed
PASS: gdb.mi/mi-var-cmd.exp: step at subroutine1 (3)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: llong changed
PASS: gdb.mi/mi-var-cmd.exp: next out of subroutine1
PASS: gdb.mi/mi-var-cmd.exp: update all vars: all now out of scope
PASS: gdb.mi/mi-var-cmd.exp: delete var
PASS: gdb.mi/mi-var-cmd.exp: delete var linteger
PASS: gdb.mi/mi-var-cmd.exp: delete var lpinteger
PASS: gdb.mi/mi-var-cmd.exp: delete var lcharacter
PASS: gdb.mi/mi-var-cmd.exp: delete var lpcharacter
PASS: gdb.mi/mi-var-cmd.exp: delete var llong
PASS: gdb.mi/mi-var-cmd.exp: delete var lplong
PASS: gdb.mi/mi-var-cmd.exp: delete var lfloat
PASS: gdb.mi/mi-var-cmd.exp: delete var lpfloat
PASS: gdb.mi/mi-var-cmd.exp: delete var ldouble
PASS: gdb.mi/mi-var-cmd.exp: delete var lpdouble
PASS: gdb.mi/mi-var-cmd.exp: delete var lsimple
PASS: gdb.mi/mi-var-cmd.exp: delete var lpsimple
PASS: gdb.mi/mi-var-cmd.exp: delete var func
PASS: gdb.mi/mi-var-cmd.exp: delete var lsimple.character
PASS: gdb.mi/mi-var-cmd.exp: delete var  lsimple->integer
PASS: gdb.mi/mi-var-cmd.exp: delete var lsimple.integer
PASS: gdb.mi/mi-var-cmd.exp: delete var i
PASS: gdb.mi/mi-var-cmd.exp: delete var l
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at do_special_tests
PASS: gdb.mi/mi-var-cmd.exp: mi runto do_special_tests
PASS: gdb.mi/mi-var-cmd.exp: create selected_a
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at incr_a
PASS: gdb.mi/mi-var-cmd.exp: mi runto incr_a
PASS: gdb.mi/mi-var-cmd.exp: update selected_a in incr_a
PASS: gdb.mi/mi-var-cmd.exp: step a line in incr_a
PASS: gdb.mi/mi-var-cmd.exp: return from incr_a to do_special_tests
PASS: gdb.mi/mi-var-cmd.exp: update selected_a in do_special_tests
PASS: gdb.mi/mi-var-cmd.exp: floating varobj invalidation
PASS: gdb.mi/mi-var-cmd.exp: delete selected_a
PASS: gdb.mi/mi-var-cmd.exp: delete array_ptr
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:367 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: create varobj for v1
PASS: gdb.mi/mi-var-cmd.exp: create varobj for v2
PASS: gdb.mi/mi-var-cmd.exp: list children of v1
PASS: gdb.mi/mi-var-cmd.exp: list children of v1.nested
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 1
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.j: 2
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.k: 3
PASS: gdb.mi/mi-var-cmd.exp: check V2: 4
PASS: gdb.mi/mi-var-cmd.exp: update varobjs: V2 changed
PASS: gdb.mi/mi-var-cmd.exp: -var-set-frozen V2 1
PASS: gdb.mi/mi-var-cmd.exp: update varobjs: nothing changed
PASS: gdb.mi/mi-var-cmd.exp: check V2: 5
PASS: gdb.mi/mi-var-cmd.exp: update V2 explicitly
PASS: gdb.mi/mi-var-cmd.exp: check V2: 6
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:401 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: -var-set-frozen V1 1
PASS: gdb.mi/mi-var-cmd.exp: update varobjs: nothing changed
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 1
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.j: 2
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.k: 3
PASS: gdb.mi/mi-var-cmd.exp: update V1.nested.j
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 1
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.j: 8
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.k: 3
PASS: gdb.mi/mi-var-cmd.exp: update V1.nested
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 1
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.j: 8
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.k: 9
PASS: gdb.mi/mi-var-cmd.exp: update V1.i
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 7
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:426 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: -var-set-frozen V1 0
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 7
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.j: 8
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.k: 9
PASS: gdb.mi/mi-var-cmd.exp: update V1
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 10
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.j: 11
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.k: 12
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:526 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: create varobj for Data
PASS: gdb.mi/mi-var-cmd.exp: list children of Data
PASS: gdb.mi/mi-var-cmd.exp: access bitfield
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:469 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: create floating varobj
PASS: gdb.mi/mi-var-cmd.exp: update F (1)
PASS: gdb.mi/mi-var-cmd.exp: check F (1)
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:480 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: update F (2)
PASS: gdb.mi/mi-var-cmd.exp: check F (2)
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:488 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: update F (--all-values)
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:494 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: update F (3)
PASS: gdb.mi/mi-var-cmd.exp: check F (3)
PASS: gdb.mi/mi-var-cmd.exp: inside breakpoint inside callee
PASS: gdb.mi/mi-var-cmd.exp: continue to where i is initialized
PASS: gdb.mi/mi-var-cmd.exp: update F inside callee
PASS: gdb.mi/mi-var-cmd.exp: check F inside callee
PASS: gdb.mi/mi-var-cmd.exp: create null_ptr
PASS: gdb.mi/mi-var-cmd.exp: update null_ptr
PASS: gdb.mi/mi-var-cmd.exp: delete null_ptr
PASS: gdb.mi/mi-var-cmd.exp: kill program before endvar
PASS: gdb.mi/mi-var-cmd.exp: create endvar
PASS: gdb.mi/mi-var-cmd.exp: update endvar
PASS: gdb.mi/mi-var-cmd.exp: delete endvar
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at do_locals_tests
PASS: gdb.mi/mi-var-cmd.exp: mi runto do_locals_tests
PASS: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: create varobj
PASS: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: check initial value
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at main
PASS: gdb.mi/mi-var-cmd.exp: mi runto main
FAIL: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: out of scope now
FAIL: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: out of scope now, not changed
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at do_locals_tests
PASS: gdb.mi/mi-var-cmd.exp: mi runto do_locals_tests
FAIL: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: in scope now
FAIL: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: in scope now, not changed
Running ../../../gdb/testsuite/gdb.mi/mi-ns-stale-regcache.exp ...
PASS: gdb.mi/mi-ns-stale-regcache.exp: breakpoint at main
PASS: gdb.mi/mi-ns-stale-regcache.exp: mi runto main
PASS: gdb.mi/mi-ns-stale-regcache.exp: no stale register cache of resumed thread
PASS: gdb.mi/mi-ns-stale-regcache.exp: no stale frame info of resumed thread
PASS: gdb.mi/mi-ns-stale-regcache.exp: main thread still running
Running ../../../gdb/testsuite/gdb.mi/mi-vla-c99.exp ...
PASS: gdb.mi/mi-vla-c99.exp: insert breakpoint at line 28 after vla is filled
PASS: gdb.mi/mi-vla-c99.exp: run to breakpoint at line 28
PASS: gdb.mi/mi-vla-c99.exp: evaluate complete vla
PASS: gdb.mi/mi-vla-c99.exp: evaluate vla[0]
PASS: gdb.mi/mi-vla-c99.exp: evaluate vla[2]
PASS: gdb.mi/mi-vla-c99.exp: evaluate vla[4]
PASS: gdb.mi/mi-vla-c99.exp: create local variable vla
PASS: gdb.mi/mi-vla-c99.exp: info type variable vla
PASS: gdb.mi/mi-vla-c99.exp: show format variable vla
PASS: gdb.mi/mi-vla-c99.exp: eval variable vla
PASS: gdb.mi/mi-vla-c99.exp: get children of vla
Running ../../../gdb/testsuite/gdb.mi/mi-vla-fortran.exp ...
PASS: gdb.mi/mi-vla-fortran.exp: 1
PASS: gdb.mi/mi-vla-fortran.exp: run to breakpoint at line 22
PASS: gdb.mi/mi-vla-fortran.exp: evaluate not allocated vla
PASS: gdb.mi/mi-vla-fortran.exp: create local variable vla1_not_allocated
PASS: gdb.mi/mi-vla-fortran.exp: info type variable vla1_not_allocated
PASS: gdb.mi/mi-vla-fortran.exp: show format variable vla1_not_allocated
PASS: gdb.mi/mi-vla-fortran.exp: eval variable vla1_not_allocated
PASS: gdb.mi/mi-vla-fortran.exp: get children of vla1_not_allocated
PASS: gdb.mi/mi-vla-fortran.exp: 2
PASS: gdb.mi/mi-vla-fortran.exp: run to breakpoint at line 23
PASS: gdb.mi/mi-vla-fortran.exp: evaluate allocated vla
PASS: gdb.mi/mi-vla-fortran.exp: create local variable vla1_allocated
PASS: gdb.mi/mi-vla-fortran.exp: info type variable vla1_allocated
PASS: gdb.mi/mi-vla-fortran.exp: show format variable vla1_allocated
PASS: gdb.mi/mi-vla-fortran.exp: eval variable vla1_allocated
PASS: gdb.mi/mi-vla-fortran.exp: get children of vla1_allocated
PASS: gdb.mi/mi-vla-fortran.exp: 3
PASS: gdb.mi/mi-vla-fortran.exp: run to breakpoint at line 26
PASS: gdb.mi/mi-vla-fortran.exp: evaluate filled vla
PASS: gdb.mi/mi-vla-fortran.exp: 4
PASS: gdb.mi/mi-vla-fortran.exp: run to breakpoint at line 29
PASS: gdb.mi/mi-vla-fortran.exp: evaluate filled vla
PASS: gdb.mi/mi-vla-fortran.exp: evaluate filled vla
PASS: gdb.mi/mi-vla-fortran.exp: evaluate filled vla
PASS: gdb.mi/mi-vla-fortran.exp: evaluate filled vla
PASS: gdb.mi/mi-vla-fortran.exp: 5
PASS: gdb.mi/mi-vla-fortran.exp: run to breakpoint at line 30
PASS: gdb.mi/mi-vla-fortran.exp: evaluate not allocated vla
PASS: gdb.mi/mi-vla-fortran.exp: 6
PASS: gdb.mi/mi-vla-fortran.exp: run to breakpoint at line 35
PASS: gdb.mi/mi-vla-fortran.exp: evaluate not associated vla
PASS: gdb.mi/mi-vla-fortran.exp: create local variable pvla2_not_associated
PASS: gdb.mi/mi-vla-fortran.exp: info type variable pvla2_not_associated
PASS: gdb.mi/mi-vla-fortran.exp: show format variable pvla2_not_associated
PASS: gdb.mi/mi-vla-fortran.exp: eval variable pvla2_not_associated
PASS: gdb.mi/mi-vla-fortran.exp: get children of pvla2_not_associated
PASS: gdb.mi/mi-vla-fortran.exp: 7
PASS: gdb.mi/mi-vla-fortran.exp: run to breakpoint at line 36
PASS: gdb.mi/mi-vla-fortran.exp: evaluate associated vla
PASS: gdb.mi/mi-vla-fortran.exp: create local variable pvla2_associated
PASS: gdb.mi/mi-vla-fortran.exp: info type variable pvla2_associated
PASS: gdb.mi/mi-vla-fortran.exp: show format variable pvla2_associated
PASS: gdb.mi/mi-vla-fortran.exp: eval variable pvla2_associated
PASS: gdb.mi/mi-vla-fortran.exp: 8
PASS: gdb.mi/mi-vla-fortran.exp: run to breakpoint at line 41
PASS: gdb.mi/mi-vla-fortran.exp: evaluate vla pointer set to null
Running ../../../gdb/testsuite/gdb.mi/mi-exit-code.exp ...
PASS: gdb.mi/mi-exit-code.exp: -list-thread-groups before run shows no exit-code
PASS: gdb.mi/mi-exit-code.exp: first run: breakpoint at main
PASS: gdb.mi/mi-exit-code.exp: first run: mi runto main
PASS: gdb.mi/mi-exit-code.exp: first run: -list-thread-groups during run shows no exit-code
PASS: gdb.mi/mi-exit-code.exp: first run: exit normally
PASS: gdb.mi/mi-exit-code.exp: first run: -list-thread-groups after exit shows exit-code
PASS: gdb.mi/mi-exit-code.exp: second run: breakpoint at main
PASS: gdb.mi/mi-exit-code.exp: second run: mi runto main
PASS: gdb.mi/mi-exit-code.exp: second run: write exit code
PASS: gdb.mi/mi-exit-code.exp: second run: -list-thread-groups during run shows no exit-code
PASS: gdb.mi/mi-exit-code.exp: second run: exit with code
PASS: gdb.mi/mi-exit-code.exp: second run: -list-thread-groups after exit shows exit-code
Running ../../../gdb/testsuite/gdb.mi/mi-file.exp ...
PASS: gdb.mi/mi-file.exp: request path info of current source file (basics.c)
PASS: gdb.mi/mi-file.exp: Getting a list of source files.
Running ../../../gdb/testsuite/gdb.mi/mi-var-rtti.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi-hack-cli.exp ...
PASS: gdb.mi/mi-hack-cli.exp: show architecture
PASS: gdb.mi/mi-hack-cli.exp: 47show architecture
Running ../../../gdb/testsuite/gdb.mi/mi-memory-changed.exp ...
PASS: gdb.mi/mi-memory-changed.exp: insert breakpoint
PASS: gdb.mi/mi-memory-changed.exp: continue to callee4
PASS: gdb.mi/mi-memory-changed.exp: set var C = 4
PASS: gdb.mi/mi-memory-changed.exp: create objvar for C
PASS: gdb.mi/mi-memory-changed.exp: change C thru. varobj
PASS: gdb.mi/mi-memory-changed.exp: change C thru. -data-write-memory-bytes
PASS: gdb.mi/mi-memory-changed.exp: get address of main
Running ../../../gdb/testsuite/gdb.mi/mi-detach.exp ...
UNSUPPORTED: gdb.mi/mi-detach.exp: mi-detach.exp
Running ../../../gdb/testsuite/gdb.mi/gdb680.exp ...
PASS: gdb.mi/gdb680.exp: -data-list-register-names -1, try 0
PASS: gdb.mi/gdb680.exp: -data-list-register-names -1, try 1
PASS: gdb.mi/gdb680.exp: -data-list-register-names -1, try 2
PASS: gdb.mi/gdb680.exp: -data-list-register-names -1, try 3
PASS: gdb.mi/gdb680.exp: -data-list-register-names -1, try 4
Running ../../../gdb/testsuite/gdb.mi/mi-stepn.exp ...
PASS: gdb.mi/mi-stepn.exp: breakpoint at main
PASS: gdb.mi/mi-stepn.exp: mi runto main
PASS: gdb.mi/mi-stepn.exp: breakpoint at do_nothing
PASS: gdb.mi/mi-stepn.exp: breakpoint-hit reported
Running ../../../gdb/testsuite/gdb.mi/pr11022.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi-regs.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi-info-os.exp ...
UNSUPPORTED: gdb.mi/mi-info-os.exp: mi-info-os.exp
Running ../../../gdb/testsuite/gdb.mi/mi-async.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi-catch-load.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi-nonstop.exp ...
UNSUPPORTED: gdb.mi/mi-nonstop.exp: Couldn't compile non-stop.c: unrecognized error
Running ../../../gdb/testsuite/gdb.mi/mi2-prompt.exp ...
PASS: gdb.mi/mi2-prompt.exp: console set prompt
PASS: gdb.mi/mi2-prompt.exp: -break-list
PASS: gdb.mi/mi2-prompt.exp: set prompt (banana)
PASS: gdb.mi/mi2-prompt.exp: interpreter-exec mi -break-list
Running ../../../gdb/testsuite/gdb.mi/mi-pending.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi-dprintf-pending.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi-nsintrall.exp ...
UNSUPPORTED: gdb.mi/mi-nsintrall.exp: Couldn't compile nsintrall.c: unrecognized error
Running ../../../gdb/testsuite/gdb.mi/mi-fill-memory.exp ...
PASS: gdb.mi/mi-fill-memory.exp: breakpoint at main
PASS: gdb.mi/mi-fill-memory.exp: mi runto main
PASS: gdb.mi/mi-fill-memory.exp: next at main
PASS: gdb.mi/mi-fill-memory.exp: no arguments
PASS: gdb.mi/mi-fill-memory.exp: one argument missing
PASS: gdb.mi/mi-fill-memory.exp: memory successfully written
PASS: gdb.mi/mi-fill-memory.exp: memory successfully filled (8 bytes)
PASS: gdb.mi/mi-fill-memory.exp: pattern correctly read from memory
Running ../../../gdb/testsuite/gdb.mi/mi-solib.exp ...
UNTESTED: gdb.mi/mi-solib.exp: mi-solib.exp
Running ../../../gdb/testsuite/gdb.mi/mi-watch.exp ...
PASS: gdb.mi/mi-watch.exp: hw watchpoints toggle (1)
PASS: gdb.mi/mi-watch.exp: sw: breakpoint at callee4
PASS: gdb.mi/mi-watch.exp: sw: mi runto callee4
PASS: gdb.mi/mi-watch.exp: sw: break-watch operation
PASS: gdb.mi/mi-watch.exp: sw: list of watchpoints
PASS: gdb.mi/mi-watch.exp: sw: watchpoint trigger
PASS: gdb.mi/mi-watch.exp: sw: watchpoint trigger
PASS: gdb.mi/mi-watch.exp: hw watchpoints toggle (2)
PASS: gdb.mi/mi-watch.exp: hw: breakpoint at callee4
PASS: gdb.mi/mi-watch.exp: hw: mi runto callee4
PASS: gdb.mi/mi-watch.exp: hw: break-watch operation
PASS: gdb.mi/mi-watch.exp: hw: list of watchpoints
PASS: gdb.mi/mi-watch.exp: hw: watchpoint trigger
PASS: gdb.mi/mi-watch.exp: hw: watchpoint trigger
Running ../../../gdb/testsuite/gdb.mi/mi-disassemble.exp ...
PASS: gdb.mi/mi-disassemble.exp: breakpoint at main
PASS: gdb.mi/mi-disassemble.exp: mi runto main
PASS: gdb.mi/mi-disassemble.exp: data-disassemble from pc to pc+12 assembly only
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file & line, assembly only
PASS: gdb.mi/mi-disassemble.exp: data-disassemble from pc to pc+12 assembly with opcodes
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file & line, assembly with opcodes
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line assembly mixed
PASS: gdb.mi/mi-disassemble.exp: data-disassemble range assembly mixed
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line assembly mixed with opcodes
PASS: gdb.mi/mi-disassemble.exp: data-disassemble range assembly mixed with opcodes
PASS: gdb.mi/mi-disassemble.exp: data-disassemble bogus filename
PASS: gdb.mi/mi-disassemble.exp: data-disassemble bogus address
PASS: gdb.mi/mi-disassemble.exp: data-disassemble mix different args
PASS: gdb.mi/mi-disassemble.exp: data-disassemble wrong mode arg
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number assembly only
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number (zero lines) assembly only
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number (more than main lines) assembly only
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number assembly mixed
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number (zero lines) assembly mixed
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number (more than main lines) assembly mixed
Running ../../../gdb/testsuite/gdb.mi/gdb2549.exp ...
PASS: gdb.mi/gdb2549.exp: wrong arguments
PASS: gdb.mi/gdb2549.exp: no executable
PASS: gdb.mi/gdb2549.exp: breakpoint at main
PASS: gdb.mi/gdb2549.exp: mi runto main
PASS: gdb.mi/gdb2549.exp: register values x
PASS: gdb.mi/gdb2549.exp: register values f
PASS: gdb.mi/gdb2549.exp: register values d
PASS: gdb.mi/gdb2549.exp: register values o
PASS: gdb.mi/gdb2549.exp: register values t
Running ../../../gdb/testsuite/gdb.mi/mi-file-transfer.exp ...
UNSUPPORTED: gdb.mi/mi-file-transfer.exp: mi-file-transfer.exp
Running ../../../gdb/testsuite/gdb.mi/mi2-var-child.exp ...
PASS: gdb.mi/mi2-var-child.exp: breakpoint at do_children_tests
PASS: gdb.mi/mi2-var-child.exp: mi runto do_children_tests
PASS: gdb.mi/mi2-var-child.exp: run to 251 (set breakpoint)
PASS: gdb.mi/mi2-var-child.exp: create local variable struct_declarations
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.integer
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.integer
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.character
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.character
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_int
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_int
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.func_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.func_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.func_ptr_struct
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.func_ptr_struct
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.func_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.func_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.u1
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.u1
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.1
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.1
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.2
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.2
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.3
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.3
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.4
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.4
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.5
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.5
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.6
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.6
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.7
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.7
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.8
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.8
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.9
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.9
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.u1.a
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.u1.a
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.u1.b
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.u1.b
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.u1.c
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.u1.c
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.u1.d
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.u1.d
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.g
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.g
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.h
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.h
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.i
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.i
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s1
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.f
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.f
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s2
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s1.d
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.d
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s1.e
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.e
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s1.func
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.func
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s1.foo
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.foo
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s2.array_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2.array_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s2.func
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2.func
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: step to line $line_dct_123
PASS: gdb.mi/mi2-var-child.exp: create local variable weird
PASS: gdb.mi/mi2-var-child.exp: get children of weird
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird
PASS: gdb.mi/mi2-var-child.exp: get children of weird.long_array
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird.long_array
PASS: gdb.mi/mi2-var-child.exp: get children of weird.int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird.int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of weird.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: create local variable weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of weird->int_ptr_ptr.*weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird->int_ptr_ptr.*weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of weird->int_ptr_ptr.*weird->int_ptr_ptr.**weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird->int_ptr_ptr.*weird->int_ptr_ptr.**weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: is weird editable
PASS: gdb.mi/mi2-var-child.exp: is weird->int_ptr_ptr editable
PASS: gdb.mi/mi2-var-child.exp: is weird.int_ptr_ptr.*int_ptr_ptr editable
PASS: gdb.mi/mi2-var-child.exp: is weird.int_ptr_ptr.*int_ptr_ptr.**int_ptr_ptr editable
PASS: gdb.mi/mi2-var-child.exp: is weird.u1 editable
PASS: gdb.mi/mi2-var-child.exp: is weird.s2 editable
PASS: gdb.mi/mi2-var-child.exp: is struct_declarations.u1.a editable
PASS: gdb.mi/mi2-var-child.exp: is struct_declarations.u1.b editable
PASS: gdb.mi/mi2-var-child.exp: is struct_declarations.u1.c editable
PASS: gdb.mi/mi2-var-child.exp: is struct_declarations.long_array editable
PASS: gdb.mi/mi2-var-child.exp: is struct_declarations.long_array.0 editable
PASS: gdb.mi/mi2-var-child.exp: is struct_declarations editable
PASS: gdb.mi/mi2-var-child.exp: delete var weird
PASS: gdb.mi/mi2-var-child.exp: update all vars. None changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 1
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.integer
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 4
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.char_ptr
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 5
PASS: gdb.mi/mi2-var-child.exp: update all vars int_ptr_ptr and children changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 6
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.long_array.0 changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 7
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.long_array.1 changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 8
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.long_array.2 changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_nothing
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.long_array.3-9 changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_nothing + 1
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.func_ptr changed
PASS: gdb.mi/mi2-var-child.exp: delete var struct_declarations
PASS: gdb.mi/mi2-var-child.exp: delete var weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 1
PASS: gdb.mi/mi2-var-child.exp: create local variable  psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr.****psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr.****psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: create local variable  psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr.****psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr.****psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: create local variable  psnp->ptrs
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.next
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.next.ptrs
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 2
PASS: gdb.mi/mi2-var-child.exp: update all vars psnp->char_ptr (and 0.char_ptr) changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 3
PASS: gdb.mi/mi2-var-child.exp: update all vars psnp->next->char_ptr (and 1.char_ptr) changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 4
PASS: gdb.mi/mi2-var-child.exp: update all vars psnp->next->next->char_ptr (and 2.char_ptr) changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 5
PASS: gdb.mi/mi2-var-child.exp: update all vars psnp->long_ptr (and 0.long_ptr) changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 6
XFAIL: gdb.mi/mi2-var-child.exp: update all vars psnp->next->long_ptr (and 1.long_ptr) changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 7
PASS: gdb.mi/mi2-var-child.exp: update all vars psnp->next->next->long_ptr (and 2.long_ptr) changed
PASS: gdb.mi/mi2-var-child.exp: break in do_anonymous_type_tests
PASS: gdb.mi/mi2-var-child.exp: break in do_nested_struct_union_tests
PASS: gdb.mi/mi2-var-child.exp: continue to do_anonymous_type_tests breakpoint
PASS: gdb.mi/mi2-var-child.exp: VT: create root varobj for ptr
PASS: gdb.mi/mi2-var-child.exp: VT: list children of ptr1
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1
PASS: gdb.mi/mi2-var-child.exp: VT: list children of ptr1.*ptr
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.a
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.a
PASS: gdb.mi/mi2-var-child.exp: VT: list children of ptr1.*ptr.1_anonymous
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.b
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.b
PASS: gdb.mi/mi2-var-child.exp: VT: list children of ptr1.*ptr.1_anonymous.c
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.c
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.c
PASS: gdb.mi/mi2-var-child.exp: VT: list children of ptr1.*ptr.1_anonymous.2_anonymous
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.c.*c
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.c.*c
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.d
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.d
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.e
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.e
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.f
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.f
PASS: gdb.mi/mi2-var-child.exp: VT: list children of ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.g
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.g
PASS: gdb.mi/mi2-var-child.exp: VT: list children of ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.h
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.h
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.h
PASS: gdb.mi/mi2-var-child.exp: VT: list children of ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple
PASS: gdb.mi/mi2-var-child.exp: VT: list children of ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.h.*h
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.h.*h
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.h.*h
PASS: gdb.mi/mi2-var-child.exp: VT: list children of ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.h.*h.**h
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.h.*h.**h
PASS: gdb.mi/mi2-var-child.exp: VT: list children of ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.integer
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.integer
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.unsigned_integer
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.unsigned_integer
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.character
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.character
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.signed_character
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.signed_character
PASS: gdb.mi/mi2-var-child.exp: VT: list children of ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.char_ptr
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.char_ptr
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.char_ptr
PASS: gdb.mi/mi2-var-child.exp: VT: list children of ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.char_ptr.*char_ptr
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.char_ptr.*char_ptr
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.0
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.0
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.1
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.1
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.2
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.2
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.3
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.3
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.4
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.4
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.5
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.5
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.6
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.6
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.7
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.7
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.8
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.8
PASS: gdb.mi/mi2-var-child.exp: path expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.9
PASS: gdb.mi/mi2-var-child.exp: expression for ptr1.*ptr.1_anonymous.2_anonymous.3_anonymous.simple.*simple.**simple.array_of_10.9
PASS: gdb.mi/mi2-var-child.exp: VT: create root varobj for v
PASS: gdb.mi/mi2-var-child.exp: VT: list children of v1
PASS: gdb.mi/mi2-var-child.exp: path expression for v1
PASS: gdb.mi/mi2-var-child.exp: expression for v1
PASS: gdb.mi/mi2-var-child.exp: path expression for v1.x
PASS: gdb.mi/mi2-var-child.exp: expression for v1.x
PASS: gdb.mi/mi2-var-child.exp: VT: list children of v1.1_anonymous
PASS: gdb.mi/mi2-var-child.exp: path expression for v1.1_anonymous
PASS: gdb.mi/mi2-var-child.exp: expression for v1.1_anonymous
PASS: gdb.mi/mi2-var-child.exp: VT: list children of v1.2_anonymous
PASS: gdb.mi/mi2-var-child.exp: path expression for v1.2_anonymous
PASS: gdb.mi/mi2-var-child.exp: expression for v1.2_anonymous
PASS: gdb.mi/mi2-var-child.exp: path expression for v1.1_anonymous.a
PASS: gdb.mi/mi2-var-child.exp: expression for v1.1_anonymous.a
PASS: gdb.mi/mi2-var-child.exp: path expression for v1.2_anonymous.b
PASS: gdb.mi/mi2-var-child.exp: expression for v1.2_anonymous.b
PASS: gdb.mi/mi2-var-child.exp: Run till MI stops in do_nested_struct_union_tests
PASS: gdb.mi/mi2-var-child.exp: VT: create root varobj for var
PASS: gdb.mi/mi2-var-child.exp: VT: list children of var1
PASS: gdb.mi/mi2-var-child.exp: path expression for var1
PASS: gdb.mi/mi2-var-child.exp: expression for var1
PASS: gdb.mi/mi2-var-child.exp: VT: list children of var1.a1
PASS: gdb.mi/mi2-var-child.exp: path expression for var1.a1
PASS: gdb.mi/mi2-var-child.exp: expression for var1.a1
PASS: gdb.mi/mi2-var-child.exp: VT: list children of var1.b1
PASS: gdb.mi/mi2-var-child.exp: path expression for var1.b1
PASS: gdb.mi/mi2-var-child.exp: expression for var1.b1
PASS: gdb.mi/mi2-var-child.exp: VT: list children of var1.u1
PASS: gdb.mi/mi2-var-child.exp: path expression for var1.u1
PASS: gdb.mi/mi2-var-child.exp: expression for var1.u1
PASS: gdb.mi/mi2-var-child.exp: VT: list children of var1.3_anonymous
PASS: gdb.mi/mi2-var-child.exp: path expression for var1.3_anonymous
PASS: gdb.mi/mi2-var-child.exp: expression for var1.3_anonymous
PASS: gdb.mi/mi2-var-child.exp: VT: list children of var1.u2
PASS: gdb.mi/mi2-var-child.exp: path expression for var1.u2
PASS: gdb.mi/mi2-var-child.exp: expression for var1.u2
PASS: gdb.mi/mi2-var-child.exp: path expression for var1.a1.a
PASS: gdb.mi/mi2-var-child.exp: expression for var1.a1.a
PASS: gdb.mi/mi2-var-child.exp: path expression for var1.b1.b
PASS: gdb.mi/mi2-var-child.exp: expression for var1.b1.b
PASS: gdb.mi/mi2-var-child.exp: VT: list children of var1.u1.a
PASS: gdb.mi/mi2-var-child.exp: path expression for var1.u1.a
PASS: gdb.mi/mi2-var-child.exp: expression for var1.u1.a
PASS: gdb.mi/mi2-var-child.exp: VT: list children of var1.u1.b
PASS: gdb.mi/mi2-var-child.exp: path expression for var1.u1.b
PASS: gdb.mi/mi2-var-child.exp: expression for var1.u1.b
PASS: gdb.mi/mi2-var-child.exp: VT: list children of var1.3_anonymous.a2
PASS: gdb.mi/mi2-var-child.exp: path expression for var1.3_anonymous.a2
PASS: gdb.mi/mi2-var-child.exp: expression for var1.3_anonymous.a2
PASS: gdb.mi/mi2-var-child.exp: VT: list children of var1.3_anonymous.b2
PASS: gdb.mi/mi2-var-child.exp: path expression for var1.3_anonymous.b2
PASS: gdb.mi/mi2-var-child.exp: expression for var1.3_anonymous.b2
PASS: gdb.mi/mi2-var-child.exp: VT: list children of var1.u2.a3
PASS: gdb.mi/mi2-var-child.exp: path expression for var1.u2.a3
PASS: gdb.mi/mi2-var-child.exp: expression for var1.u2.a3
PASS: gdb.mi/mi2-var-child.exp: VT: list children of var1.u2.b3
PASS: gdb.mi/mi2-var-child.exp: path expression for var1.u2.b3
PASS: gdb.mi/mi2-var-child.exp: expression for var1.u2.b3
PASS: gdb.mi/mi2-var-child.exp: path expression for var1.u1.a.a
PASS: gdb.mi/mi2-var-child.exp: expression for var1.u1.a.a
PASS: gdb.mi/mi2-var-child.exp: path expression for var1.u1.b.b
PASS: gdb.mi/mi2-var-child.exp: expression for var1.u1.b.b
PASS: gdb.mi/mi2-var-child.exp: path expression for var1.3_anonymous.a2.a
PASS: gdb.mi/mi2-var-child.exp: expression for var1.3_anonymous.a2.a
PASS: gdb.mi/mi2-var-child.exp: path expression for var1.3_anonymous.b2.b
PASS: gdb.mi/mi2-var-child.exp: expression for var1.3_anonymous.b2.b
PASS: gdb.mi/mi2-var-child.exp: path expression for var1.u2.a3.a
PASS: gdb.mi/mi2-var-child.exp: expression for var1.u2.a3.a
PASS: gdb.mi/mi2-var-child.exp: path expression for var1.u2.b3.b
PASS: gdb.mi/mi2-var-child.exp: expression for var1.u2.b3.b
PASS: gdb.mi/mi2-var-child.exp: VT: create root varobj for var2
PASS: gdb.mi/mi2-var-child.exp: VT: list children of var21
PASS: gdb.mi/mi2-var-child.exp: path expression for var21
PASS: gdb.mi/mi2-var-child.exp: expression for var21
PASS: gdb.mi/mi2-var-child.exp: VT: list children of var21.ab
PASS: gdb.mi/mi2-var-child.exp: path expression for var21.ab
PASS: gdb.mi/mi2-var-child.exp: expression for var21.ab
PASS: gdb.mi/mi2-var-child.exp: VT: list children of var21.ab.a
PASS: gdb.mi/mi2-var-child.exp: path expression for var21.ab.a
PASS: gdb.mi/mi2-var-child.exp: expression for var21.ab.a
PASS: gdb.mi/mi2-var-child.exp: VT: list children of var21.ab.b
PASS: gdb.mi/mi2-var-child.exp: path expression for var21.ab.b
PASS: gdb.mi/mi2-var-child.exp: expression for var21.ab.b
PASS: gdb.mi/mi2-var-child.exp: path expression for var21.ab.a.a
PASS: gdb.mi/mi2-var-child.exp: expression for var21.ab.a.a
PASS: gdb.mi/mi2-var-child.exp: path expression for var21.ab.b.b
PASS: gdb.mi/mi2-var-child.exp: expression for var21.ab.b.b
PASS: gdb.mi/mi2-var-child.exp: VT: create root varobj for ss_ptr
PASS: gdb.mi/mi2-var-child.exp: VT: list children of ss_ptr1
PASS: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1
PASS: gdb.mi/mi2-var-child.exp: expression for ss_ptr1
PASS: gdb.mi/mi2-var-child.exp: VT: list children of ss_ptr1.a1
PASS: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.a1
PASS: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.a1
PASS: gdb.mi/mi2-var-child.exp: VT: list children of ss_ptr1.b1
PASS: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.b1
PASS: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.b1
PASS: gdb.mi/mi2-var-child.exp: VT: list children of ss_ptr1.u1
PASS: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.u1
PASS: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.u1
PASS: gdb.mi/mi2-var-child.exp: VT: list children of ss_ptr1.3_anonymous
PASS: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.3_anonymous
PASS: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.3_anonymous
PASS: gdb.mi/mi2-var-child.exp: VT: list children of ss_ptr1.u2
PASS: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.u2
PASS: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.u2
PASS: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.a1.a
PASS: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.a1.a
PASS: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.b1.b
PASS: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.b1.b
PASS: gdb.mi/mi2-var-child.exp: VT: list children of ss_ptr1.u1.a
PASS: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.u1.a
PASS: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.u1.a
PASS: gdb.mi/mi2-var-child.exp: VT: list children of ss_ptr1.u1.b
PASS: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.u1.b
PASS: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.u1.b
PASS: gdb.mi/mi2-var-child.exp: VT: list children of ss_ptr1.3_anonymous.a2
PASS: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.3_anonymous.a2
PASS: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.3_anonymous.a2
PASS: gdb.mi/mi2-var-child.exp: VT: list children of ss_ptr1.3_anonymous.b2
PASS: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.3_anonymous.b2
PASS: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.3_anonymous.b2
PASS: gdb.mi/mi2-var-child.exp: VT: list children of ss_ptr1.u2.a3
PASS: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.u2.a3
PASS: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.u2.a3
PASS: gdb.mi/mi2-var-child.exp: VT: list children of ss_ptr1.u2.b3
PASS: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.u2.b3
PASS: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.u2.b3
PASS: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.u1.a.a
PASS: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.u1.a.a
PASS: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.u1.b.b
PASS: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.u1.b.b
PASS: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.3_anonymous.a2.a
PASS: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.3_anonymous.a2.a
PASS: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.3_anonymous.b2.b
PASS: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.3_anonymous.b2.b
PASS: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.u2.a3.a
PASS: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.u2.a3.a
PASS: gdb.mi/mi2-var-child.exp: path expression for ss_ptr1.u2.b3.b
PASS: gdb.mi/mi2-var-child.exp: expression for ss_ptr1.u2.b3.b
Running ../../../gdb/testsuite/gdb.mi/mi-cmd-param-changed.exp ...
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: breakpoint at main
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: mi runto main
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set scheduler-locking on"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set scheduler-locking off"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set scheduler-locking step"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: interpreter-exec "set scheduler-locking on"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: interpreter-exec "set scheduler-locking off"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: interpreter-exec "set scheduler-locking step"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set scheduler-locking on" no event (requested by MI)
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "-exec-arguments foo" no event
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set scheduler-locking step" no event (requested by MI interp)
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set scheduler-locking stepr" no event
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set remotecache" warmup
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set remotecache on"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set remotecache off"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set remotecache" no event
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set check type" warmup
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set check type on"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set check type off"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set check type" no event
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set trace-notes foo"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set trace-notes bar"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set trace-notes bar" no event
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set remote exec-file foo"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set remote exec-file bar"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set remote exec-file bar" no event
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "maint dwarf always-disassemble on"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "maint dwarf always-disassemble off"
PASS: gdb.mi/mi-cmd-param-changed.exp: cmd param: "set ch type on"
Running ../../../gdb/testsuite/gdb.mi/mi-var-block.exp ...
PASS: gdb.mi/mi-var-block.exp: breakpoint at do_block_tests
PASS: gdb.mi/mi-var-block.exp: mi runto do_block_tests
PASS: gdb.mi/mi-var-block.exp: create local variable cb
PASS: gdb.mi/mi-var-block.exp: try to create local variable foo
PASS: gdb.mi/mi-var-block.exp: step at do_block_test 1
PASS: gdb.mi/mi-var-block.exp: delete var foo 1
PASS: gdb.mi/mi-var-block.exp: create local variable foo
PASS: gdb.mi/mi-var-block.exp: step at do_block_test 2
PASS: gdb.mi/mi-var-block.exp: update all vars: cb foo changed
PASS: gdb.mi/mi-var-block.exp: step at do_block_test 3
PASS: gdb.mi/mi-var-block.exp: create local variable inner_foo
PASS: gdb.mi/mi-var-block.exp: step at do_block_test 4
PASS: gdb.mi/mi-var-block.exp: create local variable foo2
XFAIL: gdb.mi/mi-var-block.exp: update inner_foo: should be out of scope: KNOWN PROBLEM
XFAIL: gdb.mi/mi-var-block.exp: evaluate inner_foo: should be out of scope: KNOWN PROBLEM
PASS: gdb.mi/mi-var-block.exp: update foo: did not change
PASS: gdb.mi/mi-var-block.exp: delete var inner_foo
PASS: gdb.mi/mi-var-block.exp: step at do_block_test 5
XFAIL: gdb.mi/mi-var-block.exp: update foo2: should be out of scope: KNOWN PROBLEM
PASS: gdb.mi/mi-var-block.exp: step at do_block_test 6
XFAIL: gdb.mi/mi-var-block.exp: update foo2 should be out of scope: KNOWN PROBLEM
XFAIL: gdb.mi/mi-var-block.exp: update foo should be out of scope: KNOWN PROBLEM
PASS: gdb.mi/mi-var-block.exp: update cb
PASS: gdb.mi/mi-var-block.exp: delete var foo 2
PASS: gdb.mi/mi-var-block.exp: delete var foo2
PASS: gdb.mi/mi-var-block.exp: delete var cb
Running ../../../gdb/testsuite/gdb.mi/mi-breakpoint-changed.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi-basics.exp ...
PASS: gdb.mi/mi-basics.exp: acceptance of MI operations
PASS: gdb.mi/mi-basics.exp: file-exec-and-symbols operation
PASS: gdb.mi/mi-basics.exp: file-exec-file operation
PASS: gdb.mi/mi-basics.exp: file-symbol-file operation
PASS: gdb.mi/mi-basics.exp: break-delete (all) operation
PASS: gdb.mi/mi-basics.exp: all breakpoints removed
PASS: gdb.mi/mi-basics.exp: environment-directory arg operation
PASS: gdb.mi/mi-basics.exp: environment-directory empty-string operation
PASS: gdb.mi/mi-basics.exp: environment-directory operation
PASS: gdb.mi/mi-basics.exp: environment-cd arg operation
PASS: gdb.mi/mi-basics.exp: environment-pwd operation
PASS: gdb.mi/mi-basics.exp: environment-path
PASS: gdb.mi/mi-basics.exp: environment-path no-args operation
PASS: gdb.mi/mi-basics.exp: environment-path dir1 dir2 operation
PASS: gdb.mi/mi-basics.exp: environment-path -r dir operation
PASS: gdb.mi/mi-basics.exp: environment-path -r operation
PASS: gdb.mi/mi-basics.exp: initial tty is mi_inferior_tty_name
PASS: gdb.mi/mi-basics.exp: set tty to /dev/pts/1
PASS: gdb.mi/mi-basics.exp: tty was set correctly
PASS: gdb.mi/mi-basics.exp: set tty to the empty string
PASS: gdb.mi/mi-basics.exp: make sure tty is empty
PASS: gdb.mi/mi-basics.exp: set tty to mi_inferior_tty_name (the way it was)
PASS: gdb.mi/mi-basics.exp: verify tty is correct
Running ../../../gdb/testsuite/gdb.mi/mi-undefined-cmd.exp ...
PASS: gdb.mi/mi-undefined-cmd.exp: -list-features should include "undefined-command-error-code"
PASS: gdb.mi/mi-undefined-cmd.exp: error code when executing undefined command
Running ../../../gdb/testsuite/gdb.mi/mi-return.exp ...
PASS: gdb.mi/mi-return.exp: breakpoint at callee4
PASS: gdb.mi/mi-return.exp: mi runto callee4
PASS: gdb.mi/mi-return.exp: delete all breakpoints
PASS: gdb.mi/mi-return.exp: return from callee4 now
Running ../../../gdb/testsuite/gdb.mi/mi-cli.exp ...
PASS: gdb.mi/mi-cli.exp: -interpreter-exec with no arguments
PASS: gdb.mi/mi-cli.exp: -interpreter-exec with one argument
PASS: gdb.mi/mi-cli.exp: -interpreter-exec with bogus interpreter
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console bogus
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "file $binfile"
PASS: gdb.mi/mi-cli.exp: breakpoint at main
PASS: gdb.mi/mi-cli.exp: mi runto main
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "set args foobar"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "show args"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "break callee4"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "info break"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "set listsize 1"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "list"
PASS: gdb.mi/mi-cli.exp: continue to callee4
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "delete 2"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "up"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "down"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "frame 2"
PASS: gdb.mi/mi-cli.exp: -stack-select-frame 0
PASS: gdb.mi/mi-cli.exp: check *stopped from CLI command
PASS: gdb.mi/mi-cli.exp: -exec-step does not produce CLI step output
PASS: gdb.mi/mi-cli.exp: check *stopped from CLI command 2
PASS: gdb.mi/mi-cli.exp: CLI finish: check CLI output
PASS: gdb.mi/mi-cli.exp: CLI finish: check MI output
PASS: gdb.mi/mi-cli.exp: -break-insert -t basics.c:$line_main_hello
PASS: gdb.mi/mi-cli.exp: breakpoint hit produces CLI output
PASS: gdb.mi/mi-cli.exp: temporary breakpoint output hit in MI
PASS: gdb.mi/mi-cli.exp: 34 next: run
PASS: gdb.mi/mi-cli.exp: 34 next: CLI output
PASS: gdb.mi/mi-cli.exp: 34 next: stop
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "list" at basics.c:$line_main_return
PASS: gdb.mi/mi-cli.exp: -break-insert -t basics.c:$line_main_callme_2
PASS: gdb.mi/mi-cli.exp: -exec-continue to line $line_main_callme_2
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "set listsize 10"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "list" at basics.c:$line_main_callme_2
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "help set args"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "set $pc=0x0"
Running ../../../gdb/testsuite/gdb.mi/mi-break.exp ...
PASS: gdb.mi/mi-break.exp: break-insert -t operation
PASS: gdb.mi/mi-break.exp: insert temp breakpoint at basics.c:callee2
PASS: gdb.mi/mi-break.exp: insert temp breakpoint at basics.c:$line_callee3_head
PASS: gdb.mi/mi-break.exp: insert temp breakpoint at "<fullfilename>":$line_callee4_head
PASS: gdb.mi/mi-break.exp: list of breakpoints
PASS: gdb.mi/mi-break.exp: delete temp breakpoints
KFAIL: gdb.mi/mi-break.exp: break-insert -r operation (PRMS: mi/14270)
KFAIL: gdb.mi/mi-break.exp: insert breakpoint with regexp callee2 (PRMS: mi/14270)
KFAIL: gdb.mi/mi-break.exp: insert breakpoint with regexp callee (PRMS: mi/14270)
KFAIL: gdb.mi/mi-break.exp: insert breakpoint with regexp .*llee (PRMS: mi/14270)
KFAIL: gdb.mi/mi-break.exp: list of breakpoints (PRMS: mi/14270)
PASS: gdb.mi/mi-break.exp: delete temp breakpoints
PASS: gdb.mi/mi-break.exp: insert breakpoint with ignore count at callme
PASS: gdb.mi/mi-break.exp: run to breakpoint with ignore count
PASS: gdb.mi/mi-break.exp: breakpoint at nonexistent function
PASS: gdb.mi/mi-break.exp: create varobj for function call
PASS: gdb.mi/mi-break.exp: update varobj for function call
PASS: gdb.mi/mi-break.exp: breakpoint with garbage after location
PASS: gdb.mi/mi-break.exp: conditional breakpoint with garbage after location
PASS: gdb.mi/mi-break.exp: test disabled creation
PASS: gdb.mi/mi-break.exp: test disabled creation: cleanup
PASS: gdb.mi/mi-break.exp: breakpoint commands: insert breakpoint at basics.c:callee2
PASS: gdb.mi/mi-break.exp: breakpoint commands: set commands
PASS: gdb.mi/mi-break.exp: breakpoint commands: check that commands are set
PASS: gdb.mi/mi-break.exp: breakpoint commands: clear commands
PASS: gdb.mi/mi-break.exp: breakpoint commands: check that commands are cleared
PASS: gdb.mi/mi-break.exp: breakpoint at main
PASS: gdb.mi/mi-break.exp: mi runto main
PASS: gdb.mi/mi-break.exp: breakpoint commands: insert breakpoint at basics.c:callee2, again
PASS: gdb.mi/mi-break.exp: breakpoint commands: set commands
PASS: gdb.mi/mi-break.exp: intermediate stop and continue
PASS: gdb.mi/mi-break.exp: test hitting breakpoint with commands
PASS: gdb.mi/mi-break.exp: create local variable tpnum
PASS: gdb.mi/mi-break.exp: eval tpnum before tracepoint
PASS: gdb.mi/mi-break.exp: break-insert -a operation
PASS: gdb.mi/mi-break.exp: update tpnum
PASS: gdb.mi/mi-break.exp: eval tpnum after tracepoint
PASS: gdb.mi/mi-break.exp: insert temp explicit breakpoint in main
PASS: gdb.mi/mi-break.exp: insert temp explicit breakpoint at basics.c:callee2
PASS: gdb.mi/mi-break.exp: insert temp explicit breakpoint at basics.c:32
PASS: gdb.mi/mi-break.exp: insert temp explicit breakpoint at "basics.c":23
PASS: gdb.mi/mi-break.exp: list of explicit breakpoints
PASS: gdb.mi/mi-break.exp: delete temp breakpoints
PASS: gdb.mi/mi-break.exp: insert explicit conditional breakpoint in callee2
Running ../../../gdb/testsuite/gdb.mi/mi-fullname-deleted.exp ...
PASS: gdb.mi/mi-fullname-deleted.exp: set substitute-path
PASS: gdb.mi/mi-fullname-deleted.exp: fullname present
PASS: gdb.mi/mi-fullname-deleted.exp: substituted fullname
PASS: gdb.mi/mi-fullname-deleted.exp: compare_filenames_for_search does not match
PASS: gdb.mi/mi-fullname-deleted.exp: compare_filenames_for_search does match
Running ../../../gdb/testsuite/gdb.mi/mi-var-display.exp ...
PASS: gdb.mi/mi-var-display.exp: break-insert operation
PASS: gdb.mi/mi-var-display.exp: run to main
PASS: gdb.mi/mi-var-display.exp: create local variable bar
PASS: gdb.mi/mi-var-display.exp: info type variable bar
PASS: gdb.mi/mi-var-display.exp: show format variable bar
PASS: gdb.mi/mi-var-display.exp: eval variable bar
PASS: gdb.mi/mi-var-display.exp: set format variable bar in zero-padded hexadecimal
PASS: gdb.mi/mi-var-display.exp: set format variable bar in hex
PASS: gdb.mi/mi-var-display.exp: eval variable bar with new format
PASS: gdb.mi/mi-var-display.exp: assing to variable bar
PASS: gdb.mi/mi-var-display.exp: set format variable bar in decimal
PASS: gdb.mi/mi-var-display.exp: eval variable bar with new value
PASS: gdb.mi/mi-var-display.exp: delete var bar
PASS: gdb.mi/mi-var-display.exp: create local variable foo
PASS: gdb.mi/mi-var-display.exp: info type variable foo
PASS: gdb.mi/mi-var-display.exp: show format variable foo in natural
PASS: gdb.mi/mi-var-display.exp: eval variable foo in natural
PASS: gdb.mi/mi-var-display.exp: set format variable foo in octal
PASS: gdb.mi/mi-var-display.exp: show format variable foo in octal
PASS: gdb.mi/mi-var-display.exp: eval variable foo in octal
PASS: gdb.mi/mi-var-display.exp: assing to variable foo
PASS: gdb.mi/mi-var-display.exp: set format variable foo decimal
PASS: gdb.mi/mi-var-display.exp: eval variable foo in decimal
PASS: gdb.mi/mi-var-display.exp: eval variable foo in hex
PASS: gdb.mi/mi-var-display.exp: show format variable foo after eval in hex
PASS: gdb.mi/mi-var-display.exp: eval variable -f octal foo
PASS: gdb.mi/mi-var-display.exp: show format variable foo after eval in octal
PASS: gdb.mi/mi-var-display.exp: eval variable -f decimal foo
PASS: gdb.mi/mi-var-display.exp: show format variable foo after eval in decimal
PASS: gdb.mi/mi-var-display.exp: eval variable -f nat foo
PASS: gdb.mi/mi-var-display.exp: show format variable foo after eval in natural
PASS: gdb.mi/mi-var-display.exp: eval variable foo in binary
PASS: gdb.mi/mi-var-display.exp: show format variable foo after eval in binary
PASS: gdb.mi/mi-var-display.exp: delete var foo
PASS: gdb.mi/mi-var-display.exp: create local variable weird
PASS: gdb.mi/mi-var-display.exp: get children local variable weird
PASS: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr in hex (1)
PASS: gdb.mi/mi-var-display.exp: show format variable weird.func_ptr (hex)
PASS: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr_ptr in hex
PASS: gdb.mi/mi-var-display.exp: show format variable weird.func_ptr_ptr (hex)
PASS: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr in zero-padded hex
PASS: gdb.mi/mi-var-display.exp: show format variable weird.func_ptr (zhex)
PASS: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr_ptr in zero-padded hex
PASS: gdb.mi/mi-var-display.exp: show format variable weird.func_ptr_ptr (zhex)
PASS: gdb.mi/mi-var-display.exp: set format variable weird
PASS: gdb.mi/mi-var-display.exp: set format variable weird.integer
PASS: gdb.mi/mi-var-display.exp: set format variable weird.character
PASS: gdb.mi/mi-var-display.exp: set format variable weird.char_ptr
PASS: gdb.mi/mi-var-display.exp: set format variable weird.long_int
PASS: gdb.mi/mi-var-display.exp: set format variable weird.int_ptr_ptr
PASS: gdb.mi/mi-var-display.exp: set format variable weird.long_array
PASS: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr in hex (2)
PASS: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr_struct
PASS: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr_ptr in natural
PASS: gdb.mi/mi-var-display.exp: set format variable weird.u1
PASS: gdb.mi/mi-var-display.exp: set format variable weird.s2
PASS: gdb.mi/mi-var-display.exp: delete var weird
PASS: gdb.mi/mi-var-display.exp: break-insert operation 2
PASS: gdb.mi/mi-var-display.exp: continue to do_special_tests
PASS: gdb.mi/mi-var-display.exp: create local variable u
PASS: gdb.mi/mi-var-display.exp: eval variable u
PASS: gdb.mi/mi-var-display.exp: info type variable u
PASS: gdb.mi/mi-var-display.exp: is u editable
PASS: gdb.mi/mi-var-display.exp: get number of children of u
PASS: gdb.mi/mi-var-display.exp: get children of u
PASS: gdb.mi/mi-var-display.exp: create local variable anonu
PASS: gdb.mi/mi-var-display.exp: eval variable anonu
PASS: gdb.mi/mi-var-display.exp: info type variable anonu
PASS: gdb.mi/mi-var-display.exp: is anonu editable
PASS: gdb.mi/mi-var-display.exp: get number of children of anonu
PASS: gdb.mi/mi-var-display.exp: get children of anonu
PASS: gdb.mi/mi-var-display.exp: create local variable s
PASS: gdb.mi/mi-var-display.exp: eval variable s
PASS: gdb.mi/mi-var-display.exp: info type variable s
PASS: gdb.mi/mi-var-display.exp: is s editable
PASS: gdb.mi/mi-var-display.exp: get number of children of s
PASS: gdb.mi/mi-var-display.exp: get children of s
PASS: gdb.mi/mi-var-display.exp: create local variable anons
PASS: gdb.mi/mi-var-display.exp: eval variable anons
PASS: gdb.mi/mi-var-display.exp: info type variable anons
PASS: gdb.mi/mi-var-display.exp: is anons editable
PASS: gdb.mi/mi-var-display.exp: get number of children of anons
PASS: gdb.mi/mi-var-display.exp: get children of anons
PASS: gdb.mi/mi-var-display.exp: create local variable e
PASS: gdb.mi/mi-var-display.exp: eval variable e
PASS: gdb.mi/mi-var-display.exp: info type variable e
PASS: gdb.mi/mi-var-display.exp: is e editable
PASS: gdb.mi/mi-var-display.exp: get number of children of e
PASS: gdb.mi/mi-var-display.exp: get children of e
PASS: gdb.mi/mi-var-display.exp: create local variable anone
PASS: gdb.mi/mi-var-display.exp: eval variable anone
PASS: gdb.mi/mi-var-display.exp: create duplicate local variable anone
PASS: gdb.mi/mi-var-display.exp: info type variable anone
PASS: gdb.mi/mi-var-display.exp: is anone editable
PASS: gdb.mi/mi-var-display.exp: get number of children of anone
PASS: gdb.mi/mi-var-display.exp: get children of anone
PASS: gdb.mi/mi-var-display.exp: print FP register
PASS: gdb.mi/mi-var-display.exp: breakpoint at incr_a
PASS: gdb.mi/mi-var-display.exp: mi runto incr_a
PASS: gdb.mi/mi-var-display.exp: create local variable a1
PASS: gdb.mi/mi-var-display.exp: create variable a2 in different scope
Running ../../../gdb/testsuite/gdb.mi/mi-stepi.exp ...
PASS: gdb.mi/mi-stepi.exp: breakpoint at main
PASS: gdb.mi/mi-stepi.exp: mi runto main
PASS: gdb.mi/mi-stepi.exp: step-instruction at main
PASS: gdb.mi/mi-stepi.exp: step-instruction at main (line check)
PASS: gdb.mi/mi-stepi.exp: next-instruction at main
PASS: gdb.mi/mi-stepi.exp: next-instruction at main (line check)
PASS: gdb.mi/mi-stepi.exp: next-instruction at main 2
PASS: gdb.mi/mi-stepi.exp: next-instruction at main 2 (line check)
Running ../../../gdb/testsuite/gdb.mi/mi-inheritance-syntax-error.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi-logging.exp ...
PASS: gdb.mi/mi-logging.exp: breakpoint at main
PASS: gdb.mi/mi-logging.exp: mi runto main
PASS: gdb.mi/mi-logging.exp: logging on
PASS: gdb.mi/mi-logging.exp: logged step
PASS: gdb.mi/mi-logging.exp: logged next
PASS: gdb.mi/mi-logging.exp: logging off
PASS: gdb.mi/mi-logging.exp: Log file contents
PASS: gdb.mi/mi-logging.exp: redirect logging on
PASS: gdb.mi/mi-logging.exp: redirect logging off
PASS: gdb.mi/mi-logging.exp: Redirect log file contents
Running ../../../gdb/testsuite/gdb.mi/mi-var-cp.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi-i-cmd.exp ...
PASS: gdb.mi/mi-i-cmd.exp: -list-features includes "info-gdb-mi-command"
PASS: gdb.mi/mi-i-cmd.exp: -info-gdb-mi-command unsupported-command
PASS: gdb.mi/mi-i-cmd.exp: -info-gdb-mi-command -unsupported-command
PASS: gdb.mi/mi-i-cmd.exp: -info-gdb-mi-command symbol-list-lines
PASS: gdb.mi/mi-i-cmd.exp: -info-gdb-mi-command -symbol-list-lines
Running ../../../gdb/testsuite/gdb.mi/mi-stack.exp ...
PASS: gdb.mi/mi-stack.exp: breakpoint at callee4
PASS: gdb.mi/mi-stack.exp: mi runto callee4
PASS: gdb.mi/mi-stack.exp: stack frame listing
PASS: gdb.mi/mi-stack.exp: stack frame listing 1 1
PASS: gdb.mi/mi-stack.exp: stack frame listing 1 3
PASS: gdb.mi/mi-stack.exp: stack frame listing wrong
PASS: gdb.mi/mi-stack.exp: selected frame listing
PASS: gdb.mi/mi-stack.exp: stack frame listing 1 300
PASS: gdb.mi/mi-stack.exp: stack args listing 0
PASS: gdb.mi/mi-stack.exp: stack args listing 0 1 1
PASS: gdb.mi/mi-stack.exp: stack args listing 0 1 3
PASS: gdb.mi/mi-stack.exp: stack args listing 1
PASS: gdb.mi/mi-stack.exp: stack args listing 1 1 1
PASS: gdb.mi/mi-stack.exp: stack args listing 1 1 3
PASS: gdb.mi/mi-stack.exp: stack args listing wrong
PASS: gdb.mi/mi-stack.exp: stack args listing 1 1 300
PASS: gdb.mi/mi-stack.exp: stack locals listing of names
PASS: gdb.mi/mi-stack.exp: next's in callee4
PASS: gdb.mi/mi-stack.exp: stack locals listing of names and values
PASS: gdb.mi/mi-stack.exp: stack locals listing, simple types: names and values, complex type: names and types
PASS: gdb.mi/mi-stack.exp: stack locals listing wrong
PASS: gdb.mi/mi-stack.exp: stack select frame 1
PASS: gdb.mi/mi-stack.exp: stack locals listing for new frame
PASS: gdb.mi/mi-stack.exp: stack locals for same frame (level 1)
PASS: gdb.mi/mi-stack.exp: stack info-depth
PASS: gdb.mi/mi-stack.exp: stack info-depth 3
PASS: gdb.mi/mi-stack.exp: stack info-depth 99
PASS: gdb.mi/mi-stack.exp: stack info-depth wrong usage
Running ../../../gdb/testsuite/gdb.mi/gdb701.exp ...
PASS: gdb.mi/gdb701.exp: breakpoint at main
PASS: gdb.mi/gdb701.exp: mi runto main
PASS: gdb.mi/gdb701.exp: step over "foo = 0"
PASS: gdb.mi/gdb701.exp: create fooPtr
PASS: gdb.mi/gdb701.exp: list children of fooPtr
PASS: gdb.mi/gdb701.exp: list children of fooPtr.x
PASS: gdb.mi/gdb701.exp: list children of fooPtr.y
PASS: gdb.mi/gdb701.exp: list children of fooPtr.z
Running ../../../gdb/testsuite/gdb.mi/gdb792.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi-pthreads.exp ...
UNSUPPORTED: gdb.mi/mi-pthreads.exp: Couldn't compile pthreads.c: unrecognized error
Running ../../../gdb/testsuite/gdb.mi/mi-reverse.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi-eval.exp ...
PASS: gdb.mi/mi-eval.exp: breakpoint at callee4
PASS: gdb.mi/mi-eval.exp: mi runto callee4
PASS: gdb.mi/mi-eval.exp: next at callee4
PASS: gdb.mi/mi-eval.exp: eval A
PASS: gdb.mi/mi-eval.exp: eval &A
PASS: gdb.mi/mi-eval.exp: eval A+3
PASS: gdb.mi/mi-eval.exp: eval A + 3
Running ../../../gdb/testsuite/gdb.mi/mi-dprintf.exp ...
PASS: gdb.mi/mi-dprintf.exp: breakpoint at main
PASS: gdb.mi/mi-dprintf.exp: mi runto main
PASS: gdb.mi/mi-dprintf.exp: mi insert without location
PASS: gdb.mi/mi-dprintf.exp: mi insert breakpoint without format string
PASS: gdb.mi/mi-dprintf.exp: mi insert second breakpoint without format string
PASS: gdb.mi/mi-dprintf.exp: mi insert breakpoint main
PASS: gdb.mi/mi-dprintf.exp: explicit dprintf at main
PASS: gdb.mi/mi-dprintf.exp: explicit breakpoint at mi-dprintf.c:30
PASS: gdb.mi/mi-dprintf.exp: invalid explicit dprintf
PASS: gdb.mi/mi-dprintf.exp: mi insert dprintf foo
PASS: gdb.mi/mi-dprintf.exp: mi insert dprintf dp_location1
PASS: gdb.mi/mi-dprintf.exp: mi info dprintf
PASS: gdb.mi/mi-dprintf.exp: mi insert breakpoint bp_location1
PASS: gdb.mi/mi-dprintf.exp: gdb: mi 1st dprintf
PASS: gdb.mi/mi-dprintf.exp: gdb: mi 1st dprintf stop
PASS: gdb.mi/mi-dprintf.exp: gdb: mi 2nd dprintf
PASS: gdb.mi/mi-dprintf.exp: gdb: mi 2nd dprintf stop
UNSUPPORTED: gdb.mi/mi-dprintf.exp: set dprintf style to agent
PASS: gdb.mi/mi-dprintf.exp: mi set dprintf style to an unrecognized type
Running ../../../gdb/testsuite/gdb.mi/mi-language.exp ...
PASS: gdb.mi/mi-language.exp: -list-features should include "language-option"
PASS: gdb.mi/mi-language.exp: set lang ada
PASS: gdb.mi/mi-language.exp: sizeof expression using current language
PASS: gdb.mi/mi-language.exp: sizeof expression using C language
PASS: gdb.mi/mi-language.exp: set lang ada
PASS: gdb.mi/mi-language.exp: data-evaluate-expression with invalid language name
PASS: gdb.mi/mi-language.exp: data-evaluate-expression with language auto
PASS: gdb.mi/mi-language.exp: data-evaluate-expression with language local
PASS: gdb.mi/mi-language.exp: data-evaluate-expression with language unknown
Running ../../../gdb/testsuite/gdb.mi/mi-record-changed.exp ...
Running ../../../gdb/testsuite/gdb.mi/dw2-ref-missing-frame.exp ...
UNSUPPORTED: gdb.mi/dw2-ref-missing-frame.exp: dw2-ref-missing-frame.exp
Running ../../../gdb/testsuite/gdb.mi/mi-nsmoribund.exp ...
UNSUPPORTED: gdb.mi/mi-nsmoribund.exp: Couldn't compile nsmoribund.c: unrecognized error
Running ../../../gdb/testsuite/gdb.mi/mi-var-invalidate.exp ...
PASS: gdb.mi/mi-var-invalidate.exp: create global variable
PASS: gdb.mi/mi-var-invalidate.exp: breakpoint at do_locals_tests
PASS: gdb.mi/mi-var-invalidate.exp: mi runto do_locals_tests
PASS: gdb.mi/mi-var-invalidate.exp: create local variable linteger
PASS: gdb.mi/mi-var-invalidate.exp: create floating variable
PASS: gdb.mi/mi-var-invalidate.exp: breakpoint at main
PASS: gdb.mi/mi-var-invalidate.exp: mi runto main
PASS: gdb.mi/mi-var-invalidate.exp: set format variable float_simple
PASS: gdb.mi/mi-var-invalidate.exp: linteger not anymore in scope due to binary changes
PASS: gdb.mi/mi-var-invalidate.exp: no type for invalid variable linteger (1)
PASS: gdb.mi/mi-var-invalidate.exp: global_simple still alive
PASS: gdb.mi/mi-var-invalidate.exp: type simpleton for valid variable global_simple
PASS: gdb.mi/mi-var-invalidate.exp: linteger not valid anymore due to binary changes
PASS: gdb.mi/mi-var-invalidate.exp: no type for invalid variable linteger (2)
PASS: gdb.mi/mi-var-invalidate.exp: global_simple not anymore in scope due to binary changes
PASS: gdb.mi/mi-var-invalidate.exp: no type for invalid variable global_simple
Running ../../../gdb/testsuite/gdb.mi/mi-syn-frame.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi-condbreak-call-thr-state.exp ...
UNSUPPORTED: gdb.mi/mi-condbreak-call-thr-state.exp: mi-condbreak-call-thr-state.exp
Running ../../../gdb/testsuite/gdb.mi/mi-var-child.exp ...
PASS: gdb.mi/mi-var-child.exp: breakpoint at do_children_tests
PASS: gdb.mi/mi-var-child.exp: mi runto do_children_tests
PASS: gdb.mi/mi-var-child.exp: run to 229 (set breakpoint)
PASS: gdb.mi/mi-var-child.exp: create local variable struct_declarations
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.integer
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.integer
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.character
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.character
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_int
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_int
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.func_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.func_ptr
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.func_ptr_struct
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.func_ptr_struct
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.func_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.func_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.u1
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.u1
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.1
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.1
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.2
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.2
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.3
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.3
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.4
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.4
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.5
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.5
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.6
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.6
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.7
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.7
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.8
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.8
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.9
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.9
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.u1.a
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.u1.a
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.u1.b
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.u1.b
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.u1.c
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.u1.c
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.u1.d
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.u1.d
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.g
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.g
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.h
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.h
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.i
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.i
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s1
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.f
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.f
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s2
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s1.d
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.d
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s1.e
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.e
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s1.func
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.func
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s1.foo
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.foo
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s2.array_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2.array_ptr
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s2.func
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2.func
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: step to line $line_dct_123
PASS: gdb.mi/mi-var-child.exp: create local variable weird
PASS: gdb.mi/mi-var-child.exp: get children of weird
PASS: gdb.mi/mi-var-child.exp: get number of children of weird
PASS: gdb.mi/mi-var-child.exp: get children of weird.long_array
PASS: gdb.mi/mi-var-child.exp: get number of children of weird.long_array
PASS: gdb.mi/mi-var-child.exp: get children of weird.int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of weird.int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get children of weird.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of weird.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: create local variable weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get children of weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get children of weird->int_ptr_ptr.*weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of weird->int_ptr_ptr.*weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get children of weird->int_ptr_ptr.*weird->int_ptr_ptr.**weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of weird->int_ptr_ptr.*weird->int_ptr_ptr.**weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: is weird editable
PASS: gdb.mi/mi-var-child.exp: is weird->int_ptr_ptr editable
PASS: gdb.mi/mi-var-child.exp: is weird.int_ptr_ptr.*int_ptr_ptr editable
PASS: gdb.mi/mi-var-child.exp: is weird.int_ptr_ptr.*int_ptr_ptr.**int_ptr_ptr editable
PASS: gdb.mi/mi-var-child.exp: is weird.u1 editable
PASS: gdb.mi/mi-var-child.exp: is weird.s2 editable
PASS: gdb.mi/mi-var-child.exp: is struct_declarations.u1.a editable
PASS: gdb.mi/mi-var-child.exp: is struct_declarations.u1.b editable
PASS: gdb.mi/mi-var-child.exp: is struct_declarations.u1.c editable
PASS: gdb.mi/mi-var-child.exp: is struct_declarations.long_array editable
PASS: gdb.mi/mi-var-child.exp: is struct_declarations.long_array.0 editable
PASS: gdb.mi/mi-var-child.exp: is struct_declarations editable
PASS: gdb.mi/mi-var-child.exp: delete var weird
PASS: gdb.mi/mi-var-child.exp: update all vars. None changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_123 + 1
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.integer
PASS: gdb.mi/mi-var-child.exp: step $line_dct_123 + 4
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.char_ptr
PASS: gdb.mi/mi-var-child.exp: step $line_dct_123 + 5
PASS: gdb.mi/mi-var-child.exp: update all vars int_ptr_ptr and children changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_123 + 6
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.0 changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_123 + 7
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.1 changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_123 + 8
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.2 changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_nothing
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.3-9 changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_nothing + 1
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.func_ptr changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_nothing + 2
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.func_ptr_struct changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_nothing + 3
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.func_ptr_ptr changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_nothing + 4
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.10 changed, don't print values.
PASS: gdb.mi/mi-var-child.exp: step $line_dct_a0_0
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.11 changed, print values.
PASS: gdb.mi/mi-var-child.exp: listing of names and values of children
PASS: gdb.mi/mi-var-child.exp: listing of children, simple types: names, type and values, complex types: names and types
PASS: gdb.mi/mi-var-child.exp: delete var struct_declarations
PASS: gdb.mi/mi-var-child.exp: delete var weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 1
PASS: gdb.mi/mi-var-child.exp: create local variable  psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr.****psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr.****psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: create local variable  psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr.****psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr.****psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: create local variable  psnp->ptrs
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.next
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.next.ptrs
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 2
PASS: gdb.mi/mi-var-child.exp: update all vars psnp->char_ptr (and 0.char_ptr) changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 3
PASS: gdb.mi/mi-var-child.exp: update all vars psnp->next->char_ptr (and 1.char_ptr) changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 4
PASS: gdb.mi/mi-var-child.exp: update all vars psnp->next->next->char_ptr (and 2.char_ptr) changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 5
PASS: gdb.mi/mi-var-child.exp: update all vars psnp->long_ptr (and 0.long_ptr) changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 6
XFAIL: gdb.mi/mi-var-child.exp: update all vars psnp->next->long_ptr (and 1.long_ptr) changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 7
PASS: gdb.mi/mi-var-child.exp: update all vars psnp->next->next->long_ptr (and 2.long_ptr) changed
PASS: gdb.mi/mi-var-child.exp: run to mi-var-child.c:339 (set breakpoint)
PASS: gdb.mi/mi-var-child.exp: create varobj for s
PASS: gdb.mi/mi-var-child.exp: list children of S
PASS: gdb.mi/mi-var-child.exp: delete S.a
PASS: gdb.mi/mi-var-child.exp: delete S.b
PASS: gdb.mi/mi-var-child.exp: delete S
Running ../../../gdb/testsuite/gdb.mi/mi-simplerun.exp ...
PASS: gdb.mi/mi-simplerun.exp: break-insert operation
PASS: gdb.mi/mi-simplerun.exp: insert breakpoint at basics.c:callee2
PASS: gdb.mi/mi-simplerun.exp: insert breakpoint at basics.c:$line_callee3_head
PASS: gdb.mi/mi-simplerun.exp: insert breakpoint at "<fullfilename>":$line_callee4_head
PASS: gdb.mi/mi-simplerun.exp: list of breakpoints
PASS: gdb.mi/mi-simplerun.exp: disabling of breakpoints
PASS: gdb.mi/mi-simplerun.exp: list of breakpoints, 16 disabled
PASS: gdb.mi/mi-simplerun.exp: run to main
PASS: gdb.mi/mi-simplerun.exp: next at main
PASS: gdb.mi/mi-simplerun.exp: step at main
PASS: gdb.mi/mi-simplerun.exp: step to callee4
PASS: gdb.mi/mi-simplerun.exp: exec-finish
PASS: gdb.mi/mi-simplerun.exp: continue to end
Running ../../../gdb/testsuite/gdb.mi/mi-start.exp ...
UNTESTED: gdb.mi/mi-start.exp: cannot use -exec-run command
Running ../../../gdb/testsuite/gdb.mi/mi2-amd64-entry-value.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi-var-create-rtti.exp ...
PASS: gdb.mi/mi-var-create-rtti.exp: breakpoint at main
PASS: gdb.mi/mi-var-create-rtti.exp: mi runto main
PASS: gdb.mi/mi-var-create-rtti.exp: -var-create sp1 * $sp
Running ../../../gdb/testsuite/gdb.mi/mi-until.exp ...
PASS: gdb.mi/mi-until.exp: break-insert operation
PASS: gdb.mi/mi-until.exp: run to main
PASS: gdb.mi/mi-until.exp: break-delete 1
KFAIL: gdb.mi/mi-until.exp: until after while loop (stopped at wrong place) (PRMS: gdb/2104)
PASS: gdb.mi/mi-until.exp: until line number
PASS: gdb.mi/mi-until.exp: until line number:file
PASS: gdb.mi/mi-until.exp: until after current function
Running ../../../gdb/testsuite/gdb.mi/mi-var-child-f.exp ...
PASS: gdb.mi/mi-var-child-f.exp: breakpoint at MAIN__
PASS: gdb.mi/mi-var-child-f.exp: mi runto MAIN__
PASS: gdb.mi/mi-var-child-f.exp: create local variable array
PASS: gdb.mi/mi-var-child-f.exp: get children of array
PASS: gdb.mi/mi-var-child-f.exp: get grandchildren of array (children of first element of second index)
Running ../../../gdb/testsuite/gdb.mi/mi-watch-nonstop.exp ...
PASS: gdb.mi/mi-watch-nonstop.exp: breakpoint at main
PASS: gdb.mi/mi-watch-nonstop.exp: mi runto main
PASS: gdb.mi/mi-watch-nonstop.exp: break-watch operation
PASS: gdb.mi/mi-watch-nonstop.exp: delete watchpoint
Running ../../../gdb/testsuite/gdb.mi/mi-read-memory.exp ...
PASS: gdb.mi/mi-read-memory.exp: breakpoint at main
PASS: gdb.mi/mi-read-memory.exp: mi runto main
PASS: gdb.mi/mi-read-memory.exp: next at main
PASS: gdb.mi/mi-read-memory.exp: no arguments
PASS: gdb.mi/mi-read-memory.exp: 3x2, one byte
PASS: gdb.mi/mi-read-memory.exp: 3x2, one byte offset by -6
PASS: gdb.mi/mi-read-memory.exp: expression in quotes
PASS: gdb.mi/mi-read-memory.exp: ascii and data
PASS: gdb.mi/mi-read-memory.exp: decimal
PASS: gdb.mi/mi-read-memory.exp: octal
Running ../../../gdb/testsuite/gdb.mi/mi-nsthrexec.exp ...
UNSUPPORTED: gdb.mi/mi-nsthrexec.exp: Couldn't compile nsthrexec.c: unrecognized error
Running ../../../gdb/testsuite/gdb.mi/gdb669.exp ...
UNSUPPORTED: gdb.mi/gdb669.exp: Couldn't compile pthreads.c: unrecognized error
Running ../../../gdb/testsuite/gdb.base/auto-connect-native-target.exp ...
UNSUPPORTED: gdb.base/auto-connect-native-target.exp: No "target native" support.
Running ../../../gdb/testsuite/gdb.base/start.exp ...
UNTESTED: gdb.base/start.exp: start
Running ../../../gdb/testsuite/gdb.base/dmsym.exp ...
PASS: gdb.base/dmsym.exp: set lang ada
PASS: gdb.base/dmsym.exp: break pck__foo__bar__minsym
PASS: gdb.base/dmsym.exp: info line pck__foo__bar__minsym
PASS: gdb.base/dmsym.exp: set lang auto
PASS: gdb.base/dmsym.exp: Run until breakpoint at BREAK
PASS: gdb.base/dmsym.exp: continue
PASS: gdb.base/dmsym.exp: print val
Running ../../../gdb/testsuite/gdb.base/shell.exp ...
PASS: gdb.base/shell.exp: shell echo foo
PASS: gdb.base/shell.exp: ! echo foo
PASS: gdb.base/shell.exp: !echo foo
Running ../../../gdb/testsuite/gdb.base/watchpoint-hw.exp ...
Running ../../../gdb/testsuite/gdb.base/echo.exp ...
PASS: gdb.base/echo.exp: Echo test
Running ../../../gdb/testsuite/gdb.base/commands.exp ...
PASS: gdb.base/commands.exp: set foo in gdbvar_simple_if_test
PASS: gdb.base/commands.exp: gdbvar_simple_if_test #1
PASS: gdb.base/commands.exp: gdbvar_simple_if_test #2
PASS: gdb.base/commands.exp: set foo in gdbvar_simple_while_test
PASS: gdb.base/commands.exp: gdbvar_simple_while_test #1
PASS: gdb.base/commands.exp: set foo in gdbvar complex_if_while_test
PASS: gdb.base/commands.exp: gdbvar_complex_if_while_test #1
PASS: gdb.base/commands.exp: set value to 5 in progvar_simple_if_test #1
PASS: gdb.base/commands.exp: progvar_simple_if_test #1
PASS: gdb.base/commands.exp: progvar_simple_if_test #2
PASS: gdb.base/commands.exp: set value to 5 in progvar_simple_if_test #2
PASS: gdb.base/commands.exp: progvar_simple_while_test #1
PASS: gdb.base/commands.exp: set value to 4 in progvar_simple_if_test
PASS: gdb.base/commands.exp: progvar_complex_if_while_test #1
PASS: gdb.base/commands.exp: set value to 5 in progvar_simple_if_test
PASS: gdb.base/commands.exp: break factorial #1
PASS: gdb.base/commands.exp: commands in if_while_breakpoint_command_test
PASS: gdb.base/commands.exp: commands part 2 in if_while_breakpoint_command_test
PASS: gdb.base/commands.exp: if_while_breakpoint_command_test #1
PASS: gdb.base/commands.exp: info break in if_while_breakpoint_command_test
PASS: gdb.base/commands.exp: set value to 6 in progvar_simple_if_test #1
PASS: gdb.base/commands.exp: break factorial if value == 5
PASS: gdb.base/commands.exp: commands in infrun_breakpoint_command_test #1
PASS: gdb.base/commands.exp: commands in infrun_breakpoint_command_test #2
PASS: gdb.base/commands.exp: continue in infrun_breakpoint_command_test
PASS: gdb.base/commands.exp: set value to 6 in progvar_simple_if_test #2
PASS: gdb.base/commands.exp: break factorial #2
PASS: gdb.base/commands.exp: commands in breakpoint_command_test
PASS: gdb.base/commands.exp: continue in breakpoint_command_test
PASS: gdb.base/commands.exp: print value in breakpoint_command_test
PASS: gdb.base/commands.exp: set foo in user_defined_command_test
PASS: gdb.base/commands.exp: define mycommand in user_defined_command_test
PASS: gdb.base/commands.exp: enter commands in user_defined_command_test
PASS: gdb.base/commands.exp: execute user defined command in user_defined_command_test
PASS: gdb.base/commands.exp: display user command in user_defined_command_test
PASS: gdb.base/commands.exp: define myemptycommand in user_defined_command_test
PASS: gdb.base/commands.exp: end definition of user-defined command with empty body
PASS: gdb.base/commands.exp: execute user-defined empty command in user_defined_command_test
PASS: gdb.base/commands.exp: display empty command in command list in user_defined_command_test
PASS: gdb.base/commands.exp: display user-defined empty command in user_defined_command_test
PASS: gdb.base/commands.exp: watch local_var
PASS: gdb.base/commands.exp: begin commands on watch
PASS: gdb.base/commands.exp: add print command to watch
PASS: gdb.base/commands.exp: add continue command to watch
PASS: gdb.base/commands.exp: end commands on watch
PASS: gdb.base/commands.exp: continue with watch
PASS: gdb.base/commands.exp: break factorial #3
PASS: gdb.base/commands.exp: set value to 5 in test_command_prompt_position
PASS: gdb.base/commands.exp: if test in test_command_prompt_position
PASS: gdb.base/commands.exp: > OK in test_command_prompt_position
PASS: gdb.base/commands.exp: tried to deprecate non-existing command
PASS: gdb.base/commands.exp: maintenance deprecate p "new_p" /1/
PASS: gdb.base/commands.exp: p deprecated warning, with replacement
PASS: gdb.base/commands.exp: Deprecated warning goes away /1/
PASS: gdb.base/commands.exp: maintenance deprecate p "new_p" /2/
PASS: gdb.base/commands.exp: maintenance deprecate print "new_print"
PASS: gdb.base/commands.exp: both alias and command are deprecated
PASS: gdb.base/commands.exp: Deprecated warning goes away /2/
PASS: gdb.base/commands.exp: deprecate long command /1/
PASS: gdb.base/commands.exp: long command deprecated /1/
PASS: gdb.base/commands.exp: deprecate long command /2/
PASS: gdb.base/commands.exp: long command deprecated with no alternative /2/
PASS: gdb.base/commands.exp: deprecate with no arguments
PASS: gdb.base/commands.exp: breakpoint in bp_deleted_in_command_test
PASS: gdb.base/commands.exp: begin commands in bp_deleted_in_command_test
PASS: gdb.base/commands.exp: add silent command
PASS: gdb.base/commands.exp: add clear command
PASS: gdb.base/commands.exp: add printf command
PASS: gdb.base/commands.exp: add cont command
PASS: gdb.base/commands.exp: end commands
PASS: gdb.base/commands.exp: run factorial until breakpoint
PASS: gdb.base/commands.exp: breakpoint in temporary_breakpoint_commands
PASS: gdb.base/commands.exp: begin commands in bp_deleted_in_command_test
PASS: gdb.base/commands.exp: add silent tbreak command
PASS: gdb.base/commands.exp: add printf tbreak command
PASS: gdb.base/commands.exp: add cont tbreak command
PASS: gdb.base/commands.exp: end tbreak commands
PASS: gdb.base/commands.exp: run factorial until temporary breakpoint
PASS: gdb.base/commands.exp: stray_arg0_test #1
PASS: gdb.base/commands.exp: stray_arg0_test #2
PASS: gdb.base/commands.exp: stray_arg0_test #3
PASS: gdb.base/commands.exp: stray_arg0_test #4
PASS: gdb.base/commands.exp: source file with indented comment
PASS: gdb.base/commands.exp: recursive source test
PASS: gdb.base/commands.exp: set $tem in if_commands_test
PASS: gdb.base/commands.exp: if $tem == 2 - if_commands_test 1
PASS: gdb.base/commands.exp: break main - if_commands_test 1
PASS: gdb.base/commands.exp: else - if_commands_test 1
PASS: gdb.base/commands.exp: break factorial - if_commands_test 1
PASS: gdb.base/commands.exp: commands - if_commands_test 1
PASS: gdb.base/commands.exp: silent - if_commands_test 1
PASS: gdb.base/commands.exp: set $tem = 3 - if_commands_test 1
PASS: gdb.base/commands.exp: continue - if_commands_test 1
PASS: gdb.base/commands.exp: first end - if_commands_test 1
PASS: gdb.base/commands.exp: second end - if_commands_test 1
PASS: gdb.base/commands.exp: if $tem == 1 - if_commands_test 2
PASS: gdb.base/commands.exp: break main - if_commands_test 2
PASS: gdb.base/commands.exp: else - if_commands_test 2
PASS: gdb.base/commands.exp: break factorial - if_commands_test 2
PASS: gdb.base/commands.exp: commands - if_commands_test 2
PASS: gdb.base/commands.exp: silent - if_commands_test 2
PASS: gdb.base/commands.exp: set $tem = 3 - if_commands_test 2
PASS: gdb.base/commands.exp: continue - if_commands_test 2
PASS: gdb.base/commands.exp: first end - if_commands_test 2
PASS: gdb.base/commands.exp: second end - if_commands_test 2
PASS: gdb.base/commands.exp: hook-stop 1
PASS: gdb.base/commands.exp: hook-stop 1a
PASS: gdb.base/commands.exp: hook-stop 1b
PASS: gdb.base/commands.exp: main commands 1
PASS: gdb.base/commands.exp: main commands 1a
PASS: gdb.base/commands.exp: main commands 1b
PASS: gdb.base/commands.exp: main commands 1c
PASS: gdb.base/commands.exp: main commands 2
PASS: gdb.base/commands.exp: main commands 2a
PASS: gdb.base/commands.exp: main commands 2b
PASS: gdb.base/commands.exp: main commands 2c
PASS: gdb.base/commands.exp: cmd1 error
PASS: gdb.base/commands.exp: no cmd2
PASS: gdb.base/commands.exp: define one
PASS: gdb.base/commands.exp: define hook-one
PASS: gdb.base/commands.exp: define one in redefine_hook_test
PASS: gdb.base/commands.exp: enter commands for one redefinition in redefine_hook_test
PASS: gdb.base/commands.exp: execute one command in redefine_hook_test
PASS: gdb.base/commands.exp: define backtrace
PASS: gdb.base/commands.exp: expect response to define backtrace
PASS: gdb.base/commands.exp: enter commands in redefine_backtrace_test
PASS: gdb.base/commands.exp: execute backtrace command in redefine_backtrace_test
PASS: gdb.base/commands.exp: execute bt command in redefine_backtrace_test
Running ../../../gdb/testsuite/gdb.base/valgrind-disp-step.exp ...
Running ../../../gdb/testsuite/gdb.base/included.exp ...
PASS: gdb.base/included.exp: set listsize 1
PASS: gdb.base/included.exp: list main
PASS: gdb.base/included.exp: list integer
PASS: gdb.base/included.exp: ptype integer
PASS: gdb.base/included.exp: info variables integer
Running ../../../gdb/testsuite/gdb.base/watchpoint-stops-at-right-insn.exp ...
PASS: gdb.base/watchpoint-stops-at-right-insn.exp: set breakpoint always-inserted on
PASS: gdb.base/watchpoint-stops-at-right-insn.exp: set probe hw watchpoint
PASS: gdb.base/watchpoint-stops-at-right-insn.exp: always-inserted off: set can-use-hw-watchpoints 0
PASS: gdb.base/watchpoint-stops-at-right-insn.exp: always-inserted off: set software watchpoint on global variable
PASS: gdb.base/watchpoint-stops-at-right-insn.exp: always-inserted off: software watchpoint triggers
PASS: gdb.base/watchpoint-stops-at-right-insn.exp: always-inserted off: get sw watchpoint PC
PASS: gdb.base/watchpoint-stops-at-right-insn.exp: always-inserted off: set can-use-hw-watchpoints 1
PASS: gdb.base/watchpoint-stops-at-right-insn.exp: always-inserted off: set hardware watchpoint on global variable
PASS: gdb.base/watchpoint-stops-at-right-insn.exp: always-inserted off: hardware watchpoint triggers
PASS: gdb.base/watchpoint-stops-at-right-insn.exp: always-inserted off: get hw watchpoint PC
PASS: gdb.base/watchpoint-stops-at-right-insn.exp: always-inserted off: hw watchpoint stops at right instruction
PASS: gdb.base/watchpoint-stops-at-right-insn.exp: always-inserted on: set can-use-hw-watchpoints 0
PASS: gdb.base/watchpoint-stops-at-right-insn.exp: always-inserted on: set software watchpoint on global variable
PASS: gdb.base/watchpoint-stops-at-right-insn.exp: always-inserted on: software watchpoint triggers
PASS: gdb.base/watchpoint-stops-at-right-insn.exp: always-inserted on: get sw watchpoint PC
PASS: gdb.base/watchpoint-stops-at-right-insn.exp: always-inserted on: set can-use-hw-watchpoints 1
PASS: gdb.base/watchpoint-stops-at-right-insn.exp: always-inserted on: set hardware watchpoint on global variable
PASS: gdb.base/watchpoint-stops-at-right-insn.exp: always-inserted on: hardware watchpoint triggers
PASS: gdb.base/watchpoint-stops-at-right-insn.exp: always-inserted on: get hw watchpoint PC
PASS: gdb.base/watchpoint-stops-at-right-insn.exp: always-inserted on: hw watchpoint stops at right instruction
Running ../../../gdb/testsuite/gdb.base/func-ptr.exp ...
PASS: gdb.base/func-ptr.exp: print pbar->baz
Running ../../../gdb/testsuite/gdb.base/gdb1250.exp ...
PASS: gdb.base/gdb1250.exp: backtrace from abort
Running ../../../gdb/testsuite/gdb.base/signals.exp ...
Running ../../../gdb/testsuite/gdb.base/print-symbol-loading.exp ...
Running ../../../gdb/testsuite/gdb.base/return.exp ...
PASS: gdb.base/return.exp: simple return
PASS: gdb.base/return.exp: break func2
PASS: gdb.base/return.exp: break func3
PASS: gdb.base/return.exp: continue to return of -5
PASS: gdb.base/return.exp: next over call to func2
PASS: gdb.base/return.exp: correct value returned (integer test)
PASS: gdb.base/return.exp: continue to return of -5.0
PASS: gdb.base/return.exp: next over call to func3
PASS: gdb.base/return.exp: correct value returned double test (known problem with sparc solaris)
Running ../../../gdb/testsuite/gdb.base/trace-commands.exp ...
PASS: gdb.base/trace-commands.exp: show trace-commands says off
PASS: gdb.base/trace-commands.exp: source -v
PASS: gdb.base/trace-commands.exp: set trace-commands
PASS: gdb.base/trace-commands.exp: show trace-commands says on
PASS: gdb.base/trace-commands.exp: simple trace-commands test
PASS: gdb.base/trace-commands.exp: nested trace-commands test
PASS: gdb.base/trace-commands.exp: define user command
PASS: gdb.base/trace-commands.exp: nested trace-commands test with source
PASS: gdb.base/trace-commands.exp: depth resets on error part 1
PASS: gdb.base/trace-commands.exp: depth resets on error part 2
Running ../../../gdb/testsuite/gdb.base/find.exp ...
PASS: gdb.base/find.exp: breakpoint function in file
PASS: gdb.base/find.exp: run until function breakpoint
PASS: gdb.base/find.exp: find string pattern
PASS: gdb.base/find.exp: pattern not found at end of range
PASS: gdb.base/find.exp: pattern found at end of range
PASS: gdb.base/find.exp: max-count
PASS: gdb.base/find.exp: $_
PASS: gdb.base/find.exp: $numfound
PASS: gdb.base/find.exp: size,max-count, /1b
PASS: gdb.base/find.exp: size,max-count, /b1
PASS: gdb.base/find.exp: size,max-count, /b/1
PASS: gdb.base/find.exp: size,max-count, /1/b
PASS: gdb.base/find.exp: find byte pattern with end address
PASS: gdb.base/find.exp: find 16-bit pattern
PASS: gdb.base/find.exp: find 16-bit pattern
PASS: gdb.base/find.exp: find 32-bit pattern
PASS: gdb.base/find.exp: find 32-bit pattern
PASS: gdb.base/find.exp: find 64-bit pattern
PASS: gdb.base/find.exp: find 64-bit pattern
PASS: gdb.base/find.exp: find mixed-sized pattern
PASS: gdb.base/find.exp: search spanning large range
PASS: gdb.base/find.exp: find int64_search_buf, +64/8*100, int64_search_buf
Running ../../../gdb/testsuite/gdb.base/arithmet.exp ...
PASS: gdb.base/arithmet.exp: set variable x=14
PASS: gdb.base/arithmet.exp: set variable y=2
PASS: gdb.base/arithmet.exp: set variable z=2
PASS: gdb.base/arithmet.exp: set variable w=3
PASS: gdb.base/arithmet.exp: print x
PASS: gdb.base/arithmet.exp: print y
PASS: gdb.base/arithmet.exp: print z
PASS: gdb.base/arithmet.exp: print w
PASS: gdb.base/arithmet.exp: print x+y
PASS: gdb.base/arithmet.exp: print x-y
PASS: gdb.base/arithmet.exp: print x*y
PASS: gdb.base/arithmet.exp: print x/y
PASS: gdb.base/arithmet.exp: print x%y
PASS: gdb.base/arithmet.exp: print x+y+z
PASS: gdb.base/arithmet.exp: print x-y-z
PASS: gdb.base/arithmet.exp: print x*y*z
PASS: gdb.base/arithmet.exp: print x/y/z
PASS: gdb.base/arithmet.exp: print x%y%z
PASS: gdb.base/arithmet.exp: set variable x=10
PASS: gdb.base/arithmet.exp: set variable y=4
PASS: gdb.base/arithmet.exp: print x+y-z
PASS: gdb.base/arithmet.exp: print x+y*z
PASS: gdb.base/arithmet.exp: print x+y%w
PASS: gdb.base/arithmet.exp: print x+y/w
PASS: gdb.base/arithmet.exp: print x-y*z
PASS: gdb.base/arithmet.exp: print x-y%z
PASS: gdb.base/arithmet.exp: print x-y/z
PASS: gdb.base/arithmet.exp: print x*y/z
PASS: gdb.base/arithmet.exp: print x*y%w
PASS: gdb.base/arithmet.exp: print x/y%w
PASS: gdb.base/arithmet.exp: print x-(y+w)
PASS: gdb.base/arithmet.exp: print x/(y*w)
PASS: gdb.base/arithmet.exp: print x-(y/w)
PASS: gdb.base/arithmet.exp: print (x+y)*w
Running ../../../gdb/testsuite/gdb.base/valgrind-infcall.exp ...
Running ../../../gdb/testsuite/gdb.base/overlays.exp ...
Running ../../../gdb/testsuite/gdb.base/ifelse.exp ...
PASS: gdb.base/ifelse.exp: if 1 with empty body
PASS: gdb.base/ifelse.exp: if 0 with empty body
PASS: gdb.base/ifelse.exp: if true else false #1
PASS: gdb.base/ifelse.exp: if 1 .. else with empty body
PASS: gdb.base/ifelse.exp: if true else false #2
PASS: gdb.base/ifelse.exp: if 0 .. else with empty body
PASS: gdb.base/ifelse.exp: if true else false #3
PASS: gdb.base/ifelse.exp: create define with empty else
PASS: gdb.base/ifelse.exp: call original define
PASS: gdb.base/ifelse.exp: replace define with if .. else with empty body
PASS: gdb.base/ifelse.exp: call replacement define
Running ../../../gdb/testsuite/gdb.base/shlib-call.exp ...
Running ../../../gdb/testsuite/gdb.base/attach.exp ...
Running ../../../gdb/testsuite/gdb.base/lineinc.exp ...
PASS: gdb.base/lineinc.exp: tolerate macro info with multiple #inclusions per line
Running ../../../gdb/testsuite/gdb.base/display.exp ...
PASS: gdb.base/display.exp: break  do_loops
PASS: gdb.base/display.exp: get to do_loops
PASS: gdb.base/display.exp: set watch
PASS: gdb.base/display.exp: break loop end
PASS: gdb.base/display.exp: inf disp
PASS: gdb.base/display.exp: display i
PASS: gdb.base/display.exp: display j
PASS: gdb.base/display.exp: display &k
PASS: gdb.base/display.exp: display/f f
PASS: gdb.base/display.exp: display/s &sum
PASS: gdb.base/display.exp: first disp
PASS: gdb.base/display.exp: second disp
PASS: gdb.base/display.exp: catch err
PASS: gdb.base/display.exp: disab disp 1
PASS: gdb.base/display.exp: disab disp 2
PASS: gdb.base/display.exp: re-enab
PASS: gdb.base/display.exp: re-enab of enab
PASS: gdb.base/display.exp: undisp
PASS: gdb.base/display.exp: info disp
PASS: gdb.base/display.exp: next hit
PASS: gdb.base/display.exp: undisp all
PASS: gdb.base/display.exp: disab 3
PASS: gdb.base/display.exp: watch off
PASS: gdb.base/display.exp: finish
PASS: gdb.base/display.exp: step
PASS: gdb.base/display.exp: tbreak in do_vars
PASS: gdb.base/display.exp: cont
PASS: gdb.base/display.exp: printf
PASS: gdb.base/display.exp: printf %d
PASS: gdb.base/display.exp: printf "%d
PASS: gdb.base/display.exp: printf "%d%d",i
PASS: gdb.base/display.exp: printf "\\!\a\f\r\t\v\b\n"
PASS: gdb.base/display.exp: re-set term
PASS: gdb.base/display.exp: printf "\w"
PASS: gdb.base/display.exp: printf "%d" j
PASS: gdb.base/display.exp: printf "%p\n", 0
PASS: gdb.base/display.exp: printf "%p\n", 1
PASS: gdb.base/display.exp: print/k j
PASS: gdb.base/display.exp: debug test output 1
PASS: gdb.base/display.exp: debug test output 1a
PASS: gdb.base/display.exp: debug test output 2
PASS: gdb.base/display.exp: debug test output 2a
PASS: gdb.base/display.exp: debug test output 3
PASS: gdb.base/display.exp: x/0 j
PASS: gdb.base/display.exp: print/0 j
PASS: gdb.base/display.exp: ignored s
PASS: gdb.base/display.exp: no i
PASS: gdb.base/display.exp: print/a &sum
PASS: gdb.base/display.exp: print/a main+4
PASS: gdb.base/display.exp: print/a $pc
PASS: gdb.base/display.exp: print/a &&j
Running ../../../gdb/testsuite/gdb.base/break-unload-file.exp ...
PASS: gdb.base/break-unload-file.exp: cmdline: always-inserted off: break: set breakpoint always-inserted off
PASS: gdb.base/break-unload-file.exp: cmdline: always-inserted off: break: break foo
PASS: gdb.base/break-unload-file.exp: cmdline: always-inserted off: break: breakpoint is not pending
PASS: gdb.base/break-unload-file.exp: cmdline: always-inserted off: break: file
PASS: gdb.base/break-unload-file.exp: cmdline: always-inserted off: break: breakpoint is disabled
PASS: gdb.base/break-unload-file.exp: cmdline: always-inserted off: break: delete all breakpoints
PASS: gdb.base/break-unload-file.exp: cmdline: always-inserted off: break: file $binfile
PASS: gdb.base/break-unload-file.exp: cmdline: always-inserted off: break: b bar
PASS: gdb.base/break-unload-file.exp: cmdline: always-inserted off: break: continue
PASS: gdb.base/break-unload-file.exp: cmdline: always-inserted on: break: set breakpoint always-inserted on
PASS: gdb.base/break-unload-file.exp: cmdline: always-inserted on: break: break foo
PASS: gdb.base/break-unload-file.exp: cmdline: always-inserted on: break: breakpoint is not pending
PASS: gdb.base/break-unload-file.exp: cmdline: always-inserted on: break: file
PASS: gdb.base/break-unload-file.exp: cmdline: always-inserted on: break: breakpoint is disabled
PASS: gdb.base/break-unload-file.exp: cmdline: always-inserted on: break: delete all breakpoints
PASS: gdb.base/break-unload-file.exp: cmdline: always-inserted on: break: file $binfile
PASS: gdb.base/break-unload-file.exp: cmdline: always-inserted on: break: b bar
PASS: gdb.base/break-unload-file.exp: cmdline: always-inserted on: break: continue
PASS: gdb.base/break-unload-file.exp: file: always-inserted off: break: set breakpoint always-inserted off
PASS: gdb.base/break-unload-file.exp: file: always-inserted off: break: break foo
PASS: gdb.base/break-unload-file.exp: file: always-inserted off: break: breakpoint is not pending
PASS: gdb.base/break-unload-file.exp: file: always-inserted off: break: file
PASS: gdb.base/break-unload-file.exp: file: always-inserted off: break: breakpoint is disabled
PASS: gdb.base/break-unload-file.exp: file: always-inserted off: break: delete all breakpoints
PASS: gdb.base/break-unload-file.exp: file: always-inserted off: break: file $binfile
PASS: gdb.base/break-unload-file.exp: file: always-inserted off: break: b bar
PASS: gdb.base/break-unload-file.exp: file: always-inserted off: break: continue
PASS: gdb.base/break-unload-file.exp: file: always-inserted on: break: set breakpoint always-inserted on
PASS: gdb.base/break-unload-file.exp: file: always-inserted on: break: break foo
PASS: gdb.base/break-unload-file.exp: file: always-inserted on: break: breakpoint is not pending
PASS: gdb.base/break-unload-file.exp: file: always-inserted on: break: file
PASS: gdb.base/break-unload-file.exp: file: always-inserted on: break: breakpoint is disabled
PASS: gdb.base/break-unload-file.exp: file: always-inserted on: break: delete all breakpoints
PASS: gdb.base/break-unload-file.exp: file: always-inserted on: break: file $binfile
PASS: gdb.base/break-unload-file.exp: file: always-inserted on: break: b bar
PASS: gdb.base/break-unload-file.exp: file: always-inserted on: break: continue
Running ../../../gdb/testsuite/gdb.base/charset.exp ...
PASS: gdb.base/charset.exp: show charset
PASS: gdb.base/charset.exp: show target-charset
PASS: gdb.base/charset.exp: check `show target-charset' against `show charset'
PASS: gdb.base/charset.exp: show host-charset
PASS: gdb.base/charset.exp: check `show host-charset' against `show charset'
PASS: gdb.base/charset.exp: try malformed `set charset'
PASS: gdb.base/charset.exp: try `set host-charset' with invalid charset
PASS: gdb.base/charset.exp: try `set target-charset' with invalid charset
PASS: gdb.base/charset.exp: capture valid host charsets
PASS: gdb.base/charset.exp: capture valid target charsets
PASS: gdb.base/charset.exp: try `set host-charset ASCII'
PASS: gdb.base/charset.exp: parse `show charset' after `set host-charset ASCII'
PASS: gdb.base/charset.exp: check effect of `set host-charset ASCII'
PASS: gdb.base/charset.exp: try `set target-charset ASCII'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ASCII'
PASS: gdb.base/charset.exp: check effect of `set target-charset ASCII'
PASS: gdb.base/charset.exp: try `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: check effect of `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: try `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: check effect of `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: try `set target-charset IBM1047'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset IBM1047'
PASS: gdb.base/charset.exp: check effect of `set target-charset IBM1047'
PASS: gdb.base/charset.exp: try `set host-charset ISO-8859-1'
PASS: gdb.base/charset.exp: parse `show charset' after `set host-charset ISO-8859-1'
PASS: gdb.base/charset.exp: check effect of `set host-charset ISO-8859-1'
PASS: gdb.base/charset.exp: try `set target-charset ASCII'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ASCII'
PASS: gdb.base/charset.exp: check effect of `set target-charset ASCII'
PASS: gdb.base/charset.exp: try `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: check effect of `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: try `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: check effect of `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: try `set target-charset IBM1047'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset IBM1047'
PASS: gdb.base/charset.exp: check effect of `set target-charset IBM1047'
PASS: gdb.base/charset.exp: try `set host-charset EBCDIC-US'
PASS: gdb.base/charset.exp: parse `show charset' after `set host-charset EBCDIC-US'
PASS: gdb.base/charset.exp: check effect of `set host-charset EBCDIC-US'
PASS: gdb.base/charset.exp: try `set target-charset ASCII'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ASCII'
PASS: gdb.base/charset.exp: check effect of `set target-charset ASCII'
PASS: gdb.base/charset.exp: try `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: check effect of `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: try `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: check effect of `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: try `set target-charset IBM1047'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset IBM1047'
PASS: gdb.base/charset.exp: check effect of `set target-charset IBM1047'
PASS: gdb.base/charset.exp: try `set host-charset IBM1047'
PASS: gdb.base/charset.exp: parse `show charset' after `set host-charset IBM1047'
PASS: gdb.base/charset.exp: check effect of `set host-charset IBM1047'
PASS: gdb.base/charset.exp: try `set target-charset ASCII'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ASCII'
PASS: gdb.base/charset.exp: check effect of `set target-charset ASCII'
PASS: gdb.base/charset.exp: try `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: check effect of `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: try `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: check effect of `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: try `set target-charset IBM1047'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset IBM1047'
PASS: gdb.base/charset.exp: check effect of `set target-charset IBM1047'
PASS: gdb.base/charset.exp: set breakpoint after all strings have been initialized
PASS: gdb.base/charset.exp: run until all strings have been initialized
PASS: gdb.base/charset.exp: get integer valueof "sizeof (wchar_t)" (4)
PASS: gdb.base/charset.exp: set host-charset ASCII
PASS: gdb.base/charset.exp: set target-charset ASCII
PASS: gdb.base/charset.exp: print the null character in ASCII
PASS: gdb.base/charset.exp: print string in ASCII
PASS: gdb.base/charset.exp: parse character literal in ASCII
PASS: gdb.base/charset.exp: check value of parsed character literal in ASCII
PASS: gdb.base/charset.exp: parse string literal in ASCII
PASS: gdb.base/charset.exp: check value of parsed string literal in ASCII
PASS: gdb.base/charset.exp: try printing '\a' in ASCII
PASS: gdb.base/charset.exp: check value of '\a' in ASCII
PASS: gdb.base/charset.exp: check value of "\a" in ASCII
PASS: gdb.base/charset.exp: try printing '\b' in ASCII
PASS: gdb.base/charset.exp: check value of '\b' in ASCII
PASS: gdb.base/charset.exp: check value of "\b" in ASCII
PASS: gdb.base/charset.exp: try printing '\f' in ASCII
PASS: gdb.base/charset.exp: check value of '\f' in ASCII
PASS: gdb.base/charset.exp: check value of "\f" in ASCII
PASS: gdb.base/charset.exp: try printing '\n' in ASCII
PASS: gdb.base/charset.exp: check value of '\n' in ASCII
PASS: gdb.base/charset.exp: check value of "\n" in ASCII
PASS: gdb.base/charset.exp: try printing '\r' in ASCII
PASS: gdb.base/charset.exp: check value of '\r' in ASCII
PASS: gdb.base/charset.exp: check value of "\r" in ASCII
PASS: gdb.base/charset.exp: try printing '\t' in ASCII
PASS: gdb.base/charset.exp: check value of '\t' in ASCII
PASS: gdb.base/charset.exp: check value of "\t" in ASCII
PASS: gdb.base/charset.exp: try printing '\v' in ASCII
PASS: gdb.base/charset.exp: check value of '\v' in ASCII
PASS: gdb.base/charset.exp: check value of "\v" in ASCII
PASS: gdb.base/charset.exp: print escape that doesn't exist in ASCII
PASS: gdb.base/charset.exp: check value of escape that doesn't exist in ASCII
PASS: gdb.base/charset.exp: set target-charset ISO-8859-1
PASS: gdb.base/charset.exp: print the null character in ISO-8859-1
PASS: gdb.base/charset.exp: print string in ISO-8859-1
PASS: gdb.base/charset.exp: parse character literal in ISO-8859-1
PASS: gdb.base/charset.exp: check value of parsed character literal in ISO-8859-1
PASS: gdb.base/charset.exp: parse string literal in ISO-8859-1
PASS: gdb.base/charset.exp: check value of parsed string literal in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\a' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\a' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\a" in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\b' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\b' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\b" in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\f' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\f' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\f" in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\n' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\n' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\n" in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\r' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\r' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\r" in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\t' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\t' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\t" in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\v' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\v' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\v" in ISO-8859-1
PASS: gdb.base/charset.exp: print escape that doesn't exist in ISO-8859-1
PASS: gdb.base/charset.exp: check value of escape that doesn't exist in ISO-8859-1
PASS: gdb.base/charset.exp: set target-charset EBCDIC-US
PASS: gdb.base/charset.exp: print the null character in EBCDIC-US
PASS: gdb.base/charset.exp: print string in EBCDIC-US
PASS: gdb.base/charset.exp: parse character literal in EBCDIC-US
PASS: gdb.base/charset.exp: check value of parsed character literal in EBCDIC-US
PASS: gdb.base/charset.exp: parse string literal in EBCDIC-US
PASS: gdb.base/charset.exp: check value of parsed string literal in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\a' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\a' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\a" in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\b' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\b' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\b" in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\f' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\f' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\f" in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\n' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\n' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\n" in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\r' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\r' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\r" in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\t' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\t' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\t" in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\v' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\v' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\v" in EBCDIC-US
PASS: gdb.base/charset.exp: print escape that doesn't exist in EBCDIC-US
PASS: gdb.base/charset.exp: check value of escape that doesn't exist in EBCDIC-US
PASS: gdb.base/charset.exp: set target-charset IBM1047
PASS: gdb.base/charset.exp: print the null character in IBM1047
PASS: gdb.base/charset.exp: print string in IBM1047
PASS: gdb.base/charset.exp: parse character literal in IBM1047
PASS: gdb.base/charset.exp: check value of parsed character literal in IBM1047
PASS: gdb.base/charset.exp: parse string literal in IBM1047
PASS: gdb.base/charset.exp: check value of parsed string literal in IBM1047
PASS: gdb.base/charset.exp: try printing '\a' in IBM1047
PASS: gdb.base/charset.exp: check value of '\a' in IBM1047
PASS: gdb.base/charset.exp: check value of "\a" in IBM1047
PASS: gdb.base/charset.exp: try printing '\b' in IBM1047
PASS: gdb.base/charset.exp: check value of '\b' in IBM1047
PASS: gdb.base/charset.exp: check value of "\b" in IBM1047
PASS: gdb.base/charset.exp: try printing '\f' in IBM1047
PASS: gdb.base/charset.exp: check value of '\f' in IBM1047
PASS: gdb.base/charset.exp: check value of "\f" in IBM1047
PASS: gdb.base/charset.exp: try printing '\n' in IBM1047
PASS: gdb.base/charset.exp: check value of '\n' in IBM1047
PASS: gdb.base/charset.exp: check value of "\n" in IBM1047
PASS: gdb.base/charset.exp: try printing '\r' in IBM1047
PASS: gdb.base/charset.exp: check value of '\r' in IBM1047
PASS: gdb.base/charset.exp: check value of "\r" in IBM1047
PASS: gdb.base/charset.exp: try printing '\t' in IBM1047
PASS: gdb.base/charset.exp: check value of '\t' in IBM1047
PASS: gdb.base/charset.exp: check value of "\t" in IBM1047
PASS: gdb.base/charset.exp: try printing '\v' in IBM1047
PASS: gdb.base/charset.exp: check value of '\v' in IBM1047
PASS: gdb.base/charset.exp: check value of "\v" in IBM1047
PASS: gdb.base/charset.exp: print escape that doesn't exist in IBM1047
PASS: gdb.base/charset.exp: check value of escape that doesn't exist in IBM1047
PASS: gdb.base/charset.exp: set target-wide-charset UTF-32
PASS: gdb.base/charset.exp: print the null character in UTF-32
PASS: gdb.base/charset.exp: print string in UTF-32
PASS: gdb.base/charset.exp: parse character literal in UTF-32
PASS: gdb.base/charset.exp: check value of parsed character literal in UTF-32
PASS: gdb.base/charset.exp: parse string literal in UTF-32
PASS: gdb.base/charset.exp: check value of parsed string literal in UTF-32
PASS: gdb.base/charset.exp: try printing '\a' in UTF-32
PASS: gdb.base/charset.exp: check value of '\a' in UTF-32
PASS: gdb.base/charset.exp: check value of "\a" in UTF-32
PASS: gdb.base/charset.exp: try printing '\b' in UTF-32
PASS: gdb.base/charset.exp: check value of '\b' in UTF-32
PASS: gdb.base/charset.exp: check value of "\b" in UTF-32
PASS: gdb.base/charset.exp: try printing '\f' in UTF-32
PASS: gdb.base/charset.exp: check value of '\f' in UTF-32
PASS: gdb.base/charset.exp: check value of "\f" in UTF-32
PASS: gdb.base/charset.exp: try printing '\n' in UTF-32
PASS: gdb.base/charset.exp: check value of '\n' in UTF-32
PASS: gdb.base/charset.exp: check value of "\n" in UTF-32
PASS: gdb.base/charset.exp: try printing '\r' in UTF-32
PASS: gdb.base/charset.exp: check value of '\r' in UTF-32
PASS: gdb.base/charset.exp: check value of "\r" in UTF-32
PASS: gdb.base/charset.exp: try printing '\t' in UTF-32
PASS: gdb.base/charset.exp: check value of '\t' in UTF-32
PASS: gdb.base/charset.exp: check value of "\t" in UTF-32
PASS: gdb.base/charset.exp: try printing '\v' in UTF-32
PASS: gdb.base/charset.exp: check value of '\v' in UTF-32
PASS: gdb.base/charset.exp: check value of "\v" in UTF-32
PASS: gdb.base/charset.exp: print escape that doesn't exist in UTF-32
PASS: gdb.base/charset.exp: check value of escape that doesn't exist in UTF-32
PASS: gdb.base/charset.exp: set target-charset UTF-8
PASS: gdb.base/charset.exp: non-representable target character
PASS: gdb.base/charset.exp: print '\x'
PASS: gdb.base/charset.exp: print '\u'
PASS: gdb.base/charset.exp: print '\9'
PASS: gdb.base/charset.exp: print "\1011"
PASS: gdb.base/charset.exp: basic wide string concatenation
PASS: gdb.base/charset.exp: narrow and wide string concatenation
PASS: gdb.base/charset.exp: wide and narrow string concatenation
PASS: gdb.base/charset.exp: wide string concatenation with escape
PASS: gdb.base/charset.exp: concatenate three strings with empty wide string
PASS: gdb.base/charset.exp: basic wide character
PASS: gdb.base/charset.exp: get integer valueof "sizeof (char16_t)" (2)
PASS: gdb.base/charset.exp: basic UTF-16 string concatenation
PASS: gdb.base/charset.exp: narrow and UTF-16 string concatenation
PASS: gdb.base/charset.exp: UTF-16 and narrow string concatenation
PASS: gdb.base/charset.exp: UTF-16 string concatenation with escape
PASS: gdb.base/charset.exp: concatenate three strings with empty UTF-16 string
PASS: gdb.base/charset.exp: basic UTF-16 character
PASS: gdb.base/charset.exp: get integer valueof "sizeof (char32_t)" (4)
PASS: gdb.base/charset.exp: basic UTF-32 string concatenation
PASS: gdb.base/charset.exp: narrow and UTF-32 string concatenation
PASS: gdb.base/charset.exp: UTF-32 and narrow string concatenation
PASS: gdb.base/charset.exp: UTF-32 string concatenation with escape
PASS: gdb.base/charset.exp: concatenate three strings with empty UTF-32 string
PASS: gdb.base/charset.exp: basic UTF-32 character
PASS: gdb.base/charset.exp: undefined concatenation of wide and UTF-16
PASS: gdb.base/charset.exp: undefined concatenation of wide and UTF-32
PASS: gdb.base/charset.exp: typedef to wchar_t
PASS: gdb.base/charset.exp: undefined concatenation of UTF-16 and UTF-32
UNSUPPORTED: gdb.base/charset.exp: python support is disabled
PASS: gdb.base/charset.exp: EVAL_SKIP cleanup handling regression test
PASS: gdb.base/charset.exp: Assign String16 with prefix u
PASS: gdb.base/charset.exp: Display String String16 with x/hs
PASS: gdb.base/charset.exp: Assign String32 with prefix U
PASS: gdb.base/charset.exp: Display String String32 with x/ws
PASS: gdb.base/charset.exp: Assign String32 with prefix L
PASS: gdb.base/charset.exp: Display String String32 with x/ws
PASS: gdb.base/charset.exp: assign string to short array
PASS: gdb.base/charset.exp: assign string to int array
PASS: gdb.base/charset.exp: assign string to long array
Running ../../../gdb/testsuite/gdb.base/jump.exp ...
PASS: gdb.base/jump.exp: break before jump to non-call
PASS: gdb.base/jump.exp: jump to non-call
PASS: gdb.base/jump.exp: break before jump to call
PASS: gdb.base/jump.exp: jump to call
PASS: gdb.base/jump.exp: disable breakpoint on call
PASS: gdb.base/jump.exp: jump to call with disabled breakpoint
PASS: gdb.base/jump.exp: jump without argument disallowed
PASS: gdb.base/jump.exp: jump with trailing argument junk
PASS: gdb.base/jump.exp: aborted jump out of current function
PASS: gdb.base/jump.exp: jump out of current function
Running ../../../gdb/testsuite/gdb.base/help.exp ...
PASS: gdb.base/help.exp: disable pagination
PASS: gdb.base/help.exp: help aliases
PASS: gdb.base/help.exp: help breakpoints
PASS: gdb.base/help.exp: help data
PASS: gdb.base/help.exp: help files
PASS: gdb.base/help.exp: help internals
PASS: gdb.base/help.exp: help obscure
PASS: gdb.base/help.exp: help running
PASS: gdb.base/help.exp: help stack
PASS: gdb.base/help.exp: help status
PASS: gdb.base/help.exp: help support
PASS: gdb.base/help.exp: help tracepoints
PASS: gdb.base/help.exp: help user-defined
PASS: gdb.base/help.exp: help breakpoint "b" abbreviation
PASS: gdb.base/help.exp: help breakpoint "br" abbreviation
PASS: gdb.base/help.exp: help breakpoint "bre" abbreviation
PASS: gdb.base/help.exp: help breakpoint "brea" abbreviation
PASS: gdb.base/help.exp: help breakpoint "break" abbreviation
PASS: gdb.base/help.exp: help backtrace "bt" abbreviation
PASS: gdb.base/help.exp: help backtrace
PASS: gdb.base/help.exp: help commands
PASS: gdb.base/help.exp: help delete "d" abbreviation
PASS: gdb.base/help.exp: help delete
PASS: gdb.base/help.exp: help help "h" abbreviation
PASS: gdb.base/help.exp: help help
PASS: gdb.base/help.exp: help show copying
PASS: gdb.base/help.exp: help show warranty
PASS: gdb.base/help.exp: help show commands
PASS: gdb.base/help.exp: help show confirm
PASS: gdb.base/help.exp: help info bogus-gdb-command
PASS: gdb.base/help.exp: help gotcha
PASS: gdb.base/help.exp: apropos \(print[^ bsiedf\".-]\)
PASS: gdb.base/help.exp: apropos handle signal
PASS: gdb.base/help.exp: apropos apropos
Running ../../../gdb/testsuite/gdb.base/volatile.exp ...
PASS: gdb.base/volatile.exp: continue to marker1
PASS: gdb.base/volatile.exp: up from marker1
PASS: gdb.base/volatile.exp: ptype vox
PASS: gdb.base/volatile.exp: ptype victuals
PASS: gdb.base/volatile.exp: ptype vixen
PASS: gdb.base/volatile.exp: ptype vitriol
PASS: gdb.base/volatile.exp: ptype vellum
PASS: gdb.base/volatile.exp: ptype valve
PASS: gdb.base/volatile.exp: ptype vacuity
PASS: gdb.base/volatile.exp: ptype vertigo
PASS: gdb.base/volatile.exp: ptype vampire
PASS: gdb.base/volatile.exp: ptype viper
PASS: gdb.base/volatile.exp: ptype vigour
PASS: gdb.base/volatile.exp: ptype vapour
PASS: gdb.base/volatile.exp: ptype ventricle
PASS: gdb.base/volatile.exp: ptype vigintillion
PASS: gdb.base/volatile.exp: ptype vocation
PASS: gdb.base/volatile.exp: ptype veracity
PASS: gdb.base/volatile.exp: ptype vapidity
PASS: gdb.base/volatile.exp: ptype velocity
PASS: gdb.base/volatile.exp: ptype veneer
PASS: gdb.base/volatile.exp: ptype video
PASS: gdb.base/volatile.exp: ptype vacuum
PASS: gdb.base/volatile.exp: ptype veniality
PASS: gdb.base/volatile.exp: ptype vitality
PASS: gdb.base/volatile.exp: ptype voracity
PASS: gdb.base/volatile.exp: ptype victor
PASS: gdb.base/volatile.exp: ptype vicar
PASS: gdb.base/volatile.exp: ptype victory
PASS: gdb.base/volatile.exp: ptype vicarage
PASS: gdb.base/volatile.exp: ptype vein
PASS: gdb.base/volatile.exp: ptype vogue
PASS: gdb.base/volatile.exp: ptype cavern
PASS: gdb.base/volatile.exp: ptype coverlet
PASS: gdb.base/volatile.exp: ptype caveat
PASS: gdb.base/volatile.exp: ptype covenant
PASS: gdb.base/volatile.exp: ptype vizier
PASS: gdb.base/volatile.exp: ptype vanadium
PASS: gdb.base/volatile.exp: ptype vane
PASS: gdb.base/volatile.exp: ptype veldt
PASS: gdb.base/volatile.exp: ptype cove
PASS: gdb.base/volatile.exp: ptype cavity
PASS: gdb.base/volatile.exp: ptype vagus
PASS: gdb.base/volatile.exp: ptype vagrancy
PASS: gdb.base/volatile.exp: ptype vagary
PASS: gdb.base/volatile.exp: ptype vendor
PASS: gdb.base/volatile.exp: ptype violent
PASS: gdb.base/volatile.exp: ptype violet
PASS: gdb.base/volatile.exp: ptype vips
PASS: gdb.base/volatile.exp: ptype virgen
PASS: gdb.base/volatile.exp: ptype vulgar
PASS: gdb.base/volatile.exp: ptype vulture
PASS: gdb.base/volatile.exp: ptype vilify
PASS: gdb.base/volatile.exp: ptype villar
PASS: gdb.base/volatile.exp: ptype vindictive
PASS: gdb.base/volatile.exp: ptype vegetation
PASS: gdb.base/volatile.exp: ptype qux2
Running ../../../gdb/testsuite/gdb.base/hashline2.exp ...
PASS: gdb.base/hashline2.exp: set breakpoint
Running ../../../gdb/testsuite/gdb.base/whatis.exp ...
PASS: gdb.base/whatis.exp: whatis char
PASS: gdb.base/whatis.exp: whatis signed char
PASS: gdb.base/whatis.exp: whatis unsigned char
PASS: gdb.base/whatis.exp: whatis short
PASS: gdb.base/whatis.exp: whatis signed short
PASS: gdb.base/whatis.exp: whatis unsigned short
PASS: gdb.base/whatis.exp: whatis int
PASS: gdb.base/whatis.exp: whatis signed int
PASS: gdb.base/whatis.exp: whatis unsigned int
PASS: gdb.base/whatis.exp: whatis long
PASS: gdb.base/whatis.exp: whatis signed long
PASS: gdb.base/whatis.exp: whatis unsigned long
PASS: gdb.base/whatis.exp: whatis unsigned long long
PASS: gdb.base/whatis.exp: whatis float
PASS: gdb.base/whatis.exp: whatis double
PASS: gdb.base/whatis.exp: whatis char array
PASS: gdb.base/whatis.exp: whatis signed char array
PASS: gdb.base/whatis.exp: whatis unsigned char array
PASS: gdb.base/whatis.exp: whatis short array
PASS: gdb.base/whatis.exp: whatis signed short array
PASS: gdb.base/whatis.exp: whatis unsigned short array
PASS: gdb.base/whatis.exp: whatis int array
PASS: gdb.base/whatis.exp: whatis signed int array
PASS: gdb.base/whatis.exp: whatis unsigned int array
PASS: gdb.base/whatis.exp: whatis long array
PASS: gdb.base/whatis.exp: whatis signed long array
PASS: gdb.base/whatis.exp: whatis unsigned long array
PASS: gdb.base/whatis.exp: whatis unsigned long array
PASS: gdb.base/whatis.exp: whatis float array
PASS: gdb.base/whatis.exp: whatis double array
PASS: gdb.base/whatis.exp: whatis char pointer
PASS: gdb.base/whatis.exp: whatis signed char pointer
PASS: gdb.base/whatis.exp: whatis unsigned char pointer
PASS: gdb.base/whatis.exp: whatis short pointer
PASS: gdb.base/whatis.exp: whatis signed short pointer
PASS: gdb.base/whatis.exp: whatis unsigned short pointer
PASS: gdb.base/whatis.exp: whatis int pointer
PASS: gdb.base/whatis.exp: whatis signed int pointer
PASS: gdb.base/whatis.exp: whatis unsigned int pointer
PASS: gdb.base/whatis.exp: whatis long pointer
PASS: gdb.base/whatis.exp: whatis signed long pointer
PASS: gdb.base/whatis.exp: whatis unsigned long pointer
PASS: gdb.base/whatis.exp: whatis long long pointer
PASS: gdb.base/whatis.exp: whatis signed long long pointer
PASS: gdb.base/whatis.exp: whatis unsigned long long pointer
PASS: gdb.base/whatis.exp: whatis float pointer
PASS: gdb.base/whatis.exp: whatis double pointer
PASS: gdb.base/whatis.exp: whatis named structure
PASS: gdb.base/whatis.exp: whatis named structure using type name
PASS: gdb.base/whatis.exp: whatis unnamed structure
PASS: gdb.base/whatis.exp: whatis named union
PASS: gdb.base/whatis.exp: whatis named union using type name
PASS: gdb.base/whatis.exp: whatis unnamed union
PASS: gdb.base/whatis.exp: whatis char function
PASS: gdb.base/whatis.exp: whatis signed char function
PASS: gdb.base/whatis.exp: whatis unsigned char function
PASS: gdb.base/whatis.exp: whatis short function
PASS: gdb.base/whatis.exp: whatis signed short function
PASS: gdb.base/whatis.exp: whatis unsigned short function
PASS: gdb.base/whatis.exp: whatis int function
PASS: gdb.base/whatis.exp: whatis signed int function
PASS: gdb.base/whatis.exp: whatis unsigned int function
PASS: gdb.base/whatis.exp: whatis long function
PASS: gdb.base/whatis.exp: whatis signed long function
PASS: gdb.base/whatis.exp: whatis unsigned long function
PASS: gdb.base/whatis.exp: whatis long long function
PASS: gdb.base/whatis.exp: whatis signed long long function
PASS: gdb.base/whatis.exp: whatis unsigned long long function
PASS: gdb.base/whatis.exp: whatis float function
PASS: gdb.base/whatis.exp: whatis double function
PASS: gdb.base/whatis.exp: whatis complicated structure
PASS: gdb.base/whatis.exp: whatis complicated union
PASS: gdb.base/whatis.exp: whatis enumeration
PASS: gdb.base/whatis.exp: whatis enumeration using type name
PASS: gdb.base/whatis.exp: whatis outer structure
PASS: gdb.base/whatis.exp: whatis outer structure member
PASS: gdb.base/whatis.exp: whatis inner structure
PASS: gdb.base/whatis.exp: whatis inner structure member
PASS: gdb.base/whatis.exp: whatis inner union
PASS: gdb.base/whatis.exp: whatis inner union member
PASS: gdb.base/whatis.exp: whatis using typedef type name
PASS: gdb.base/whatis.exp: whatis applied to variable defined by typedef
PASS: gdb.base/whatis.exp: whatis applied to pointer to pointer to function
PASS: gdb.base/whatis.exp: whatis applied to const pointer to pointer to function
PASS: gdb.base/whatis.exp: whatis applied to pointer to const pointer to function
PASS: gdb.base/whatis.exp: whatis applied to pointer to function returning pointer to int
PASS: gdb.base/whatis.exp: whatis applied to pointer to pointer to function returning pointer to int
PASS: gdb.base/whatis.exp: whatis applied to pointer to function returning pointer to array
PASS: gdb.base/whatis.exp: whatis applied to pointer to function taking int,int and returning int
PASS: gdb.base/whatis.exp: whatis applied to pointer to function taking const int ptr and varargs and returning int
PASS: gdb.base/whatis.exp: whatis applied to function with types trailing 'void'
PASS: gdb.base/whatis.exp: whatis applied to function with 'void' parameter type
Running ../../../gdb/testsuite/gdb.base/scope.exp ...
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_ro
UNSUPPORTED: gdb.base/scope.exp: print 'scope0.c'::filelocal_bss before run
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal before run
PASS: gdb.base/scope.exp: next over init0() in main
PASS: gdb.base/scope.exp: print filelocal
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal at main
PASS: gdb.base/scope.exp: print filelocal_bss
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_bss in test_at_main
PASS: gdb.base/scope.exp: print filelocal_ro in test_at_main
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_ro
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal_bss
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal_ro
PASS: gdb.base/scope.exp: print foo::funclocal
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal
PASS: gdb.base/scope.exp: print foo::funclocal_ro
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal_ro
PASS: gdb.base/scope.exp: print bar::funclocal
PASS: gdb.base/scope.exp: print 'scope1.c'::bar::funclocal
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal at foo
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_bss in test_at_foo
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_ro
PASS: gdb.base/scope.exp: print filelocal at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal at foo
PASS: gdb.base/scope.exp: print filelocal_bss at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal_bss at foo
PASS: gdb.base/scope.exp: print filelocal_ro at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal_ro at foo
PASS: gdb.base/scope.exp: print funclocal at foo
PASS: gdb.base/scope.exp: print foo::funclocal at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal at foo
PASS: gdb.base/scope.exp: print funclocal_bss at foo
PASS: gdb.base/scope.exp: print foo::funclocal_bss at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal_bss at foo
PASS: gdb.base/scope.exp: print funclocal_ro at foo
PASS: gdb.base/scope.exp: print foo::funclocal_ro at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal_ro at foo
PASS: gdb.base/scope.exp: print bar::funclocal at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::bar::funclocal at foo
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal at bar
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_bss in test_at_bar
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_ro at bar
PASS: gdb.base/scope.exp: print filelocal at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal at bar
PASS: gdb.base/scope.exp: print filelocal_bss at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal_bss at bar
PASS: gdb.base/scope.exp: print filelocal_ro in test_at_bar
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal_ro at bar
PASS: gdb.base/scope.exp: print foo::funclocal at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal at bar
PASS: gdb.base/scope.exp: print foo::funclocal_bss at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal_bss at bar
PASS: gdb.base/scope.exp: print foo::funclocal_ro at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal_ro at bar
PASS: gdb.base/scope.exp: print funclocal at bar
PASS: gdb.base/scope.exp: print bar::funclocal at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::bar::funclocal at bar
PASS: gdb.base/scope.exp: print funclocal_bss at bar
PASS: gdb.base/scope.exp: print bar::funclocal_bss at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::bar::funclocal_bss at bar
PASS: gdb.base/scope.exp: continue to marker2
PASS: gdb.base/scope.exp: up from marker2 in scopes.exp
PASS: gdb.base/scope.exp: print localval, outer scope
PASS: gdb.base/scope.exp: print localval1, outer scope
PASS: gdb.base/scope.exp: print localval2, outer scope
PASS: gdb.base/scope.exp: print localval3, outer scope
PASS: gdb.base/scope.exp: continue to marker3 in scope.exp
PASS: gdb.base/scope.exp: up from marker3 in scope.exp
PASS: gdb.base/scope.exp: print localval, first nested scope
PASS: gdb.base/scope.exp: print localval1, first nested scope
PASS: gdb.base/scope.exp: print localval2, first nested scope
PASS: gdb.base/scope.exp: print localval3, first nested scope
PASS: gdb.base/scope.exp: continue to marker4 in scope.exp
PASS: gdb.base/scope.exp: up from marker4 in scope.exp
PASS: gdb.base/scope.exp: print localval, innermost scope
PASS: gdb.base/scope.exp: print localval1, innermost scope
PASS: gdb.base/scope.exp: print localval2, innermost scope
PASS: gdb.base/scope.exp: print localval3, innermost scope
PASS: gdb.base/scope.exp: continue to marker1
PASS: gdb.base/scope.exp: up from marker1 in scope.exp
PASS: gdb.base/scope.exp: 100 auto variables correctly initialized
PASS: gdb.base/scope.exp: args in correct order
Running ../../../gdb/testsuite/gdb.base/gnu-ifunc.exp ...
Running ../../../gdb/testsuite/gdb.base/catch-fork-kill.exp ...
UNSUPPORTED: gdb.base/catch-fork-kill.exp: catch-fork-kill.exp
Running ../../../gdb/testsuite/gdb.base/callexit.exp ...
PASS: gdb.base/callexit.exp: inferior function call terminated program
Running ../../../gdb/testsuite/gdb.base/paginate-inferior-exit.exp ...
PASS: gdb.base/paginate-inferior-exit.exp: paginate: set height 2
PASS: gdb.base/paginate-inferior-exit.exp: paginate: set pagination on
PASS: gdb.base/paginate-inferior-exit.exp: paginate: continue to pagination
PASS: gdb.base/paginate-inferior-exit.exp: paginate: inferior exits normally
PASS: gdb.base/paginate-inferior-exit.exp: paginate: GDB accepts further input
PASS: gdb.base/paginate-inferior-exit.exp: paginate: set height unlimited
Running ../../../gdb/testsuite/gdb.base/gdbhistsize-history.exp ...
PASS: gdb.base/gdbhistsize-history.exp: histsize=: show history size
PASS: gdb.base/gdbhistsize-history.exp: histsize=: show commands
PASS: gdb.base/gdbhistsize-history.exp: histsize=0: show history size
PASS: gdb.base/gdbhistsize-history.exp: histsize=0: show commands
PASS: gdb.base/gdbhistsize-history.exp: histsize=20: show history size
PASS: gdb.base/gdbhistsize-history.exp: histsize=20: show commands
PASS: gdb.base/gdbhistsize-history.exp: histsize= 20 : show history size
PASS: gdb.base/gdbhistsize-history.exp: histsize= 20 : show commands
PASS: gdb.base/gdbhistsize-history.exp: histsize=-5: show history size
PASS: gdb.base/gdbhistsize-history.exp: histsize=-5: show commands
PASS: gdb.base/gdbhistsize-history.exp: histsize=not_an_integer: show history size
PASS: gdb.base/gdbhistsize-history.exp: histsize=not_an_integer: show commands
PASS: gdb.base/gdbhistsize-history.exp: histsize=10zab: show history size
PASS: gdb.base/gdbhistsize-history.exp: histsize=10zab: show commands
PASS: gdb.base/gdbhistsize-history.exp: histsize=-5ab: show history size
PASS: gdb.base/gdbhistsize-history.exp: histsize=-5ab: show commands
PASS: gdb.base/gdbhistsize-history.exp: histsize=99999999999999999999999999999999999: show history size
PASS: gdb.base/gdbhistsize-history.exp: histsize=99999999999999999999999999999999999: show commands
PASS: gdb.base/gdbhistsize-history.exp: histsize=50: show history size
PASS: gdb.base/gdbhistsize-history.exp: histsize=50: show commands
Running ../../../gdb/testsuite/gdb.base/printcmds.exp ...
PASS: gdb.base/printcmds.exp: print $pc
PASS: gdb.base/printcmds.exp: print "abc"
PASS: gdb.base/printcmds.exp: print sizeof ("abc")
PASS: gdb.base/printcmds.exp: ptype "abc"
PASS: gdb.base/printcmds.exp: print $cvar = "abc"
PASS: gdb.base/printcmds.exp: print sizeof ($cvar)
PASS: gdb.base/printcmds.exp: print $pc (with file)
PASS: gdb.base/printcmds.exp: set print sevenbit-strings
PASS: gdb.base/printcmds.exp: set print address off
PASS: gdb.base/printcmds.exp: set width 0
PASS: gdb.base/printcmds.exp: p ctable1[120] #1
PASS: gdb.base/printcmds.exp: p 123
PASS: gdb.base/printcmds.exp: p -123
PASS: gdb.base/printcmds.exp: p/d 123
PASS: gdb.base/printcmds.exp: p 0123
PASS: gdb.base/printcmds.exp: p 00123
PASS: gdb.base/printcmds.exp: p -0123
PASS: gdb.base/printcmds.exp: p/o 0123
PASS: gdb.base/printcmds.exp: p 0x123
PASS: gdb.base/printcmds.exp: p -0x123
PASS: gdb.base/printcmds.exp: p 0x0123
PASS: gdb.base/printcmds.exp: p -0x0123
PASS: gdb.base/printcmds.exp: p 0xABCDEF
PASS: gdb.base/printcmds.exp: p 0xabcdef
PASS: gdb.base/printcmds.exp: p 0xAbCdEf
PASS: gdb.base/printcmds.exp: p/x 0x123
PASS: gdb.base/printcmds.exp: p 0b0
PASS: gdb.base/printcmds.exp: p 0b1111
PASS: gdb.base/printcmds.exp: p 0B1111
PASS: gdb.base/printcmds.exp: p -0b1111
PASS: gdb.base/printcmds.exp: reject p 0x
PASS: gdb.base/printcmds.exp: reject p 0b
PASS: gdb.base/printcmds.exp: p ''
PASS: gdb.base/printcmds.exp: p '''
PASS: gdb.base/printcmds.exp: reject p '\'
PASS: gdb.base/printcmds.exp: reject p '\\\'
PASS: gdb.base/printcmds.exp: reject p DEADBEEF
PASS: gdb.base/printcmds.exp: reject p 09
PASS: gdb.base/printcmds.exp: reject p 079
PASS: gdb.base/printcmds.exp: reject p 0xG
PASS: gdb.base/printcmds.exp: reject p 0xAG
PASS: gdb.base/printcmds.exp: reject p 0b2
PASS: gdb.base/printcmds.exp: reject p 0b12
PASS: gdb.base/printcmds.exp: check for floating addition
PASS: gdb.base/printcmds.exp: p 1.
PASS: gdb.base/printcmds.exp: p 1.5
PASS: gdb.base/printcmds.exp: p 1.f
PASS: gdb.base/printcmds.exp: p 1.5f
PASS: gdb.base/printcmds.exp: p 1.l
PASS: gdb.base/printcmds.exp: p 1.5l
PASS: gdb.base/printcmds.exp: p 0x1.1
PASS: gdb.base/printcmds.exp: reject p 123DEADBEEF
PASS: gdb.base/printcmds.exp: reject p 123foobar.bazfoo3
PASS: gdb.base/printcmds.exp: reject p 123EEEEEEEEEEEEEEEEE33333k333
PASS: gdb.base/printcmds.exp: reject p 1.1x
PASS: gdb.base/printcmds.exp: reject p 1.1ff
PASS: gdb.base/printcmds.exp: reject p 1.1ll
PASS: gdb.base/printcmds.exp: p 'a'
PASS: gdb.base/printcmds.exp: p/c 'a'
PASS: gdb.base/printcmds.exp: p/x 'a'
PASS: gdb.base/printcmds.exp: p/d 'a'
PASS: gdb.base/printcmds.exp: p/t 'a'
PASS: gdb.base/printcmds.exp: p '\141'
PASS: gdb.base/printcmds.exp: p/x '\377'
PASS: gdb.base/printcmds.exp: p '\''
PASS: gdb.base/printcmds.exp: p '\\'
PASS: gdb.base/printcmds.exp: p ctable1[0]
PASS: gdb.base/printcmds.exp: p ctable1[1]
PASS: gdb.base/printcmds.exp: p ctable1[2]
PASS: gdb.base/printcmds.exp: p ctable1[3]
PASS: gdb.base/printcmds.exp: p ctable1[4]
PASS: gdb.base/printcmds.exp: p ctable1[5]
PASS: gdb.base/printcmds.exp: p ctable1[6]
PASS: gdb.base/printcmds.exp: p ctable1[7]
PASS: gdb.base/printcmds.exp: p ctable1[8]
PASS: gdb.base/printcmds.exp: p ctable1[9]
PASS: gdb.base/printcmds.exp: p ctable1[10]
PASS: gdb.base/printcmds.exp: p ctable1[11]
PASS: gdb.base/printcmds.exp: p ctable1[12]
PASS: gdb.base/printcmds.exp: p ctable1[13]
PASS: gdb.base/printcmds.exp: p ctable1[14]
PASS: gdb.base/printcmds.exp: p ctable1[15]
PASS: gdb.base/printcmds.exp: p ctable1[16]
PASS: gdb.base/printcmds.exp: p ctable1[17]
PASS: gdb.base/printcmds.exp: p ctable1[18]
PASS: gdb.base/printcmds.exp: p ctable1[19]
PASS: gdb.base/printcmds.exp: p ctable1[20]
PASS: gdb.base/printcmds.exp: p ctable1[21]
PASS: gdb.base/printcmds.exp: p ctable1[22]
PASS: gdb.base/printcmds.exp: p ctable1[23]
PASS: gdb.base/printcmds.exp: p ctable1[24]
PASS: gdb.base/printcmds.exp: p ctable1[25]
PASS: gdb.base/printcmds.exp: p ctable1[26]
PASS: gdb.base/printcmds.exp: p ctable1[27]
PASS: gdb.base/printcmds.exp: p ctable1[28]
PASS: gdb.base/printcmds.exp: p ctable1[29]
PASS: gdb.base/printcmds.exp: p ctable1[30]
PASS: gdb.base/printcmds.exp: p ctable1[31]
PASS: gdb.base/printcmds.exp: p ctable1[32]
PASS: gdb.base/printcmds.exp: p ctable1[33]
PASS: gdb.base/printcmds.exp: p ctable1[34]
PASS: gdb.base/printcmds.exp: p ctable1[35]
PASS: gdb.base/printcmds.exp: p ctable1[36]
PASS: gdb.base/printcmds.exp: p ctable1[37]
PASS: gdb.base/printcmds.exp: p ctable1[38]
PASS: gdb.base/printcmds.exp: p ctable1[39]
PASS: gdb.base/printcmds.exp: p ctable1[40]
PASS: gdb.base/printcmds.exp: p ctable1[41]
PASS: gdb.base/printcmds.exp: p ctable1[42]
PASS: gdb.base/printcmds.exp: p ctable1[43]
PASS: gdb.base/printcmds.exp: p ctable1[44]
PASS: gdb.base/printcmds.exp: p ctable1[45]
PASS: gdb.base/printcmds.exp: p ctable1[46]
PASS: gdb.base/printcmds.exp: p ctable1[47]
PASS: gdb.base/printcmds.exp: p ctable1[48]
PASS: gdb.base/printcmds.exp: p ctable1[49]
PASS: gdb.base/printcmds.exp: p ctable1[50]
PASS: gdb.base/printcmds.exp: p ctable1[51]
PASS: gdb.base/printcmds.exp: p ctable1[52]
PASS: gdb.base/printcmds.exp: p ctable1[53]
PASS: gdb.base/printcmds.exp: p ctable1[54]
PASS: gdb.base/printcmds.exp: p ctable1[55]
PASS: gdb.base/printcmds.exp: p ctable1[56]
PASS: gdb.base/printcmds.exp: p ctable1[57]
PASS: gdb.base/printcmds.exp: p ctable1[58]
PASS: gdb.base/printcmds.exp: p ctable1[59]
PASS: gdb.base/printcmds.exp: p ctable1[60]
PASS: gdb.base/printcmds.exp: p ctable1[61]
PASS: gdb.base/printcmds.exp: p ctable1[62]
PASS: gdb.base/printcmds.exp: p ctable1[63]
PASS: gdb.base/printcmds.exp: p ctable1[64]
PASS: gdb.base/printcmds.exp: p ctable1[65]
PASS: gdb.base/printcmds.exp: p ctable1[66]
PASS: gdb.base/printcmds.exp: p ctable1[67]
PASS: gdb.base/printcmds.exp: p ctable1[68]
PASS: gdb.base/printcmds.exp: p ctable1[69]
PASS: gdb.base/printcmds.exp: p ctable1[70]
PASS: gdb.base/printcmds.exp: p ctable1[71]
PASS: gdb.base/printcmds.exp: p ctable1[72]
PASS: gdb.base/printcmds.exp: p ctable1[73]
PASS: gdb.base/printcmds.exp: p ctable1[74]
PASS: gdb.base/printcmds.exp: p ctable1[75]
PASS: gdb.base/printcmds.exp: p ctable1[76]
PASS: gdb.base/printcmds.exp: p ctable1[77]
PASS: gdb.base/printcmds.exp: p ctable1[78]
PASS: gdb.base/printcmds.exp: p ctable1[79]
PASS: gdb.base/printcmds.exp: p ctable1[80]
PASS: gdb.base/printcmds.exp: p ctable1[81]
PASS: gdb.base/printcmds.exp: p ctable1[82]
PASS: gdb.base/printcmds.exp: p ctable1[83]
PASS: gdb.base/printcmds.exp: p ctable1[84]
PASS: gdb.base/printcmds.exp: p ctable1[85]
PASS: gdb.base/printcmds.exp: p ctable1[86]
PASS: gdb.base/printcmds.exp: p ctable1[87]
PASS: gdb.base/printcmds.exp: p ctable1[88]
PASS: gdb.base/printcmds.exp: p ctable1[89]
PASS: gdb.base/printcmds.exp: p ctable1[90]
PASS: gdb.base/printcmds.exp: p ctable1[91]
PASS: gdb.base/printcmds.exp: p ctable1[92]
PASS: gdb.base/printcmds.exp: p ctable1[93]
PASS: gdb.base/printcmds.exp: p ctable1[94]
PASS: gdb.base/printcmds.exp: p ctable1[95]
PASS: gdb.base/printcmds.exp: p ctable1[96]
PASS: gdb.base/printcmds.exp: p ctable1[97]
PASS: gdb.base/printcmds.exp: p ctable1[98]
PASS: gdb.base/printcmds.exp: p ctable1[99]
PASS: gdb.base/printcmds.exp: p ctable1[100]
PASS: gdb.base/printcmds.exp: p ctable1[101]
PASS: gdb.base/printcmds.exp: p ctable1[102]
PASS: gdb.base/printcmds.exp: p ctable1[103]
PASS: gdb.base/printcmds.exp: p ctable1[104]
PASS: gdb.base/printcmds.exp: p ctable1[105]
PASS: gdb.base/printcmds.exp: p ctable1[106]
PASS: gdb.base/printcmds.exp: p ctable1[107]
PASS: gdb.base/printcmds.exp: p ctable1[108]
PASS: gdb.base/printcmds.exp: p ctable1[109]
PASS: gdb.base/printcmds.exp: p ctable1[110]
PASS: gdb.base/printcmds.exp: p ctable1[111]
PASS: gdb.base/printcmds.exp: p ctable1[112]
PASS: gdb.base/printcmds.exp: p ctable1[113]
PASS: gdb.base/printcmds.exp: p ctable1[114]
PASS: gdb.base/printcmds.exp: p ctable1[115]
PASS: gdb.base/printcmds.exp: p ctable1[116]
PASS: gdb.base/printcmds.exp: p ctable1[117]
PASS: gdb.base/printcmds.exp: p ctable1[118]
PASS: gdb.base/printcmds.exp: p ctable1[119]
PASS: gdb.base/printcmds.exp: p ctable1[120]
PASS: gdb.base/printcmds.exp: p ctable1[121]
PASS: gdb.base/printcmds.exp: p ctable1[122]
PASS: gdb.base/printcmds.exp: p ctable1[123]
PASS: gdb.base/printcmds.exp: p ctable1[124]
PASS: gdb.base/printcmds.exp: p ctable1[125]
PASS: gdb.base/printcmds.exp: p ctable1[126]
PASS: gdb.base/printcmds.exp: p ctable1[127]
PASS: gdb.base/printcmds.exp: p ctable1[128]
PASS: gdb.base/printcmds.exp: p ctable1[129]
PASS: gdb.base/printcmds.exp: p ctable1[130]
PASS: gdb.base/printcmds.exp: p ctable1[131]
PASS: gdb.base/printcmds.exp: p ctable1[132]
PASS: gdb.base/printcmds.exp: p ctable1[133]
PASS: gdb.base/printcmds.exp: p ctable1[134]
PASS: gdb.base/printcmds.exp: p ctable1[135]
PASS: gdb.base/printcmds.exp: p ctable1[136]
PASS: gdb.base/printcmds.exp: p ctable1[137]
PASS: gdb.base/printcmds.exp: p ctable1[138]
PASS: gdb.base/printcmds.exp: p ctable1[139]
PASS: gdb.base/printcmds.exp: p ctable1[140]
PASS: gdb.base/printcmds.exp: p ctable1[141]
PASS: gdb.base/printcmds.exp: p ctable1[142]
PASS: gdb.base/printcmds.exp: p ctable1[143]
PASS: gdb.base/printcmds.exp: p ctable1[144]
PASS: gdb.base/printcmds.exp: p ctable1[145]
PASS: gdb.base/printcmds.exp: p ctable1[146]
PASS: gdb.base/printcmds.exp: p ctable1[147]
PASS: gdb.base/printcmds.exp: p ctable1[148]
PASS: gdb.base/printcmds.exp: p ctable1[149]
PASS: gdb.base/printcmds.exp: p ctable1[150]
PASS: gdb.base/printcmds.exp: p ctable1[151]
PASS: gdb.base/printcmds.exp: p ctable1[152]
PASS: gdb.base/printcmds.exp: p ctable1[153]
PASS: gdb.base/printcmds.exp: p ctable1[154]
PASS: gdb.base/printcmds.exp: p ctable1[155]
PASS: gdb.base/printcmds.exp: p ctable1[156]
PASS: gdb.base/printcmds.exp: p ctable1[157]
PASS: gdb.base/printcmds.exp: p ctable1[158]
PASS: gdb.base/printcmds.exp: p ctable1[159]
PASS: gdb.base/printcmds.exp: p ctable1[160]
PASS: gdb.base/printcmds.exp: p ctable1[161]
PASS: gdb.base/printcmds.exp: p ctable1[162]
PASS: gdb.base/printcmds.exp: p ctable1[163]
PASS: gdb.base/printcmds.exp: p ctable1[164]
PASS: gdb.base/printcmds.exp: p ctable1[165]
PASS: gdb.base/printcmds.exp: p ctable1[166]
PASS: gdb.base/printcmds.exp: p ctable1[167]
PASS: gdb.base/printcmds.exp: p ctable1[168]
PASS: gdb.base/printcmds.exp: p ctable1[169]
PASS: gdb.base/printcmds.exp: p ctable1[170]
PASS: gdb.base/printcmds.exp: p ctable1[171]
PASS: gdb.base/printcmds.exp: p ctable1[172]
PASS: gdb.base/printcmds.exp: p ctable1[173]
PASS: gdb.base/printcmds.exp: p ctable1[174]
PASS: gdb.base/printcmds.exp: p ctable1[175]
PASS: gdb.base/printcmds.exp: p ctable1[176]
PASS: gdb.base/printcmds.exp: p ctable1[177]
PASS: gdb.base/printcmds.exp: p ctable1[178]
PASS: gdb.base/printcmds.exp: p ctable1[179]
PASS: gdb.base/printcmds.exp: p ctable1[180]
PASS: gdb.base/printcmds.exp: p ctable1[181]
PASS: gdb.base/printcmds.exp: p ctable1[182]
PASS: gdb.base/printcmds.exp: p ctable1[183]
PASS: gdb.base/printcmds.exp: p ctable1[184]
PASS: gdb.base/printcmds.exp: p ctable1[185]
PASS: gdb.base/printcmds.exp: p ctable1[186]
PASS: gdb.base/printcmds.exp: p ctable1[187]
PASS: gdb.base/printcmds.exp: p ctable1[188]
PASS: gdb.base/printcmds.exp: p ctable1[189]
PASS: gdb.base/printcmds.exp: p ctable1[190]
PASS: gdb.base/printcmds.exp: p ctable1[191]
PASS: gdb.base/printcmds.exp: p ctable1[192]
PASS: gdb.base/printcmds.exp: p ctable1[193]
PASS: gdb.base/printcmds.exp: p ctable1[194]
PASS: gdb.base/printcmds.exp: p ctable1[195]
PASS: gdb.base/printcmds.exp: p ctable1[196]
PASS: gdb.base/printcmds.exp: p ctable1[197]
PASS: gdb.base/printcmds.exp: p ctable1[198]
PASS: gdb.base/printcmds.exp: p ctable1[199]
PASS: gdb.base/printcmds.exp: p ctable1[200]
PASS: gdb.base/printcmds.exp: p ctable1[201]
PASS: gdb.base/printcmds.exp: p ctable1[202]
PASS: gdb.base/printcmds.exp: p ctable1[203]
PASS: gdb.base/printcmds.exp: p ctable1[204]
PASS: gdb.base/printcmds.exp: p ctable1[205]
PASS: gdb.base/printcmds.exp: p ctable1[206]
PASS: gdb.base/printcmds.exp: p ctable1[207]
PASS: gdb.base/printcmds.exp: p ctable1[208]
PASS: gdb.base/printcmds.exp: p ctable1[209]
PASS: gdb.base/printcmds.exp: p ctable1[210]
PASS: gdb.base/printcmds.exp: p ctable1[211]
PASS: gdb.base/printcmds.exp: p ctable1[212]
PASS: gdb.base/printcmds.exp: p ctable1[213]
PASS: gdb.base/printcmds.exp: p ctable1[214]
PASS: gdb.base/printcmds.exp: p ctable1[215]
PASS: gdb.base/printcmds.exp: p ctable1[216]
PASS: gdb.base/printcmds.exp: p ctable1[217]
PASS: gdb.base/printcmds.exp: p ctable1[218]
PASS: gdb.base/printcmds.exp: p ctable1[219]
PASS: gdb.base/printcmds.exp: p ctable1[220]
PASS: gdb.base/printcmds.exp: p ctable1[221]
PASS: gdb.base/printcmds.exp: p ctable1[222]
PASS: gdb.base/printcmds.exp: p ctable1[223]
PASS: gdb.base/printcmds.exp: p ctable1[224]
PASS: gdb.base/printcmds.exp: p ctable1[225]
PASS: gdb.base/printcmds.exp: p ctable1[226]
PASS: gdb.base/printcmds.exp: p ctable1[227]
PASS: gdb.base/printcmds.exp: p ctable1[228]
PASS: gdb.base/printcmds.exp: p ctable1[229]
PASS: gdb.base/printcmds.exp: p ctable1[230]
PASS: gdb.base/printcmds.exp: p ctable1[231]
PASS: gdb.base/printcmds.exp: p ctable1[232]
PASS: gdb.base/printcmds.exp: p ctable1[233]
PASS: gdb.base/printcmds.exp: p ctable1[234]
PASS: gdb.base/printcmds.exp: p ctable1[235]
PASS: gdb.base/printcmds.exp: p ctable1[236]
PASS: gdb.base/printcmds.exp: p ctable1[237]
PASS: gdb.base/printcmds.exp: p ctable1[238]
PASS: gdb.base/printcmds.exp: p ctable1[239]
PASS: gdb.base/printcmds.exp: p ctable1[240]
PASS: gdb.base/printcmds.exp: p ctable1[241]
PASS: gdb.base/printcmds.exp: p ctable1[242]
PASS: gdb.base/printcmds.exp: p ctable1[243]
PASS: gdb.base/printcmds.exp: p ctable1[244]
PASS: gdb.base/printcmds.exp: p ctable1[245]
PASS: gdb.base/printcmds.exp: p ctable1[246]
PASS: gdb.base/printcmds.exp: p ctable1[247]
PASS: gdb.base/printcmds.exp: p ctable1[248]
PASS: gdb.base/printcmds.exp: p ctable1[249]
PASS: gdb.base/printcmds.exp: p ctable1[250]
PASS: gdb.base/printcmds.exp: p ctable1[251]
PASS: gdb.base/printcmds.exp: p ctable1[252]
PASS: gdb.base/printcmds.exp: p ctable1[253]
PASS: gdb.base/printcmds.exp: p ctable1[254]
PASS: gdb.base/printcmds.exp: p ctable1[255]
PASS: gdb.base/printcmds.exp: set print elements 1
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: set print elements 2
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: set print elements 3
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: set print elements 4
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: set print elements 5
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: set print elements 6
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: set print elements 7
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: set print elements 8
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: set print elements 9
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: set print elements 10
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: set print elements 11
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: set print elements 12
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: set print elements 13
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: set print elements 14
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: set print elements 15
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: set print elements 16
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: correct element repeats in array embedded at offset > 0
PASS: gdb.base/printcmds.exp: set print elements 0
PASS: gdb.base/printcmds.exp: p teststring with elements set to 0
PASS: gdb.base/printcmds.exp: set print elements 1
PASS: gdb.base/printcmds.exp: p teststring with elements set to 1
PASS: gdb.base/printcmds.exp: set print elements 5
PASS: gdb.base/printcmds.exp: p teststring with elements set to 5
PASS: gdb.base/printcmds.exp: set print elements 19
PASS: gdb.base/printcmds.exp: p teststring with elements set to 19
PASS: gdb.base/printcmds.exp: set print elements 20
PASS: gdb.base/printcmds.exp: p teststring with elements set to 20
PASS: gdb.base/printcmds.exp: set print elements 8
PASS: gdb.base/printcmds.exp: p &ctable1[0]
PASS: gdb.base/printcmds.exp: p &ctable1[1]
PASS: gdb.base/printcmds.exp: p &ctable1[1*8]
PASS: gdb.base/printcmds.exp: p &ctable1[2*8]
PASS: gdb.base/printcmds.exp: p &ctable1[3*8]
PASS: gdb.base/printcmds.exp: p &ctable1[4*8]
PASS: gdb.base/printcmds.exp: p &ctable1[5*8]
PASS: gdb.base/printcmds.exp: p &ctable1[6*8]
PASS: gdb.base/printcmds.exp: p &ctable1[7*8]
PASS: gdb.base/printcmds.exp: p &ctable1[8*8]
PASS: gdb.base/printcmds.exp: p &ctable1[9*8]
PASS: gdb.base/printcmds.exp: p &ctable1[10*8]
PASS: gdb.base/printcmds.exp: p &ctable1[11*8]
PASS: gdb.base/printcmds.exp: p &ctable1[12*8]
PASS: gdb.base/printcmds.exp: p &ctable1[13*8]
PASS: gdb.base/printcmds.exp: p &ctable1[14*8]
PASS: gdb.base/printcmds.exp: p &ctable1[15*8]
PASS: gdb.base/printcmds.exp: p &ctable1[16*8]
PASS: gdb.base/printcmds.exp: p &ctable1[17*8]
PASS: gdb.base/printcmds.exp: p &ctable1[18*8]
PASS: gdb.base/printcmds.exp: p &ctable1[19*8]
PASS: gdb.base/printcmds.exp: p &ctable1[20*8]
PASS: gdb.base/printcmds.exp: p &ctable1[21*8]
PASS: gdb.base/printcmds.exp: p &ctable1[22*8]
PASS: gdb.base/printcmds.exp: p &ctable1[23*8]
PASS: gdb.base/printcmds.exp: p &ctable1[24*8]
PASS: gdb.base/printcmds.exp: p &ctable1[25*8]
PASS: gdb.base/printcmds.exp: p &ctable1[26*8]
PASS: gdb.base/printcmds.exp: p &ctable1[27*8]
PASS: gdb.base/printcmds.exp: p &ctable1[28*8]
PASS: gdb.base/printcmds.exp: p &ctable1[29*8]
PASS: gdb.base/printcmds.exp: p &ctable1[30*8]
PASS: gdb.base/printcmds.exp: p &ctable1[31*8]
PASS: gdb.base/printcmds.exp: set print elements 24
PASS: gdb.base/printcmds.exp: set print elements 24
PASS: gdb.base/printcmds.exp: p a1[0]
PASS: gdb.base/printcmds.exp: p a1[9]
PASS: gdb.base/printcmds.exp: p a2
PASS: gdb.base/printcmds.exp: p a2[0]
PASS: gdb.base/printcmds.exp: p a2[3]
PASS: gdb.base/printcmds.exp: set print null-stop on
PASS: gdb.base/printcmds.exp: print a2 with null-stop on
PASS: gdb.base/printcmds.exp: set print null-stop off
PASS: gdb.base/printcmds.exp: p int1dim[0]@2
PASS: gdb.base/printcmds.exp: p int1dim[0]@2@3
PASS: gdb.base/printcmds.exp: set print elements 24
PASS: gdb.base/printcmds.exp: set print address on
PASS: gdb.base/printcmds.exp: p arrays
PASS: gdb.base/printcmds.exp: p parrays
PASS: gdb.base/printcmds.exp: p parrays->array1
PASS: gdb.base/printcmds.exp: p &parrays->array1
PASS: gdb.base/printcmds.exp: p parrays->array2
PASS: gdb.base/printcmds.exp: p &parrays->array2
PASS: gdb.base/printcmds.exp: p parrays->array3
PASS: gdb.base/printcmds.exp: p &parrays->array3
PASS: gdb.base/printcmds.exp: p parrays->array4
PASS: gdb.base/printcmds.exp: p &parrays->array4
PASS: gdb.base/printcmds.exp: p parrays->array5
PASS: gdb.base/printcmds.exp: p &parrays->array5
PASS: gdb.base/printcmds.exp: set print address off
PASS: gdb.base/printcmds.exp: set print elements 50
PASS: gdb.base/printcmds.exp: p "a string"
PASS: gdb.base/printcmds.exp: p "embedded \000 null"
PASS: gdb.base/printcmds.exp: p "abcd"[2]
PASS: gdb.base/printcmds.exp: p sizeof ("abcdef")
PASS: gdb.base/printcmds.exp: ptype "foo"
PASS: gdb.base/printcmds.exp: p *"foo"
PASS: gdb.base/printcmds.exp: ptype *"foo"
PASS: gdb.base/printcmds.exp: p &*"foo"
PASS: gdb.base/printcmds.exp: ptype &*"foo"
PASS: gdb.base/printcmds.exp: p (char *)"foo"
PASS: gdb.base/printcmds.exp: print {'a','b','c'}
PASS: gdb.base/printcmds.exp: print {4,5,6}[2]
PASS: gdb.base/printcmds.exp: print *&{4,5,6}[1]
PASS: gdb.base/printcmds.exp: print some_volatile_enum
PASS: gdb.base/printcmds.exp: print three
PASS: gdb.base/printcmds.exp: printf "x=%d,y=%d,z=%d\n", 5, 6, 7
PASS: gdb.base/printcmds.exp: printf "string=%.4sxx\n", teststring
PASS: gdb.base/printcmds.exp: printf "string=%sxx\n", teststring
PASS: gdb.base/printcmds.exp: printf "%f is fun\n", 1.0
PASS: gdb.base/printcmds.exp: printf "x=%d,y=%f,z=%d\n", 5, 6.0, 7
PASS: gdb.base/printcmds.exp: printf "%x %f, %c %x, %x, %f\n", 0xbad, -99.541, 'z', 0xfeedface, 0xdeadbeef, 5.0
PASS: gdb.base/printcmds.exp: printf "%c\n", "x"[1,0]
PASS: gdb.base/printcmds.exp: printf "%%%d%%\n", 5
PASS: gdb.base/printcmds.exp: printf "%", 0
PASS: gdb.base/printcmds.exp: printf "%.234", 0
PASS: gdb.base/printcmds.exp: printf "%-", 0
PASS: gdb.base/printcmds.exp: printf "%-23", 0
PASS: gdb.base/printcmds.exp: printf "%#p", 0
PASS: gdb.base/printcmds.exp: printf "% p", 0
PASS: gdb.base/printcmds.exp: printf "%0p", 0
PASS: gdb.base/printcmds.exp: printf "%+p", 0
PASS: gdb.base/printcmds.exp: create hibob command
PASS: gdb.base/printcmds.exp: run hibob command
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1.2df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",-1.2df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1.234567df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",-1.234567df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1234567.df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",-1234567.df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1.2E1df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1.2E10df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1.2E-10df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1.2E96df
PASS: gdb.base/printcmds.exp: printf "%Df\n",1.2dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",-1.2dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",1.234567890123456dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",-1.234567890123456dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",1234567890123456.dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",-1234567890123456.dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",1.2E1dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",1.2E10dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",1.2E-10dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",1.2E384dd
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1.2dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",-1.2dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1.234567890123456789012345678901234dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",-1.234567890123456789012345678901234dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1234567890123456789012345678901234.dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",-1234567890123456789012345678901234.dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1.2E1dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1.2E10dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1.2E-10dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1.2E6144dl
PASS: gdb.base/printcmds.exp: printf "%Hf %Hf\n",1.2df,1.3df
PASS: gdb.base/printcmds.exp: set print symbol on
PASS: gdb.base/printcmds.exp: print &three
PASS: gdb.base/printcmds.exp: print parrays
PASS: gdb.base/printcmds.exp: set print symbol off
PASS: gdb.base/printcmds.exp: print invalid_LLL
PASS: gdb.base/printcmds.exp: print invalid_LLE
PASS: gdb.base/printcmds.exp: print invalid_LLR
PASS: gdb.base/printcmds.exp: print invalid_LLS
PASS: gdb.base/printcmds.exp: print invalid_ELL
PASS: gdb.base/printcmds.exp: print invalid_ELR
PASS: gdb.base/printcmds.exp: print invalid_ELS
PASS: gdb.base/printcmds.exp: print invalid_RLL
PASS: gdb.base/printcmds.exp: print invalid_RLE
PASS: gdb.base/printcmds.exp: print invalid_RLR
PASS: gdb.base/printcmds.exp: print invalid_RLS
PASS: gdb.base/printcmds.exp: print invalid_SLL
PASS: gdb.base/printcmds.exp: print invalid_SLE
PASS: gdb.base/printcmds.exp: print invalid_SLR
PASS: gdb.base/printcmds.exp: print invalid_SLS
PASS: gdb.base/printcmds.exp: print invalid_LRL
PASS: gdb.base/printcmds.exp: print invalid_LRE
PASS: gdb.base/printcmds.exp: print invalid_LRR
PASS: gdb.base/printcmds.exp: print invalid_LRS
PASS: gdb.base/printcmds.exp: print invalid_ERL
PASS: gdb.base/printcmds.exp: print invalid_ERR
PASS: gdb.base/printcmds.exp: print invalid_ERS
PASS: gdb.base/printcmds.exp: print invalid_RRL
PASS: gdb.base/printcmds.exp: print invalid_RRE
PASS: gdb.base/printcmds.exp: print invalid_RRR
PASS: gdb.base/printcmds.exp: print invalid_RRS
PASS: gdb.base/printcmds.exp: print invalid_SRL
PASS: gdb.base/printcmds.exp: print invalid_SRE
PASS: gdb.base/printcmds.exp: print invalid_SRR
PASS: gdb.base/printcmds.exp: print invalid_SRS
PASS: gdb.base/printcmds.exp: print invalid_LSL
PASS: gdb.base/printcmds.exp: print invalid_LSE
PASS: gdb.base/printcmds.exp: print invalid_LSR
PASS: gdb.base/printcmds.exp: print invalid_LSS
PASS: gdb.base/printcmds.exp: print invalid_ESL
PASS: gdb.base/printcmds.exp: print invalid_ESR
PASS: gdb.base/printcmds.exp: print invalid_ESS
PASS: gdb.base/printcmds.exp: print invalid_RSL
PASS: gdb.base/printcmds.exp: print invalid_RSE
PASS: gdb.base/printcmds.exp: print invalid_RSR
PASS: gdb.base/printcmds.exp: print invalid_RSS
PASS: gdb.base/printcmds.exp: print invalid_SSL
PASS: gdb.base/printcmds.exp: print invalid_SSE
PASS: gdb.base/printcmds.exp: print invalid_SSR
PASS: gdb.base/printcmds.exp: print invalid_SSS
Running ../../../gdb/testsuite/gdb.base/environ.exp ...
Running ../../../gdb/testsuite/gdb.base/call-strs.exp ...
PASS: gdb.base/call-strs.exp: set print sevenbit-strings
PASS: gdb.base/call-strs.exp: set print address off
PASS: gdb.base/call-strs.exp: set print symbol off
PASS: gdb.base/call-strs.exp: set width 0
PASS: gdb.base/call-strs.exp: step after assignment to s
PASS: gdb.base/call-strs.exp: next over strcpy
PASS: gdb.base/call-strs.exp: print buf
PASS: gdb.base/call-strs.exp: print s
Running ../../../gdb/testsuite/gdb.base/break-entry.exp ...
UNTESTED: gdb.base/break-entry.exp: break-entry.exp
Running ../../../gdb/testsuite/gdb.base/so-impl-ld.exp ...
Running ../../../gdb/testsuite/gdb.base/fortran-sym-case.exp ...
PASS: gdb.base/fortran-sym-case.exp: set language fortran
PASS: gdb.base/fortran-sym-case.exp: frame
Running ../../../gdb/testsuite/gdb.base/vla-stub.exp ...
PASS: gdb.base/vla-stub.exp: p *local_struct.ptr
PASS: gdb.base/vla-stub.exp: whatis local_struct.here
PASS: gdb.base/vla-stub.exp: whatis *local_struct.ptr
Running ../../../gdb/testsuite/gdb.base/dprintf-detach.exp ...
Running ../../../gdb/testsuite/gdb.base/argv0-symlink.exp ...
PASS: gdb.base/argv0-symlink.exp: set print repeats 10000
PASS: gdb.base/argv0-symlink.exp: set print elements 10000
PASS: gdb.base/argv0-symlink.exp: kept file symbolic link name
PASS: gdb.base/argv0-symlink.exp: kept file symbolic link name for info inferiors
PASS: gdb.base/argv0-symlink.exp: set print repeats 10000
PASS: gdb.base/argv0-symlink.exp: set print elements 10000
PASS: gdb.base/argv0-symlink.exp: kept directory symbolic link name
PASS: gdb.base/argv0-symlink.exp: kept directory symbolic link name for info inferiors
Running ../../../gdb/testsuite/gdb.base/structs2.exp ...
PASS: gdb.base/structs2.exp: set width 0
PASS: gdb.base/structs2.exp: structs2 sanity check
PASS: gdb.base/structs2.exp: structs2 breakpoint set
PASS: gdb.base/structs2.exp: structs2 continue1
PASS: gdb.base/structs2.exp: structs2 continue2
Running ../../../gdb/testsuite/gdb.base/dcache-line-read-error.exp ...
UNSUPPORTED: gdb.base/dcache-line-read-error.exp: dcache-line-read-error.exp
Running ../../../gdb/testsuite/gdb.base/huge.exp ...
Running ../../../gdb/testsuite/gdb.base/auxv.exp ...
Running ../../../gdb/testsuite/gdb.base/stale-infcall.exp ...
PASS: gdb.base/stale-infcall.exp: continue to breakpoint: test-next
PASS: gdb.base/stale-infcall.exp: set $test_fail_bpnum=$bpnum
PASS: gdb.base/stale-infcall.exp: test system longjmp tracking support
PASS: gdb.base/stale-infcall.exp: delete $test_fail_bpnum
PASS: gdb.base/stale-infcall.exp: continue to breakpoint: break-run1
PASS: gdb.base/stale-infcall.exp: print infcall ()
PASS: gdb.base/stale-infcall.exp: stack corrupted
PASS: gdb.base/stale-infcall.exp: bt
PASS: gdb.base/stale-infcall.exp: maintenance print dummy-frames
PASS: gdb.base/stale-infcall.exp: maintenance info breakpoints
Running ../../../gdb/testsuite/gdb.base/label.exp ...
Running ../../../gdb/testsuite/gdb.base/ctxobj.exp ...
Running ../../../gdb/testsuite/gdb.base/asmlabel.exp ...
PASS: gdb.base/asmlabel.exp: breakpoint at L1
PASS: gdb.base/asmlabel.exp: breakpoint at L2
PASS: gdb.base/asmlabel.exp: continue to L1
PASS: gdb.base/asmlabel.exp: continue to L2
PASS: gdb.base/asmlabel.exp: check value of v at L2
Running ../../../gdb/testsuite/gdb.base/break-probes.exp ...
Running ../../../gdb/testsuite/gdb.base/interrupt.exp ...
Running ../../../gdb/testsuite/gdb.base/store.exp ...
PASS: gdb.base/store.exp: tbreak wack_charest
PASS: gdb.base/store.exp: continue to wack_charest
PASS: gdb.base/store.exp: var charest l; print old l, expecting -1 .*
PASS: gdb.base/store.exp: var charest l; print old r, expecting -2 .*
PASS: gdb.base/store.exp: var charest l; setting l to 4
PASS: gdb.base/store.exp: var charest l; print new l, expecting 4 ..004.
PASS: gdb.base/store.exp: var charest l; next over add call
PASS: gdb.base/store.exp: var charest l; print incremented l, expecting 2 ..002.
PASS: gdb.base/store.exp: tbreak wack_short
PASS: gdb.base/store.exp: continue to wack_short
PASS: gdb.base/store.exp: var short l; print old l, expecting -1
PASS: gdb.base/store.exp: var short l; print old r, expecting -2
PASS: gdb.base/store.exp: var short l; setting l to 4
PASS: gdb.base/store.exp: var short l; print new l, expecting 4
PASS: gdb.base/store.exp: var short l; next over add call
PASS: gdb.base/store.exp: var short l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak wack_int
PASS: gdb.base/store.exp: continue to wack_int
PASS: gdb.base/store.exp: var int l; print old l, expecting -1
PASS: gdb.base/store.exp: var int l; print old r, expecting -2
PASS: gdb.base/store.exp: var int l; setting l to 4
PASS: gdb.base/store.exp: var int l; print new l, expecting 4
PASS: gdb.base/store.exp: var int l; next over add call
PASS: gdb.base/store.exp: var int l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak wack_long
PASS: gdb.base/store.exp: continue to wack_long
PASS: gdb.base/store.exp: var long l; print old l, expecting -1
PASS: gdb.base/store.exp: var long l; print old r, expecting -2
PASS: gdb.base/store.exp: var long l; setting l to 4
PASS: gdb.base/store.exp: var long l; print new l, expecting 4
PASS: gdb.base/store.exp: var long l; next over add call
PASS: gdb.base/store.exp: var long l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak wack_longest
PASS: gdb.base/store.exp: continue to wack_longest
PASS: gdb.base/store.exp: var longest l; print old l, expecting -1
PASS: gdb.base/store.exp: var longest l; print old r, expecting -2
PASS: gdb.base/store.exp: var longest l; setting l to 4
PASS: gdb.base/store.exp: var longest l; print new l, expecting 4
PASS: gdb.base/store.exp: var longest l; next over add call
PASS: gdb.base/store.exp: var longest l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak wack_float
PASS: gdb.base/store.exp: continue to wack_float
PASS: gdb.base/store.exp: var float l; print old l, expecting -1
PASS: gdb.base/store.exp: var float l; print old r, expecting -2
PASS: gdb.base/store.exp: var float l; setting l to 4
PASS: gdb.base/store.exp: var float l; print new l, expecting 4
PASS: gdb.base/store.exp: var float l; next over add call
PASS: gdb.base/store.exp: var float l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak wack_double
PASS: gdb.base/store.exp: continue to wack_double
PASS: gdb.base/store.exp: var double l; print old l, expecting -1
PASS: gdb.base/store.exp: var double l; print old r, expecting -2
PASS: gdb.base/store.exp: var double l; setting l to 4
PASS: gdb.base/store.exp: var double l; print new l, expecting 4
PASS: gdb.base/store.exp: var double l; next over add call
PASS: gdb.base/store.exp: var double l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak wack_doublest
PASS: gdb.base/store.exp: continue to wack_doublest
PASS: gdb.base/store.exp: var doublest l; print old l, expecting -1
PASS: gdb.base/store.exp: var doublest l; print old r, expecting -2
PASS: gdb.base/store.exp: var doublest l; setting l to 4
PASS: gdb.base/store.exp: var doublest l; print new l, expecting 4
PASS: gdb.base/store.exp: var doublest l; next over add call
PASS: gdb.base/store.exp: var doublest l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak add_charest
PASS: gdb.base/store.exp: continue to add_charest
PASS: gdb.base/store.exp: upvar charest l; up
PASS: gdb.base/store.exp: upvar charest l; print old l, expecting -1 .*
PASS: gdb.base/store.exp: upvar charest l; print old r, expecting -2 .*
PASS: gdb.base/store.exp: upvar charest l; set l to 4
PASS: gdb.base/store.exp: upvar charest l; print new l, expecting 4 ..004.
PASS: gdb.base/store.exp: tbreak add_short
PASS: gdb.base/store.exp: continue to add_short
PASS: gdb.base/store.exp: upvar short l; up
PASS: gdb.base/store.exp: upvar short l; print old l, expecting -1
PASS: gdb.base/store.exp: upvar short l; print old r, expecting -2
PASS: gdb.base/store.exp: upvar short l; set l to 4
PASS: gdb.base/store.exp: upvar short l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak add_int
PASS: gdb.base/store.exp: continue to add_int
PASS: gdb.base/store.exp: upvar int l; up
PASS: gdb.base/store.exp: upvar int l; print old l, expecting -1
PASS: gdb.base/store.exp: upvar int l; print old r, expecting -2
PASS: gdb.base/store.exp: upvar int l; set l to 4
PASS: gdb.base/store.exp: upvar int l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak add_long
PASS: gdb.base/store.exp: continue to add_long
PASS: gdb.base/store.exp: upvar long l; up
PASS: gdb.base/store.exp: upvar long l; print old l, expecting -1
PASS: gdb.base/store.exp: upvar long l; print old r, expecting -2
PASS: gdb.base/store.exp: upvar long l; set l to 4
PASS: gdb.base/store.exp: upvar long l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak add_longest
PASS: gdb.base/store.exp: continue to add_longest
PASS: gdb.base/store.exp: upvar longest l; up
PASS: gdb.base/store.exp: upvar longest l; print old l, expecting -1
PASS: gdb.base/store.exp: upvar longest l; print old r, expecting -2
PASS: gdb.base/store.exp: upvar longest l; set l to 4
PASS: gdb.base/store.exp: upvar longest l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak add_float
PASS: gdb.base/store.exp: continue to add_float
PASS: gdb.base/store.exp: upvar float l; up
PASS: gdb.base/store.exp: upvar float l; print old l, expecting -1
PASS: gdb.base/store.exp: upvar float l; print old r, expecting -2
PASS: gdb.base/store.exp: upvar float l; set l to 4
PASS: gdb.base/store.exp: upvar float l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak add_double
PASS: gdb.base/store.exp: continue to add_double
PASS: gdb.base/store.exp: upvar double l; up
PASS: gdb.base/store.exp: upvar double l; print old l, expecting -1
PASS: gdb.base/store.exp: upvar double l; print old r, expecting -2
PASS: gdb.base/store.exp: upvar double l; set l to 4
PASS: gdb.base/store.exp: upvar double l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak add_doublest
PASS: gdb.base/store.exp: continue to add_doublest
PASS: gdb.base/store.exp: upvar doublest l; up
PASS: gdb.base/store.exp: upvar doublest l; print old l, expecting -1
PASS: gdb.base/store.exp: upvar doublest l; print old r, expecting -2
PASS: gdb.base/store.exp: upvar doublest l; set l to 4
PASS: gdb.base/store.exp: upvar doublest l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak wack_struct_1
PASS: gdb.base/store.exp: continue to wack_struct_1
PASS: gdb.base/store.exp: var struct 1 u; next to add_struct_1 call
PASS: gdb.base/store.exp: var struct 1 u; print old u, expecting {s = \{0}}
PASS: gdb.base/store.exp: var struct 1 u; set u to s_1
PASS: gdb.base/store.exp: var struct 1 u; print new u, expecting {s = \{1}}
PASS: gdb.base/store.exp: tbreak wack_struct_2
PASS: gdb.base/store.exp: continue to wack_struct_2
PASS: gdb.base/store.exp: var struct 2 u; next to add_struct_2 call
PASS: gdb.base/store.exp: var struct 2 u; print old u, expecting {s = \{0, 0}}
PASS: gdb.base/store.exp: var struct 2 u; set u to s_2
PASS: gdb.base/store.exp: var struct 2 u; print new u, expecting {s = \{1, 2}}
PASS: gdb.base/store.exp: tbreak wack_struct_3
PASS: gdb.base/store.exp: continue to wack_struct_3
PASS: gdb.base/store.exp: var struct 3 u; next to add_struct_3 call
PASS: gdb.base/store.exp: var struct 3 u; print old u, expecting {s = \{0, 0, 0}}
PASS: gdb.base/store.exp: var struct 3 u; set u to s_3
PASS: gdb.base/store.exp: var struct 3 u; print new u, expecting {s = \{1, 2, 3}}
PASS: gdb.base/store.exp: tbreak wack_struct_4
PASS: gdb.base/store.exp: continue to wack_struct_4
PASS: gdb.base/store.exp: var struct 4 u; next to add_struct_4 call
PASS: gdb.base/store.exp: var struct 4 u; print old u, expecting {s = \{0, 0, 0, 0}}
PASS: gdb.base/store.exp: var struct 4 u; set u to s_4
PASS: gdb.base/store.exp: var struct 4 u; print new u, expecting {s = \{1, 2, 3, 4}}
PASS: gdb.base/store.exp: tbreak add_struct_1
PASS: gdb.base/store.exp: continue to add_struct_1
PASS: gdb.base/store.exp: up struct 1 u; up
PASS: gdb.base/store.exp: up struct 1 u; print old u, expecting {s = \{0}}
PASS: gdb.base/store.exp: up struct 1 u; set u to s_1
PASS: gdb.base/store.exp: up struct 1 u; print new u, expecting {s = \{1}}
PASS: gdb.base/store.exp: tbreak add_struct_2
PASS: gdb.base/store.exp: continue to add_struct_2
PASS: gdb.base/store.exp: up struct 2 u; up
PASS: gdb.base/store.exp: up struct 2 u; print old u, expecting {s = \{0, 0}}
PASS: gdb.base/store.exp: up struct 2 u; set u to s_2
PASS: gdb.base/store.exp: up struct 2 u; print new u, expecting {s = \{1, 2}}
PASS: gdb.base/store.exp: tbreak add_struct_3
PASS: gdb.base/store.exp: continue to add_struct_3
PASS: gdb.base/store.exp: up struct 3 u; up
PASS: gdb.base/store.exp: up struct 3 u; print old u, expecting {s = \{0, 0, 0}}
PASS: gdb.base/store.exp: up struct 3 u; set u to s_3
PASS: gdb.base/store.exp: up struct 3 u; print new u, expecting {s = \{1, 2, 3}}
PASS: gdb.base/store.exp: tbreak add_struct_4
PASS: gdb.base/store.exp: continue to add_struct_4
PASS: gdb.base/store.exp: up struct 4 u; up
PASS: gdb.base/store.exp: up struct 4 u; print old u, expecting {s = \{0, 0, 0, 0}}
PASS: gdb.base/store.exp: up struct 4 u; set u to s_4
PASS: gdb.base/store.exp: up struct 4 u; print new u, expecting {s = \{1, 2, 3, 4}}
PASS: gdb.base/store.exp: tbreak wack_field_1
PASS: gdb.base/store.exp: continue field 1
PASS: gdb.base/store.exp: next field 1
PASS: gdb.base/store.exp: old field 1
PASS: gdb.base/store.exp: set variable u = F_1
PASS: gdb.base/store.exp: new field 1
PASS: gdb.base/store.exp: set variable u = F_1, u.i = f_1.i
PASS: gdb.base/store.exp: f_1.i
PASS: gdb.base/store.exp: set variable u = F_1, u.j = f_1.j
PASS: gdb.base/store.exp: f_1.j
PASS: gdb.base/store.exp: set variable u = F_1, u.k = f_1.k
PASS: gdb.base/store.exp: f_1.k
PASS: gdb.base/store.exp: set variable u = f_1, u.i = F_1.i
PASS: gdb.base/store.exp: F_1.i
PASS: gdb.base/store.exp: set variable u = f_1, u.j = F_1.j
PASS: gdb.base/store.exp: F_1.j
PASS: gdb.base/store.exp: set variable u = f_1, u.k = F_1.k
PASS: gdb.base/store.exp: F_1.k
PASS: gdb.base/store.exp: tbreak wack_field_2
PASS: gdb.base/store.exp: continue field 2
PASS: gdb.base/store.exp: next field 2
PASS: gdb.base/store.exp: old field 2
PASS: gdb.base/store.exp: set variable u = F_2
PASS: gdb.base/store.exp: new field 2
PASS: gdb.base/store.exp: set variable u = F_2, u.i = f_2.i
PASS: gdb.base/store.exp: f_2.i
PASS: gdb.base/store.exp: set variable u = F_2, u.j = f_2.j
PASS: gdb.base/store.exp: f_2.j
PASS: gdb.base/store.exp: set variable u = F_2, u.k = f_2.k
PASS: gdb.base/store.exp: f_2.k
PASS: gdb.base/store.exp: set variable u = f_2, u.i = F_2.i
PASS: gdb.base/store.exp: F_2.i
PASS: gdb.base/store.exp: set variable u = f_2, u.j = F_2.j
PASS: gdb.base/store.exp: F_2.j
PASS: gdb.base/store.exp: set variable u = f_2, u.k = F_2.k
PASS: gdb.base/store.exp: F_2.k
PASS: gdb.base/store.exp: tbreak wack_field_3
PASS: gdb.base/store.exp: continue field 3
PASS: gdb.base/store.exp: next field 3
PASS: gdb.base/store.exp: old field 3
PASS: gdb.base/store.exp: set variable u = F_3
PASS: gdb.base/store.exp: new field 3
PASS: gdb.base/store.exp: set variable u = F_3, u.i = f_3.i
PASS: gdb.base/store.exp: f_3.i
PASS: gdb.base/store.exp: set variable u = F_3, u.j = f_3.j
PASS: gdb.base/store.exp: f_3.j
PASS: gdb.base/store.exp: set variable u = F_3, u.k = f_3.k
PASS: gdb.base/store.exp: f_3.k
PASS: gdb.base/store.exp: set variable u = f_3, u.i = F_3.i
PASS: gdb.base/store.exp: F_3.i
PASS: gdb.base/store.exp: set variable u = f_3, u.j = F_3.j
PASS: gdb.base/store.exp: F_3.j
PASS: gdb.base/store.exp: set variable u = f_3, u.k = F_3.k
PASS: gdb.base/store.exp: F_3.k
PASS: gdb.base/store.exp: tbreak wack_field_4
PASS: gdb.base/store.exp: continue field 4
PASS: gdb.base/store.exp: next field 4
PASS: gdb.base/store.exp: old field 4
PASS: gdb.base/store.exp: set variable u = F_4
PASS: gdb.base/store.exp: new field 4
PASS: gdb.base/store.exp: set variable u = F_4, u.i = f_4.i
PASS: gdb.base/store.exp: f_4.i
PASS: gdb.base/store.exp: set variable u = F_4, u.j = f_4.j
PASS: gdb.base/store.exp: f_4.j
PASS: gdb.base/store.exp: set variable u = F_4, u.k = f_4.k
PASS: gdb.base/store.exp: f_4.k
PASS: gdb.base/store.exp: set variable u = f_4, u.i = F_4.i
PASS: gdb.base/store.exp: F_4.i
PASS: gdb.base/store.exp: set variable u = f_4, u.j = F_4.j
PASS: gdb.base/store.exp: F_4.j
PASS: gdb.base/store.exp: set variable u = f_4, u.k = F_4.k
PASS: gdb.base/store.exp: F_4.k
Running ../../../gdb/testsuite/gdb.base/checkpoint-ns.exp ...
Running ../../../gdb/testsuite/gdb.base/tui-layout.exp ...
PASS: gdb.base/tui-layout.exp: layout asm
Running ../../../gdb/testsuite/gdb.base/watchpoint.exp ...
PASS: gdb.base/watchpoint.exp: disable fast watches
PASS: gdb.base/watchpoint.exp: show disable fast watches
PASS: gdb.base/watchpoint.exp: set slow conditional watch
PASS: gdb.base/watchpoint.exp: trigger slow conditional watch
PASS: gdb.base/watchpoint.exp: delete watch ival3
PASS: gdb.base/watchpoint.exp: set slow condition watch w/thread
PASS: gdb.base/watchpoint.exp: delete watch w/condition and thread
PASS: gdb.base/watchpoint.exp: rwatch disallowed when can-set-hw-watchpoints cleared
PASS: gdb.base/watchpoint.exp: awatch disallowed when can-set-hw-watchpoints cleared
PASS: gdb.base/watchpoint.exp: set breakpoint at marker1
PASS: gdb.base/watchpoint.exp: set breakpoint at marker2
PASS: gdb.base/watchpoint.exp: info break in watchpoint.exp
PASS: gdb.base/watchpoint.exp: set watchpoint on ival3
PASS: gdb.base/watchpoint.exp: watchpoint found in watchpoint/breakpoint table
PASS: gdb.base/watchpoint.exp: disable watchpoint
PASS: gdb.base/watchpoint.exp: disable watchpoint in test_simple_watchpoint
PASS: gdb.base/watchpoint.exp: run to marker1 in test_simple_watchpoint
PASS: gdb.base/watchpoint.exp: enable watchpoint
PASS: gdb.base/watchpoint.exp: break func1
PASS: gdb.base/watchpoint.exp: set $func1_breakpoint_number = $bpnum
PASS: gdb.base/watchpoint.exp: continue to breakpoint at func1
PASS: gdb.base/watchpoint.exp: watchpoint hit, first time
PASS: gdb.base/watchpoint.exp: Watchpoint hit count is 1
PASS: gdb.base/watchpoint.exp: delete $func1_breakpoint_number
PASS: gdb.base/watchpoint.exp: watchpoint hit, second time
PASS: gdb.base/watchpoint.exp: Watchpoint hit count is 2
PASS: gdb.base/watchpoint.exp: watchpoint hit, third time
PASS: gdb.base/watchpoint.exp: Watchpoint hit count is 3
PASS: gdb.base/watchpoint.exp: watchpoint hit, fourth time
PASS: gdb.base/watchpoint.exp: Watchpoint hit count is 4
PASS: gdb.base/watchpoint.exp: watchpoint hit, fifth time
PASS: gdb.base/watchpoint.exp: Watchpoint hit count is 5
PASS: gdb.base/watchpoint.exp: continue to marker2
PASS: gdb.base/watchpoint.exp: watchpoint disabled
PASS: gdb.base/watchpoint.exp: continue until exit at continue to exit in test_simple_watchpoint
PASS: gdb.base/watchpoint.exp: watchpoints found in watchpoint/breakpoint table
PASS: gdb.base/watchpoint.exp: disable watchpoint in test_disabling_watchpoints
PASS: gdb.base/watchpoint.exp: run to marker1 in test_disabling_watchpoints
PASS: gdb.base/watchpoint.exp: watchpoint enabled
PASS: gdb.base/watchpoint.exp: watchpoint hit in test_disabling_watchpoints, first time
PASS: gdb.base/watchpoint.exp: watchpoint hit in test_disabling_watchpoints, second time
PASS: gdb.base/watchpoint.exp: disable watchpoint #2 in test_disabling_watchpoints
PASS: gdb.base/watchpoint.exp: watchpoint disabled in table
PASS: gdb.base/watchpoint.exp: disabled watchpoint skipped
PASS: gdb.base/watchpoint.exp: continue until exit at continue to exit in test_disabling_watchpoints
PASS: gdb.base/watchpoint.exp: watch ival2
PASS: gdb.base/watchpoint.exp: break func2 if 0
PASS: gdb.base/watchpoint.exp: p $func2_breakpoint_number = $bpnum
PASS: gdb.base/watchpoint.exp: calling function with watchpoint enabled
PASS: gdb.base/watchpoint.exp: finish from marker1
PASS: gdb.base/watchpoint.exp: back at main from marker1
PASS: gdb.base/watchpoint.exp: next to `for' in watchpoint.exp
PASS: gdb.base/watchpoint.exp: until to ival1 assignment
PASS: gdb.base/watchpoint.exp: until to ival3 assignment
PASS: gdb.base/watchpoint.exp: until out of loop
PASS: gdb.base/watchpoint.exp: step to ival2 assignment
PASS: gdb.base/watchpoint.exp: watch ptr1->val
PASS: gdb.base/watchpoint.exp: break marker5
PASS: gdb.base/watchpoint.exp: Test complex watchpoint
PASS: gdb.base/watchpoint.exp: did not trigger wrong watchpoint
PASS: gdb.base/watchpoint.exp: disable in test_complex_watchpoint
PASS: gdb.base/watchpoint.exp: break marker6
PASS: gdb.base/watchpoint.exp: continue to marker6
PASS: gdb.base/watchpoint.exp: continue to breakpoint: func2 breakpoint here
PASS: gdb.base/watchpoint.exp: set local watch
PASS: gdb.base/watchpoint.exp: trigger local watch
PASS: gdb.base/watchpoint.exp: self-delete local watch
PASS: gdb.base/watchpoint.exp: continue to breakpoint: func2 breakpoint here
PASS: gdb.base/watchpoint.exp: set partially local watch
PASS: gdb.base/watchpoint.exp: trigger1 partially local watch
PASS: gdb.base/watchpoint.exp: trigger2 partially local watch
PASS: gdb.base/watchpoint.exp: self-delete partially local watch
PASS: gdb.base/watchpoint.exp: continue to breakpoint: func2 breakpoint here
PASS: gdb.base/watchpoint.exp: set static local watch
PASS: gdb.base/watchpoint.exp: trigger static local watch
PASS: gdb.base/watchpoint.exp: continue after trigger static local watch
PASS: gdb.base/watchpoint.exp: static local watch did not self-delete
PASS: gdb.base/watchpoint.exp: tbreak recurser
PASS: gdb.base/watchpoint.exp: cont
PASS: gdb.base/watchpoint.exp: next past local_x initialization
PASS: gdb.base/watchpoint.exp: set local watch in recursive call
PASS: gdb.base/watchpoint.exp: trigger local watch in recursive call
PASS: gdb.base/watchpoint.exp: self-delete local watch in recursive call
PASS: gdb.base/watchpoint.exp: cont
PASS: gdb.base/watchpoint.exp: tbreak recurser
PASS: gdb.base/watchpoint.exp: cont
PASS: gdb.base/watchpoint.exp: next past local_x initialization
PASS: gdb.base/watchpoint.exp: set local watch in recursive call with explicit scope
PASS: gdb.base/watchpoint.exp: trigger local watch with explicit scope in recursive call
PASS: gdb.base/watchpoint.exp: self-delete local watch with explicit scope in recursive call (2)
PASS: gdb.base/watchpoint.exp: disable in test_complex_watchpoint
PASS: gdb.base/watchpoint.exp: continue until exit at continue to exit in test_complex_watchpoint
PASS: gdb.base/watchpoint.exp: watchpoint refused to insert on nonexistent struct member
PASS: gdb.base/watchpoint.exp: watch global_ptr
PASS: gdb.base/watchpoint.exp: watch *(int *) 0
PASS: gdb.base/watchpoint.exp: watch -location *global_ptr
PASS: gdb.base/watchpoint.exp: watch *global_ptr
PASS: gdb.base/watchpoint.exp: set $global_ptr_breakpoint_number = $bpnum
PASS: gdb.base/watchpoint.exp: global_ptr next
PASS: gdb.base/watchpoint.exp: next over ptr init
PASS: gdb.base/watchpoint.exp: next over buffer set
PASS: gdb.base/watchpoint.exp: delete $global_ptr_breakpoint_number
PASS: gdb.base/watchpoint.exp: watch **global_ptr_ptr
PASS: gdb.base/watchpoint.exp: set $global_ptr_ptr_breakpoint_number = $bpnum
PASS: gdb.base/watchpoint.exp: global_ptr_ptr next
PASS: gdb.base/watchpoint.exp: next over global_ptr_ptr init
PASS: gdb.base/watchpoint.exp: next over global_ptr_ptr buffer set
PASS: gdb.base/watchpoint.exp: next over global_ptr_ptr pointer advance
PASS: gdb.base/watchpoint.exp: delete $global_ptr_ptr_breakpoint_number
PASS: gdb.base/watchpoint.exp: continue to breakpoint: second x assignment
PASS: gdb.base/watchpoint.exp: watch x
PASS: gdb.base/watchpoint.exp: next after watch x
PASS: gdb.base/watchpoint.exp: delete watch x
PASS: gdb.base/watchpoint.exp: watch buf
PASS: gdb.base/watchpoint.exp: watchpoint on buf hit
PASS: gdb.base/watchpoint.exp: delete watch buf
PASS: gdb.base/watchpoint.exp: number is constant
PASS: gdb.base/watchpoint.exp: number with cast is constant
PASS: gdb.base/watchpoint.exp: marker1 is constant
PASS: gdb.base/watchpoint.exp: watch count + 6
PASS: gdb.base/watchpoint.exp: delete watchpoint `count + 6'
PASS: gdb.base/watchpoint.exp: watch 7 + count
PASS: gdb.base/watchpoint.exp: delete watchpoint `7 + count'
PASS: gdb.base/watchpoint.exp: watch $pc
PASS: gdb.base/watchpoint.exp: disable watchpoint `$pc'
PASS: gdb.base/watchpoint.exp: reenable watchpoint `$pc'
PASS: gdb.base/watchpoint.exp: watchpoint `$pc' is enabled
PASS: gdb.base/watchpoint.exp: delete watchpoint `$pc'
PASS: gdb.base/watchpoint.exp: continue to breakpoint: func5 breakpoint here
PASS: gdb.base/watchpoint.exp: watch -location .x
PASS: gdb.base/watchpoint.exp: continue with watch -location
PASS: gdb.base/watchpoint.exp: delete watch -location
PASS: gdb.base/watchpoint.exp: continue to breakpoint: func6 breakpoint here
PASS: gdb.base/watchpoint.exp: watch foo2
PASS: gdb.base/watchpoint.exp: continue with watch foo2
PASS: gdb.base/watchpoint.exp: delete watch foo2
PASS: gdb.base/watchpoint.exp: continue to breakpoint: func7 breakpoint here
PASS: gdb.base/watchpoint.exp: watch foo4
PASS: gdb.base/watchpoint.exp: continue with watch foo4
PASS: gdb.base/watchpoint.exp: delete watch foo4
PASS: gdb.base/watchpoint.exp: rwatch disallowed for register based expression
PASS: gdb.base/watchpoint.exp: awatch disallowed for register based expression
PASS: gdb.base/watchpoint.exp: no-hw: set breakpoint at marker1
PASS: gdb.base/watchpoint.exp: no-hw: set breakpoint at marker2
PASS: gdb.base/watchpoint.exp: no-hw: info break in watchpoint.exp
PASS: gdb.base/watchpoint.exp: no-hw: set watchpoint on ival3
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint found in watchpoint/breakpoint table
PASS: gdb.base/watchpoint.exp: no-hw: disable watchpoint
PASS: gdb.base/watchpoint.exp: no-hw: disable watchpoint in test_simple_watchpoint
PASS: gdb.base/watchpoint.exp: no-hw: run to marker1 in test_simple_watchpoint
PASS: gdb.base/watchpoint.exp: no-hw: enable watchpoint
PASS: gdb.base/watchpoint.exp: no-hw: break func1
PASS: gdb.base/watchpoint.exp: no-hw: set $func1_breakpoint_number = $bpnum
PASS: gdb.base/watchpoint.exp: no-hw: continue to breakpoint at func1
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint hit, first time
PASS: gdb.base/watchpoint.exp: no-hw: Watchpoint hit count is 1
PASS: gdb.base/watchpoint.exp: no-hw: delete $func1_breakpoint_number
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint hit, second time
PASS: gdb.base/watchpoint.exp: no-hw: Watchpoint hit count is 2
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint hit, third time
PASS: gdb.base/watchpoint.exp: no-hw: Watchpoint hit count is 3
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint hit, fourth time
PASS: gdb.base/watchpoint.exp: no-hw: Watchpoint hit count is 4
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint hit, fifth time
PASS: gdb.base/watchpoint.exp: no-hw: Watchpoint hit count is 5
PASS: gdb.base/watchpoint.exp: no-hw: continue to marker2
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint disabled
PASS: gdb.base/watchpoint.exp: no-hw: continue until exit at continue to exit in test_simple_watchpoint
PASS: gdb.base/watchpoint.exp: no-hw: watchpoints found in watchpoint/breakpoint table
PASS: gdb.base/watchpoint.exp: no-hw: disable watchpoint in test_disabling_watchpoints
PASS: gdb.base/watchpoint.exp: no-hw: run to marker1 in test_disabling_watchpoints
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint enabled
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint hit in test_disabling_watchpoints, first time
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint hit in test_disabling_watchpoints, second time
PASS: gdb.base/watchpoint.exp: no-hw: disable watchpoint #2 in test_disabling_watchpoints
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint disabled in table
PASS: gdb.base/watchpoint.exp: no-hw: disabled watchpoint skipped
PASS: gdb.base/watchpoint.exp: no-hw: continue until exit at continue to exit in test_disabling_watchpoints
PASS: gdb.base/watchpoint.exp: no-hw: watch ival2
PASS: gdb.base/watchpoint.exp: no-hw: break func2 if 0
PASS: gdb.base/watchpoint.exp: no-hw: p $func2_breakpoint_number = $bpnum
PASS: gdb.base/watchpoint.exp: no-hw: calling function with watchpoint enabled
PASS: gdb.base/watchpoint.exp: no-hw: finish from marker1
PASS: gdb.base/watchpoint.exp: no-hw: back at main from marker1
PASS: gdb.base/watchpoint.exp: no-hw: next to `for' in watchpoint.exp
PASS: gdb.base/watchpoint.exp: no-hw: until to ival1 assignment
PASS: gdb.base/watchpoint.exp: no-hw: until to ival3 assignment
PASS: gdb.base/watchpoint.exp: no-hw: until out of loop
PASS: gdb.base/watchpoint.exp: no-hw: step to ival2 assignment
PASS: gdb.base/watchpoint.exp: no-hw: watch ptr1->val
PASS: gdb.base/watchpoint.exp: no-hw: break marker5
PASS: gdb.base/watchpoint.exp: no-hw: Test complex watchpoint
PASS: gdb.base/watchpoint.exp: no-hw: did not trigger wrong watchpoint
PASS: gdb.base/watchpoint.exp: no-hw: disable in test_complex_watchpoint
PASS: gdb.base/watchpoint.exp: no-hw: break marker6
PASS: gdb.base/watchpoint.exp: no-hw: continue to marker6
PASS: gdb.base/watchpoint.exp: no-hw: continue to breakpoint: func2 breakpoint here
PASS: gdb.base/watchpoint.exp: no-hw: set local watch
PASS: gdb.base/watchpoint.exp: no-hw: trigger local watch
PASS: gdb.base/watchpoint.exp: no-hw: self-delete local watch
PASS: gdb.base/watchpoint.exp: no-hw: continue to breakpoint: func2 breakpoint here
PASS: gdb.base/watchpoint.exp: no-hw: set partially local watch
PASS: gdb.base/watchpoint.exp: no-hw: trigger1 partially local watch
PASS: gdb.base/watchpoint.exp: no-hw: trigger2 partially local watch
PASS: gdb.base/watchpoint.exp: no-hw: self-delete partially local watch
PASS: gdb.base/watchpoint.exp: no-hw: continue to breakpoint: func2 breakpoint here
PASS: gdb.base/watchpoint.exp: no-hw: set static local watch
PASS: gdb.base/watchpoint.exp: no-hw: trigger static local watch
PASS: gdb.base/watchpoint.exp: no-hw: continue after trigger static local watch
PASS: gdb.base/watchpoint.exp: no-hw: static local watch did not self-delete
PASS: gdb.base/watchpoint.exp: no-hw: tbreak recurser
PASS: gdb.base/watchpoint.exp: no-hw: cont
PASS: gdb.base/watchpoint.exp: no-hw: next past local_x initialization
PASS: gdb.base/watchpoint.exp: no-hw: set local watch in recursive call
PASS: gdb.base/watchpoint.exp: no-hw: trigger local watch in recursive call
PASS: gdb.base/watchpoint.exp: no-hw: self-delete local watch in recursive call
PASS: gdb.base/watchpoint.exp: no-hw: cont
PASS: gdb.base/watchpoint.exp: no-hw: tbreak recurser
PASS: gdb.base/watchpoint.exp: no-hw: cont
PASS: gdb.base/watchpoint.exp: no-hw: next past local_x initialization
PASS: gdb.base/watchpoint.exp: no-hw: set local watch in recursive call with explicit scope
PASS: gdb.base/watchpoint.exp: no-hw: trigger local watch with explicit scope in recursive call
PASS: gdb.base/watchpoint.exp: no-hw: self-delete local watch with explicit scope in recursive call (2)
PASS: gdb.base/watchpoint.exp: no-hw: disable in test_complex_watchpoint
PASS: gdb.base/watchpoint.exp: no-hw: continue until exit at continue to exit in test_complex_watchpoint
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint refused to insert on nonexistent struct member
PASS: gdb.base/watchpoint.exp: no-hw: watch global_ptr
PASS: gdb.base/watchpoint.exp: no-hw: watch *(int *) 0
PASS: gdb.base/watchpoint.exp: no-hw: watch -location *global_ptr
PASS: gdb.base/watchpoint.exp: no-hw: watch *global_ptr
PASS: gdb.base/watchpoint.exp: no-hw: set $global_ptr_breakpoint_number = $bpnum
PASS: gdb.base/watchpoint.exp: no-hw: global_ptr next
PASS: gdb.base/watchpoint.exp: no-hw: next over ptr init
PASS: gdb.base/watchpoint.exp: no-hw: next over buffer set
PASS: gdb.base/watchpoint.exp: no-hw: delete $global_ptr_breakpoint_number
PASS: gdb.base/watchpoint.exp: no-hw: watch **global_ptr_ptr
PASS: gdb.base/watchpoint.exp: no-hw: set $global_ptr_ptr_breakpoint_number = $bpnum
PASS: gdb.base/watchpoint.exp: no-hw: global_ptr_ptr next
PASS: gdb.base/watchpoint.exp: no-hw: next over global_ptr_ptr init
PASS: gdb.base/watchpoint.exp: no-hw: next over global_ptr_ptr buffer set
PASS: gdb.base/watchpoint.exp: no-hw: next over global_ptr_ptr pointer advance
PASS: gdb.base/watchpoint.exp: no-hw: delete $global_ptr_ptr_breakpoint_number
PASS: gdb.base/watchpoint.exp: no-hw: continue to breakpoint: second x assignment
PASS: gdb.base/watchpoint.exp: no-hw: watch x
PASS: gdb.base/watchpoint.exp: no-hw: next after watch x
PASS: gdb.base/watchpoint.exp: no-hw: delete watch x
PASS: gdb.base/watchpoint.exp: no-hw: watch buf
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint on buf hit
PASS: gdb.base/watchpoint.exp: no-hw: delete watch buf
PASS: gdb.base/watchpoint.exp: no-hw: number is constant
PASS: gdb.base/watchpoint.exp: no-hw: number with cast is constant
PASS: gdb.base/watchpoint.exp: no-hw: marker1 is constant
PASS: gdb.base/watchpoint.exp: no-hw: watch count + 6
PASS: gdb.base/watchpoint.exp: no-hw: delete watchpoint `count + 6'
PASS: gdb.base/watchpoint.exp: no-hw: watch 7 + count
PASS: gdb.base/watchpoint.exp: no-hw: delete watchpoint `7 + count'
PASS: gdb.base/watchpoint.exp: no-hw: watch $pc
PASS: gdb.base/watchpoint.exp: no-hw: disable watchpoint `$pc'
PASS: gdb.base/watchpoint.exp: no-hw: reenable watchpoint `$pc'
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint `$pc' is enabled
PASS: gdb.base/watchpoint.exp: no-hw: delete watchpoint `$pc'
PASS: gdb.base/watchpoint.exp: no-hw: continue to breakpoint: func5 breakpoint here
PASS: gdb.base/watchpoint.exp: no-hw: watch -location .x
PASS: gdb.base/watchpoint.exp: no-hw: continue with watch -location
PASS: gdb.base/watchpoint.exp: no-hw: delete watch -location
PASS: gdb.base/watchpoint.exp: no-hw: continue to breakpoint: func6 breakpoint here
PASS: gdb.base/watchpoint.exp: no-hw: watch foo2
PASS: gdb.base/watchpoint.exp: no-hw: continue with watch foo2
PASS: gdb.base/watchpoint.exp: no-hw: delete watch foo2
PASS: gdb.base/watchpoint.exp: no-hw: continue to breakpoint: func7 breakpoint here
PASS: gdb.base/watchpoint.exp: no-hw: watch foo4
PASS: gdb.base/watchpoint.exp: no-hw: continue with watch foo4
PASS: gdb.base/watchpoint.exp: no-hw: delete watch foo4
Running ../../../gdb/testsuite/gdb.base/disp-step-syscall.exp ...
Running ../../../gdb/testsuite/gdb.base/miscexprs.exp ...
PASS: gdb.base/miscexprs.exp: continue to marker1
PASS: gdb.base/miscexprs.exp: up from marker1
PASS: gdb.base/miscexprs.exp: print value of &ibig.i[0]
PASS: gdb.base/miscexprs.exp: print value of &cbig.c[0]
PASS: gdb.base/miscexprs.exp: print value of &fbig.f[0]
PASS: gdb.base/miscexprs.exp: print value of &dbig.d[0]
PASS: gdb.base/miscexprs.exp: print value of &sbig.s[0]
PASS: gdb.base/miscexprs.exp: print value of &lbig.l[0]
PASS: gdb.base/miscexprs.exp: print value of ibig.i[100] | 1
PASS: gdb.base/miscexprs.exp: print value of sbig.s[90] & 127
PASS: gdb.base/miscexprs.exp: print value of !ibig.i[100]
PASS: gdb.base/miscexprs.exp: print value of !sbig.s[90]
PASS: gdb.base/miscexprs.exp: print value of !ibig.i[100]
PASS: gdb.base/miscexprs.exp: print value of !ibig.i[100]
PASS: gdb.base/miscexprs.exp: print value of !sbig.s[90] * 10
PASS: gdb.base/miscexprs.exp: print value of ibig.i[100] * sbig.s[90]
PASS: gdb.base/miscexprs.exp: print value of fbig.f[100] * dbig.d[202]
PASS: gdb.base/miscexprs.exp: print value of !(sbig.s[90] * 2)
PASS: gdb.base/miscexprs.exp: print value of sizeof sbig
PASS: gdb.base/miscexprs.exp: print value of sizeof cbig
PASS: gdb.base/miscexprs.exp: print value of sizeof lbig / sizeof long
PASS: gdb.base/miscexprs.exp: print value of ibig.i[100] << 2
PASS: gdb.base/miscexprs.exp: print value of sbig.s[90] >> 4
PASS: gdb.base/miscexprs.exp: print value of lbig.l[333] >> 6
Running ../../../gdb/testsuite/gdb.base/watchpoint-cond-gone.exp ...
PASS: gdb.base/watchpoint-cond-gone.exp: set can-use-hw-watchpoints 0
PASS: gdb.base/watchpoint-cond-gone.exp: continue to breakpoint: Place to set the watchpoint
PASS: gdb.base/watchpoint-cond-gone.exp: Place the watchpoint
PASS: gdb.base/watchpoint-cond-gone.exp: Catch the no longer valid watchpoint
Running ../../../gdb/testsuite/gdb.base/execution-termios.exp ...
UNSUPPORTED: gdb.base/execution-termios.exp: execution-termios.exp
Running ../../../gdb/testsuite/gdb.base/vla-datatypes.exp ...
PASS: gdb.base/vla-datatypes.exp: continue to breakpoint: vlas_filled
PASS: gdb.base/vla-datatypes.exp: print int_vla
PASS: gdb.base/vla-datatypes.exp: print unsigned_int_vla
PASS: gdb.base/vla-datatypes.exp: print double_vla
PASS: gdb.base/vla-datatypes.exp: print float_vla
PASS: gdb.base/vla-datatypes.exp: print long_vla
PASS: gdb.base/vla-datatypes.exp: print unsigned_long_vla
PASS: gdb.base/vla-datatypes.exp: print char_vla
PASS: gdb.base/vla-datatypes.exp: print short_vla
PASS: gdb.base/vla-datatypes.exp: print unsigned_short_vla
PASS: gdb.base/vla-datatypes.exp: print unsigned_char_vla
PASS: gdb.base/vla-datatypes.exp: print foo_vla
PASS: gdb.base/vla-datatypes.exp: print bar_vla
PASS: gdb.base/vla-datatypes.exp: print vla_struct_object
PASS: gdb.base/vla-datatypes.exp: print vla_union_object
PASS: gdb.base/vla-datatypes.exp: whatis int_vla
PASS: gdb.base/vla-datatypes.exp: whatis unsigned_int_vla
PASS: gdb.base/vla-datatypes.exp: whatis double_vla
PASS: gdb.base/vla-datatypes.exp: whatis float_vla
PASS: gdb.base/vla-datatypes.exp: whatis long_vla
PASS: gdb.base/vla-datatypes.exp: whatis unsigned_long_vla
PASS: gdb.base/vla-datatypes.exp: whatis char_vla
PASS: gdb.base/vla-datatypes.exp: whatis short_vla
PASS: gdb.base/vla-datatypes.exp: whatis unsigned_short_vla
PASS: gdb.base/vla-datatypes.exp: whatis unsigned_char_vla
PASS: gdb.base/vla-datatypes.exp: whatis foo_vla
PASS: gdb.base/vla-datatypes.exp: whatis bar_vla
PASS: gdb.base/vla-datatypes.exp: whatis vla_struct_object
PASS: gdb.base/vla-datatypes.exp: whatis vla_union_object
PASS: gdb.base/vla-datatypes.exp: ptype int_vla
PASS: gdb.base/vla-datatypes.exp: ptype unsigned_int_vla
PASS: gdb.base/vla-datatypes.exp: ptype double_vla
PASS: gdb.base/vla-datatypes.exp: ptype float_vla
PASS: gdb.base/vla-datatypes.exp: ptype long_vla
PASS: gdb.base/vla-datatypes.exp: ptype unsigned_long_vla
PASS: gdb.base/vla-datatypes.exp: ptype char_vla
PASS: gdb.base/vla-datatypes.exp: ptype short_vla
PASS: gdb.base/vla-datatypes.exp: ptype unsigned_short_vla
PASS: gdb.base/vla-datatypes.exp: ptype unsigned_char_vla
PASS: gdb.base/vla-datatypes.exp: ptype foo_vla
PASS: gdb.base/vla-datatypes.exp: ptype bar_vla
PASS: gdb.base/vla-datatypes.exp: ptype vla_struct_object
PASS: gdb.base/vla-datatypes.exp: ptype vla_union_object
PASS: gdb.base/vla-datatypes.exp: continue to breakpoint: break_end_of_vla_factory
PASS: gdb.base/vla-datatypes.exp: size of int_vla
PASS: gdb.base/vla-datatypes.exp: size of unsigned_int_vla
PASS: gdb.base/vla-datatypes.exp: size of double_vla
PASS: gdb.base/vla-datatypes.exp: size of float_vla
PASS: gdb.base/vla-datatypes.exp: size of long_vla
PASS: gdb.base/vla-datatypes.exp: size of char_vla
PASS: gdb.base/vla-datatypes.exp: size of short_vla
PASS: gdb.base/vla-datatypes.exp: size of unsigned_short_vla
PASS: gdb.base/vla-datatypes.exp: size of unsigned_char_vla
PASS: gdb.base/vla-datatypes.exp: size of foo_vla
PASS: gdb.base/vla-datatypes.exp: size of bar_vla
PASS: gdb.base/vla-datatypes.exp: size of vla_struct_object
PASS: gdb.base/vla-datatypes.exp: size of vla_union_object
PASS: gdb.base/vla-datatypes.exp: get integer valueof "sizeof (int)" (4)
PASS: gdb.base/vla-datatypes.exp: set variable int_vla[0] = 42
PASS: gdb.base/vla-datatypes.exp: print sizeof (++int_vla[0])
PASS: gdb.base/vla-datatypes.exp: print int_vla[0] - sizeof no side effects
PASS: gdb.base/vla-datatypes.exp: ptype ++int_vla[0]
PASS: gdb.base/vla-datatypes.exp: print int_vla[0] - ptype no side effects
PASS: gdb.base/vla-datatypes.exp: whatis ++int_vla[0]
PASS: gdb.base/vla-datatypes.exp: print int_vla[0] - whatis no side effects
XFAIL: gdb.base/vla-datatypes.exp: size of inner_vla_struct_object
Running ../../../gdb/testsuite/gdb.base/catch-signal-fork.exp ...
Running ../../../gdb/testsuite/gdb.base/cvexpr.exp ...
PASS: gdb.base/cvexpr.exp: set print sevenbit-strings
PASS: gdb.base/cvexpr.exp: set print address off
PASS: gdb.base/cvexpr.exp: set width 0
PASS: gdb.base/cvexpr.exp: (const char)
PASS: gdb.base/cvexpr.exp: (const signed char)
PASS: gdb.base/cvexpr.exp: (const unsigned char)
PASS: gdb.base/cvexpr.exp: (const short)
PASS: gdb.base/cvexpr.exp: (const signed short)
PASS: gdb.base/cvexpr.exp: (const unsigned short)
PASS: gdb.base/cvexpr.exp: (const int)
PASS: gdb.base/cvexpr.exp: (const signed int)
PASS: gdb.base/cvexpr.exp: (const unsigned int)
PASS: gdb.base/cvexpr.exp: (const long)
PASS: gdb.base/cvexpr.exp: (const signed long)
PASS: gdb.base/cvexpr.exp: (const unsigned long)
PASS: gdb.base/cvexpr.exp: (const long long)
PASS: gdb.base/cvexpr.exp: (const signed long long)
PASS: gdb.base/cvexpr.exp: (const unsigned long long)
PASS: gdb.base/cvexpr.exp: (const float)
PASS: gdb.base/cvexpr.exp: (const double)
PASS: gdb.base/cvexpr.exp: (volatile char)
PASS: gdb.base/cvexpr.exp: (volatile signed char)
PASS: gdb.base/cvexpr.exp: (volatile unsigned char)
PASS: gdb.base/cvexpr.exp: (volatile short)
PASS: gdb.base/cvexpr.exp: (volatile signed short)
PASS: gdb.base/cvexpr.exp: (volatile unsigned short)
PASS: gdb.base/cvexpr.exp: (volatile int)
PASS: gdb.base/cvexpr.exp: (volatile signed int)
PASS: gdb.base/cvexpr.exp: (volatile unsigned int)
PASS: gdb.base/cvexpr.exp: (volatile long)
PASS: gdb.base/cvexpr.exp: (volatile signed long)
PASS: gdb.base/cvexpr.exp: (volatile unsigned long)
PASS: gdb.base/cvexpr.exp: (volatile long long)
PASS: gdb.base/cvexpr.exp: (volatile signed long long)
PASS: gdb.base/cvexpr.exp: (volatile unsigned long long)
PASS: gdb.base/cvexpr.exp: (volatile float)
PASS: gdb.base/cvexpr.exp: (volatile double)
PASS: gdb.base/cvexpr.exp: (const volatile int)
PASS: gdb.base/cvexpr.exp: (volatile const int)
PASS: gdb.base/cvexpr.exp: (const int volatile)
PASS: gdb.base/cvexpr.exp: (volatile int const)
PASS: gdb.base/cvexpr.exp: (int const volatile)
PASS: gdb.base/cvexpr.exp: (int volatile const)
PASS: gdb.base/cvexpr.exp: (const volatile int *)
PASS: gdb.base/cvexpr.exp: (volatile const int *)
PASS: gdb.base/cvexpr.exp: (const int volatile)
PASS: gdb.base/cvexpr.exp: (volatile int const *)
PASS: gdb.base/cvexpr.exp: (int const volatile *)
PASS: gdb.base/cvexpr.exp: (int volatile const *)
PASS: gdb.base/cvexpr.exp: (int * const volatile)
PASS: gdb.base/cvexpr.exp: (int * volatile const)
PASS: gdb.base/cvexpr.exp: (char const)
PASS: gdb.base/cvexpr.exp: (signed char const)
PASS: gdb.base/cvexpr.exp: (unsigned char const)
PASS: gdb.base/cvexpr.exp: (short const)
PASS: gdb.base/cvexpr.exp: (signed short const)
PASS: gdb.base/cvexpr.exp: (unsigned short const)
PASS: gdb.base/cvexpr.exp: (int const)
PASS: gdb.base/cvexpr.exp: (signed int const)
PASS: gdb.base/cvexpr.exp: (unsigned int const)
PASS: gdb.base/cvexpr.exp: (long const)
PASS: gdb.base/cvexpr.exp: (signed long const)
PASS: gdb.base/cvexpr.exp: (unsigned long const)
PASS: gdb.base/cvexpr.exp: (long long const)
PASS: gdb.base/cvexpr.exp: (signed long long const)
PASS: gdb.base/cvexpr.exp: (unsigned long long const)
PASS: gdb.base/cvexpr.exp: (float const)
PASS: gdb.base/cvexpr.exp: (double const)
PASS: gdb.base/cvexpr.exp: (char volatile)
PASS: gdb.base/cvexpr.exp: (signed char volatile)
PASS: gdb.base/cvexpr.exp: (unsigned char volatile)
PASS: gdb.base/cvexpr.exp: (short volatile)
PASS: gdb.base/cvexpr.exp: (signed short volatile)
PASS: gdb.base/cvexpr.exp: (unsigned short volatile)
PASS: gdb.base/cvexpr.exp: (int volatile)
PASS: gdb.base/cvexpr.exp: (signed int volatile)
PASS: gdb.base/cvexpr.exp: (unsigned int volatile)
PASS: gdb.base/cvexpr.exp: (long volatile)
PASS: gdb.base/cvexpr.exp: (signed long volatile)
PASS: gdb.base/cvexpr.exp: (unsigned long volatile)
PASS: gdb.base/cvexpr.exp: (long long volatile)
PASS: gdb.base/cvexpr.exp: (signed long long volatile)
PASS: gdb.base/cvexpr.exp: (unsigned long long volatile)
PASS: gdb.base/cvexpr.exp: (float volatile)
PASS: gdb.base/cvexpr.exp: (double volatile)
PASS: gdb.base/cvexpr.exp: (const enum misordered)
PASS: gdb.base/cvexpr.exp: (enum misordered const)
PASS: gdb.base/cvexpr.exp: (volatile enum misordered)
PASS: gdb.base/cvexpr.exp: (enum misordered volatile)
PASS: gdb.base/cvexpr.exp: (const int *)
PASS: gdb.base/cvexpr.exp: (int const *)
PASS: gdb.base/cvexpr.exp: (int * const)
PASS: gdb.base/cvexpr.exp: (const int * const)
PASS: gdb.base/cvexpr.exp: (int const * const)
PASS: gdb.base/cvexpr.exp: (const int **)
PASS: gdb.base/cvexpr.exp: (int const **)
PASS: gdb.base/cvexpr.exp: (int ** const)
PASS: gdb.base/cvexpr.exp: (const int * const *)
PASS: gdb.base/cvexpr.exp: (int const * const *)
PASS: gdb.base/cvexpr.exp: (const int * const * const)
PASS: gdb.base/cvexpr.exp: (int const * const * const)
PASS: gdb.base/cvexpr.exp: (const struct t_struct)
PASS: gdb.base/cvexpr.exp: (const union t_union)
PASS: gdb.base/cvexpr.exp: (struct t_struct const)
PASS: gdb.base/cvexpr.exp: (union t_union const)
PASS: gdb.base/cvexpr.exp: (const struct t_struct *)
PASS: gdb.base/cvexpr.exp: (const union t_union *)
PASS: gdb.base/cvexpr.exp: (struct t_struct const *)
PASS: gdb.base/cvexpr.exp: (union t_union const *)
PASS: gdb.base/cvexpr.exp: (struct t_struct * const)
PASS: gdb.base/cvexpr.exp: (union t_union * const)
PASS: gdb.base/cvexpr.exp: (const struct t_struct * const)
PASS: gdb.base/cvexpr.exp: (const union t_union * const)
PASS: gdb.base/cvexpr.exp: (struct t_struct const * const)
PASS: gdb.base/cvexpr.exp: (union t_union const * const)
Running ../../../gdb/testsuite/gdb.base/prologue-include.exp ...
FAIL: gdb.base/prologue-include.exp: breakpoint main
Running ../../../gdb/testsuite/gdb.base/solib-disc.exp ...
Running ../../../gdb/testsuite/gdb.base/killed-outside.exp ...
UNSUPPORTED: gdb.base/killed-outside.exp: killed-outside.exp
Running ../../../gdb/testsuite/gdb.base/info-macros.exp ...
PASS: gdb.base/info-macros.exp: info macro -- -all
PASS: gdb.base/info-macros.exp: info macro  -- -all
PASS: gdb.base/info-macros.exp: info macro -all --
PASS: gdb.base/info-macros.exp: info macro -all  --
PASS: gdb.base/info-macros.exp: info macro  -all  --
PASS: gdb.base/info-macros.exp: info macro --
PASS: gdb.base/info-macros.exp: 'info macro -- '
PASS: gdb.base/info-macros.exp: 'info macro  -- '
PASS: gdb.base/info-macros.exp: info macro -invalid-option 1
PASS: gdb.base/info-macros.exp: info macro  -invalid-option
PASS: gdb.base/info-macros.exp: info macro -invalid-option FOO
PASS: gdb.base/info-macros.exp: info macro  -invalid-option FOO
PASS: gdb.base/info-macros.exp: info macro -- FOO
PASS: gdb.base/info-macros.exp: info macro  -- FOO
PASS: gdb.base/info-macros.exp: info macro --  FOO
PASS: gdb.base/info-macros.exp: info macro FOO
PASS: gdb.base/info-macros.exp: info macro  FOO
PASS: gdb.base/info-macros.exp: info macro -a FOO 1
PASS: gdb.base/info-macros.exp: info macro -a -- FOO 1
PASS: gdb.base/info-macros.exp: info macro -all -- FOO 1
PASS: gdb.base/info-macros.exp: info macro -a  --  FOO
PASS: gdb.base/info-macros.exp: info macro  -a  --  FOO
PASS: gdb.base/info-macros.exp: info macros 2
PASS: gdb.base/info-macros.exp: info macros 3
PASS: gdb.base/info-macros.exp: info macros 4
PASS: gdb.base/info-macros.exp: info macros *$pc
PASS: gdb.base/info-macros.exp: info macros 5
PASS: gdb.base/info-macros.exp: info macros 6
PASS: gdb.base/info-macros.exp: info macros 7
KFAIL: gdb.base/info-macros.exp: info macros info-macros.c:42 (PRMS: gdb/NNNN)
Running ../../../gdb/testsuite/gdb.base/solib-corrupted.exp ...
Running ../../../gdb/testsuite/gdb.base/dup-sect.exp ...
PASS: gdb.base/dup-sect.exp: rename section
PASS: gdb.base/dup-sect.exp: split
PASS: gdb.base/dup-sect.exp: strip
PASS: gdb.base/dup-sect.exp: var1 after strip
PASS: gdb.base/dup-sect.exp: var2 after strip
Running ../../../gdb/testsuite/gdb.base/disasm-end-cu.exp ...
PASS: gdb.base/disasm-end-cu.exp: get hexadecimal valueof "&main"
PASS: gdb.base/disasm-end-cu.exp: get hexadecimal valueof "&dummy_3"
PASS: gdb.base/disasm-end-cu.exp: disassemble command returned some output
Running ../../../gdb/testsuite/gdb.base/annota1.exp ...
Running ../../../gdb/testsuite/gdb.base/pr11022.exp ...
Running ../../../gdb/testsuite/gdb.base/execl-update-breakpoints.exp ...
UNSUPPORTED: gdb.base/execl-update-breakpoints.exp: execl-update-breakpoints.exp
Running ../../../gdb/testsuite/gdb.base/unload.exp ...
Running ../../../gdb/testsuite/gdb.base/solib-symbol.exp ...
Running ../../../gdb/testsuite/gdb.base/break-inline.exp ...
PASS: gdb.base/break-inline.exp: break
Running ../../../gdb/testsuite/gdb.base/max-value-size.exp ...
PASS: gdb.base/max-value-size.exp: using initial max-value-size: p/d one
PASS: gdb.base/max-value-size.exp: using initial max-value-size: p/d one_hundred
PASS: gdb.base/max-value-size.exp: using initial max-value-size: p/d one_hundred [99]
PASS: gdb.base/max-value-size.exp: set max-value-size 25
PASS: gdb.base/max-value-size.exp: check that the value shows as 25 bytes
PASS: gdb.base/max-value-size.exp: max-value-size is '25': p/d one
PASS: gdb.base/max-value-size.exp: max-value-size is '25': p/d one_hundred
PASS: gdb.base/max-value-size.exp: max-value-size is '25': p/d one_hundred [99]
PASS: gdb.base/max-value-size.exp: set max-value-size 99
PASS: gdb.base/max-value-size.exp: check that the value shows as 99 bytes
PASS: gdb.base/max-value-size.exp: max-value-size is '99': p/d one
PASS: gdb.base/max-value-size.exp: max-value-size is '99': p/d one_hundred
PASS: gdb.base/max-value-size.exp: max-value-size is '99': p/d one_hundred [99]
PASS: gdb.base/max-value-size.exp: set max-value-size 100
PASS: gdb.base/max-value-size.exp: check that the value shows as 100 bytes
PASS: gdb.base/max-value-size.exp: max-value-size is '100': p/d one
PASS: gdb.base/max-value-size.exp: max-value-size is '100': p/d one_hundred
PASS: gdb.base/max-value-size.exp: max-value-size is '100': p/d one_hundred [99]
PASS: gdb.base/max-value-size.exp: set max-value-size 200
PASS: gdb.base/max-value-size.exp: check that the value shows as 200 bytes
PASS: gdb.base/max-value-size.exp: max-value-size is '200': p/d one
PASS: gdb.base/max-value-size.exp: max-value-size is '200': p/d one_hundred
PASS: gdb.base/max-value-size.exp: max-value-size is '200': p/d one_hundred [99]
PASS: gdb.base/max-value-size.exp: set max-value-size unlimited
PASS: gdb.base/max-value-size.exp: check that the value shows as unlimited
PASS: gdb.base/max-value-size.exp: max-value-size is 'unlimited': p/d one
PASS: gdb.base/max-value-size.exp: max-value-size is 'unlimited': p/d one_hundred
PASS: gdb.base/max-value-size.exp: max-value-size is 'unlimited': p/d one_hundred [99]
PASS: gdb.base/max-value-size.exp: set max-value-size 1
PASS: gdb.base/max-value-size.exp: set max-value-size 0
PASS: gdb.base/max-value-size.exp: set max-value-size -5
Running ../../../gdb/testsuite/gdb.base/catch-syscall.exp ...
Running ../../../gdb/testsuite/gdb.base/jit.exp ...
UNTESTED: gdb.base/jit.exp: jit.exp
Running ../../../gdb/testsuite/gdb.base/attach-pie-misread.exp ...
Running ../../../gdb/testsuite/gdb.base/find-unmapped.exp ...
Running ../../../gdb/testsuite/gdb.base/fullname.exp ...
PASS: gdb.base/fullname.exp: set breakpoint by full path before loading symbols - built absolute
PASS: gdb.base/fullname.exp: set breakpoint at main - built absolute
PASS: gdb.base/fullname.exp: set breakpoint by full path after loading symbols - built absolute
PASS: gdb.base/fullname.exp: set breakpoint by full path before loading symbols - built relative
PASS: gdb.base/fullname.exp: set breakpoint at main - built relative
PASS: gdb.base/fullname.exp: set breakpoint by full path after loading symbols - built relative
PASS: gdb.base/fullname.exp: set breakpoint by full path before loading symbols - built other
PASS: gdb.base/fullname.exp: set breakpoint at main - built other
PASS: gdb.base/fullname.exp: set breakpoint by full path after loading symbols - built other
Running ../../../gdb/testsuite/gdb.base/funcargs.exp ...
PASS: gdb.base/funcargs.exp: set print frame-arguments all
PASS: gdb.base/funcargs.exp: run to call0a
PASS: gdb.base/funcargs.exp: print c after run to call0a
PASS: gdb.base/funcargs.exp: print s after run to call0a
PASS: gdb.base/funcargs.exp: print i after run to call0a
PASS: gdb.base/funcargs.exp: print l after run to call0a
PASS: gdb.base/funcargs.exp: continue to call0b
PASS: gdb.base/funcargs.exp: continue to call0c
PASS: gdb.base/funcargs.exp: continue to call0d
PASS: gdb.base/funcargs.exp: continue to call0e
PASS: gdb.base/funcargs.exp: run to call1a
PASS: gdb.base/funcargs.exp: print uc
PASS: gdb.base/funcargs.exp: print us
PASS: gdb.base/funcargs.exp: print ui
PASS: gdb.base/funcargs.exp: print ul
PASS: gdb.base/funcargs.exp: continue to call1b
PASS: gdb.base/funcargs.exp: continue to call1c
PASS: gdb.base/funcargs.exp: continue to call1d
PASS: gdb.base/funcargs.exp: continue to call1e
PASS: gdb.base/funcargs.exp: run to call2a
PASS: gdb.base/funcargs.exp: print c after run to call2a
PASS: gdb.base/funcargs.exp: print f1 after run to call2a
PASS: gdb.base/funcargs.exp: print s after run to call2a
PASS: gdb.base/funcargs.exp: print d1 after run to call2a
PASS: gdb.base/funcargs.exp: print i after run to call2a
PASS: gdb.base/funcargs.exp: print f2 after run to call2a
PASS: gdb.base/funcargs.exp: print l after run to call2a
PASS: gdb.base/funcargs.exp: print d2 after run to call2a
PASS: gdb.base/funcargs.exp: continue to call2b
PASS: gdb.base/funcargs.exp: continue to call2c
PASS: gdb.base/funcargs.exp: continue to call2d
PASS: gdb.base/funcargs.exp: continue to call2e
PASS: gdb.base/funcargs.exp: continue to call2f
PASS: gdb.base/funcargs.exp: continue to call2g
PASS: gdb.base/funcargs.exp: continue to call2h
PASS: gdb.base/funcargs.exp: continue to call2i
PASS: gdb.base/funcargs.exp: run to call2a
PASS: gdb.base/funcargs.exp: continue to callcb
PASS: gdb.base/funcargs.exp: continue to callcc
PASS: gdb.base/funcargs.exp: continue to callcd
PASS: gdb.base/funcargs.exp: continue to callce
PASS: gdb.base/funcargs.exp: continue to callcf
PASS: gdb.base/funcargs.exp: run to callc1a
PASS: gdb.base/funcargs.exp: continue to callc1b
PASS: gdb.base/funcargs.exp: run to callc2a
PASS: gdb.base/funcargs.exp: continue to callc2b
PASS: gdb.base/funcargs.exp: run to call3a
PASS: gdb.base/funcargs.exp: print *cp
PASS: gdb.base/funcargs.exp: print *sp
PASS: gdb.base/funcargs.exp: print *ip
PASS: gdb.base/funcargs.exp: print *lp
PASS: gdb.base/funcargs.exp: continue to call3b
PASS: gdb.base/funcargs.exp: print *ucp
PASS: gdb.base/funcargs.exp: print *usp
PASS: gdb.base/funcargs.exp: print *uip
PASS: gdb.base/funcargs.exp: print *ulp
PASS: gdb.base/funcargs.exp: continue to call3c
PASS: gdb.base/funcargs.exp: print *fp
PASS: gdb.base/funcargs.exp: print *dp
PASS: gdb.base/funcargs.exp: run to call4a
PASS: gdb.base/funcargs.exp: print *stp
PASS: gdb.base/funcargs.exp: continue to call4b
PASS: gdb.base/funcargs.exp: print *unp (sizeof long == sizeof int)
PASS: gdb.base/funcargs.exp: locate actual args, structs/unions passed by reference
PASS: gdb.base/funcargs.exp: run to call5a
PASS: gdb.base/funcargs.exp: print st
PASS: gdb.base/funcargs.exp: continue to call5b (sizeof long == sizeof int)
PASS: gdb.base/funcargs.exp: print un (sizeof long == sizeof int)
PASS: gdb.base/funcargs.exp: run to call6a
PASS: gdb.base/funcargs.exp: backtrace from call6a
PASS: gdb.base/funcargs.exp: continue to call6b
PASS: gdb.base/funcargs.exp: backtrace from call6b
PASS: gdb.base/funcargs.exp: continue to call6c
PASS: gdb.base/funcargs.exp: backtrace from call6c
PASS: gdb.base/funcargs.exp: continue to call6d
PASS: gdb.base/funcargs.exp: backtrace from call6d
PASS: gdb.base/funcargs.exp: continue to call6e
PASS: gdb.base/funcargs.exp: backtrace from call6e
PASS: gdb.base/funcargs.exp: continue to call6f
PASS: gdb.base/funcargs.exp: backtrace from call6f
PASS: gdb.base/funcargs.exp: continue to call6g
PASS: gdb.base/funcargs.exp: backtrace from call6g
PASS: gdb.base/funcargs.exp: continue to call6h
PASS: gdb.base/funcargs.exp: backtrace from call6h
PASS: gdb.base/funcargs.exp: continue to call6i
PASS: gdb.base/funcargs.exp: backtrace from call6i
PASS: gdb.base/funcargs.exp: continue to call6j
PASS: gdb.base/funcargs.exp: backtrace from call6j
PASS: gdb.base/funcargs.exp: continue to call6k
PASS: gdb.base/funcargs.exp: backtrace from call6k
PASS: gdb.base/funcargs.exp: run to call7a
PASS: gdb.base/funcargs.exp: backtrace from call7a
PASS: gdb.base/funcargs.exp: continue to call7b
PASS: gdb.base/funcargs.exp: backtrace from call7b
PASS: gdb.base/funcargs.exp: continue to call7c
PASS: gdb.base/funcargs.exp: backtrace from call7c
PASS: gdb.base/funcargs.exp: continue to call7d
PASS: gdb.base/funcargs.exp: backtrace from call7d
PASS: gdb.base/funcargs.exp: continue to call7e
PASS: gdb.base/funcargs.exp: backtrace from call7e
PASS: gdb.base/funcargs.exp: continue to call7f
PASS: gdb.base/funcargs.exp: backtrace from call7f
PASS: gdb.base/funcargs.exp: continue to call7g
PASS: gdb.base/funcargs.exp: backtrace from call7g
PASS: gdb.base/funcargs.exp: continue to call7h
PASS: gdb.base/funcargs.exp: backtrace from call7h
PASS: gdb.base/funcargs.exp: continue to call7i
PASS: gdb.base/funcargs.exp: backtrace from call7i
PASS: gdb.base/funcargs.exp: continue to call7j
PASS: gdb.base/funcargs.exp: backtrace from call7j
PASS: gdb.base/funcargs.exp: continue to call7k
PASS: gdb.base/funcargs.exp: backtrace from call7k
PASS: gdb.base/funcargs.exp: run to hitbottom
PASS: gdb.base/funcargs.exp: recursive passing of structs by value
PASS: gdb.base/funcargs.exp: print c after runto localvars_after_alloca
PASS: gdb.base/funcargs.exp: print s after runto localvars_after_alloca
PASS: gdb.base/funcargs.exp: print i after runto localvars_after_alloca
PASS: gdb.base/funcargs.exp: print l after runto localvars_after_alloca
PASS: gdb.base/funcargs.exp: next in localvars_after_alloca()
PASS: gdb.base/funcargs.exp: print c in localvars_after_alloca
PASS: gdb.base/funcargs.exp: print s in localvars_after_alloca
PASS: gdb.base/funcargs.exp: print i in localvars_after_alloca
PASS: gdb.base/funcargs.exp: print l in localvars_after_alloca
PASS: gdb.base/funcargs.exp: backtrace after alloca
PASS: gdb.base/funcargs.exp: print c in call_after_alloca
PASS: gdb.base/funcargs.exp: print s in call_after_alloca
PASS: gdb.base/funcargs.exp: print i in call_after_alloca
PASS: gdb.base/funcargs.exp: print l in call_after_alloca
PASS: gdb.base/funcargs.exp: backtrace from call_after_alloca_subr
PASS: gdb.base/funcargs.exp: continue to call0a
PASS: gdb.base/funcargs.exp: print c in localvars_in_indirect_call
PASS: gdb.base/funcargs.exp: print s in localvars_in_indirect_call
PASS: gdb.base/funcargs.exp: print i in localvars_in_indirect_call
PASS: gdb.base/funcargs.exp: print l in localvars_in_indirect_call
PASS: gdb.base/funcargs.exp: backtrace in indirectly called function
PASS: gdb.base/funcargs.exp: finish from indirectly called function
PASS: gdb.base/funcargs.exp: stepping into indirectly called function
PASS: gdb.base/funcargs.exp: finish from marker_call_with_trampolines
PASS: gdb.base/funcargs.exp: stepping into function called with trampolines
PASS: gdb.base/funcargs.exp: backtrace through call with trampolines
PASS: gdb.base/funcargs.exp: stepping back to main from function called with trampolines
Running ../../../gdb/testsuite/gdb.base/permissions.exp ...
PASS: gdb.base/permissions.exp: show may-write-registers
PASS: gdb.base/permissions.exp: show may-write-memory
PASS: gdb.base/permissions.exp: show may-insert-breakpoints
PASS: gdb.base/permissions.exp: show may-insert-tracepoints
PASS: gdb.base/permissions.exp: show may-insert-fast-tracepoints
PASS: gdb.base/permissions.exp: show may-interrupt
PASS: gdb.base/permissions.exp: enable observer mode
PASS: gdb.base/permissions.exp: show may-write-memory
PASS: gdb.base/permissions.exp: show may-write-registers
PASS: gdb.base/permissions.exp: show may-insert-breakpoints
PASS: gdb.base/permissions.exp: show may-insert-tracepoints
PASS: gdb.base/permissions.exp: show may-insert-fast-tracepoints
PASS: gdb.base/permissions.exp: show may-interrupt
PASS: gdb.base/permissions.exp: disable observer mode
PASS: gdb.base/permissions.exp: set non-stop off
PASS: gdb.base/permissions.exp: set target-async off
PASS: gdb.base/permissions.exp: set a global
PASS: gdb.base/permissions.exp: print x
PASS: gdb.base/permissions.exp: set may-write-memory off
PASS: gdb.base/permissions.exp: try to set a global
PASS: gdb.base/permissions.exp: print x
Running ../../../gdb/testsuite/gdb.base/siginfo.exp ...
Running ../../../gdb/testsuite/gdb.base/gcore-relro-pie.exp ...
UNSUPPORTED: gdb.base/gcore-relro-pie.exp: gcore-relro-pie.exp
Running ../../../gdb/testsuite/gdb.base/run-after-attach.exp ...
Running ../../../gdb/testsuite/gdb.base/random-signal.exp ...
Running ../../../gdb/testsuite/gdb.base/coredump-filter.exp ...
UNTESTED: gdb.base/coredump-filter.exp: coredump-filter.exp
Running ../../../gdb/testsuite/gdb.base/psymtab.exp ...
Running ../../../gdb/testsuite/gdb.base/shreloc.exp ...
Running ../../../gdb/testsuite/gdb.base/exprs.exp ...
PASS: gdb.base/exprs.exp: print char == (setup)
PASS: gdb.base/exprs.exp: print char == (print v_char == 0)
PASS: gdb.base/exprs.exp: print char == (print v_char == 127)
PASS: gdb.base/exprs.exp: print char != (setup)
PASS: gdb.base/exprs.exp: print char != (print v_char != 0)
PASS: gdb.base/exprs.exp: print char != (print v_char != 127)
PASS: gdb.base/exprs.exp: print char < (setup)
PASS: gdb.base/exprs.exp: print char < (print v_char < 0)
PASS: gdb.base/exprs.exp: print char < (print v_char < 127)
PASS: gdb.base/exprs.exp: print char > (setup)
PASS: gdb.base/exprs.exp: print char > (print v_char > 0)
PASS: gdb.base/exprs.exp: print char > (print v_char > 127)
PASS: gdb.base/exprs.exp: print signed char == (setup)
PASS: gdb.base/exprs.exp: print signed char == (print v_signed_char == 0)
PASS: gdb.base/exprs.exp: print signed char == (print v_signed_char == 127)
PASS: gdb.base/exprs.exp: print signed char != (setup)
PASS: gdb.base/exprs.exp: print signed char != (print v_signed_char != 0)
PASS: gdb.base/exprs.exp: print signed char != (print v_signed_char != 127)
PASS: gdb.base/exprs.exp: print signed char < (setup)
PASS: gdb.base/exprs.exp: print signed char < (print v_signed_char < 0)
PASS: gdb.base/exprs.exp: print signed char < (print v_signed_char < 127)
PASS: gdb.base/exprs.exp: print signed char > (setup)
PASS: gdb.base/exprs.exp: print signed char > (print v_signed_char > 0)
PASS: gdb.base/exprs.exp: print signed char > (print v_signed_char > 127)
PASS: gdb.base/exprs.exp: print signed char == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed char == (minus) (print v_signed_char == 0)
PASS: gdb.base/exprs.exp: print signed char == (minus) (print v_signed_char == -1)
PASS: gdb.base/exprs.exp: print signed char != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed char != (minus) (print v_signed_char != 0)
PASS: gdb.base/exprs.exp: print signed char != (minus) (print v_signed_char != -1)
PASS: gdb.base/exprs.exp: print signed char < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed char < (minus) (print v_signed_char < 0)
PASS: gdb.base/exprs.exp: print signed char < (minus) (print v_signed_char < 127)
PASS: gdb.base/exprs.exp: print signed char > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed char > (minus) (print v_signed_char > 0)
PASS: gdb.base/exprs.exp: print signed char > (minus) (print v_signed_char > 127)
PASS: gdb.base/exprs.exp: print unsigned char == (setup)
PASS: gdb.base/exprs.exp: print unsigned char == (print v_unsigned_char == 0)
PASS: gdb.base/exprs.exp: print unsigned char == (print v_unsigned_char == 127)
PASS: gdb.base/exprs.exp: print unsigned char != (setup)
PASS: gdb.base/exprs.exp: print unsigned char != (print v_unsigned_char != 0)
PASS: gdb.base/exprs.exp: print unsigned char != (print v_unsigned_char != 127)
PASS: gdb.base/exprs.exp: print unsigned char < (setup)
PASS: gdb.base/exprs.exp: print unsigned char < (print v_unsigned_char < 0)
PASS: gdb.base/exprs.exp: print unsigned char < (print v_unsigned_char < 127)
PASS: gdb.base/exprs.exp: print unsigned char > (setup)
PASS: gdb.base/exprs.exp: print unsigned char > (print v_unsigned_char > 0)
PASS: gdb.base/exprs.exp: print unsigned char > (print v_unsigned_char > 127)
PASS: gdb.base/exprs.exp: print unsigned char == (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned char == (~0) (print v_unsigned_char == 0)
PASS: gdb.base/exprs.exp: print unsigned char == (~0) (print v_unsigned_char == ~0)
PASS: gdb.base/exprs.exp: print unsigned char == (~0) (print v_unsigned_char == (unsigned char)~0)
PASS: gdb.base/exprs.exp: print unsigned char != (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned char != (~0) (print v_unsigned_char != 0)
PASS: gdb.base/exprs.exp: print unsigned char != (~0) (print v_unsigned_char != (unsigned char)~0)
PASS: gdb.base/exprs.exp: print unsigned char != (~0) (print v_unsigned_char != ~0)
PASS: gdb.base/exprs.exp: print unsigned char < (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned char < (~0) (print v_unsigned_char < 0)
PASS: gdb.base/exprs.exp: print unsigned char < (~0) (print v_unsigned_char < 127)
PASS: gdb.base/exprs.exp: print unsigned char > (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned char > (~0) (print v_unsigned_char > 0)
PASS: gdb.base/exprs.exp: print unsigned char > (~0) (print v_unsigned_char > 127)
PASS: gdb.base/exprs.exp: print signed short == (setup)
PASS: gdb.base/exprs.exp: print signed short == (print v_short == 0)
PASS: gdb.base/exprs.exp: print signed short == (print v_short == 0x7FFF)
PASS: gdb.base/exprs.exp: print signed short != (setup)
PASS: gdb.base/exprs.exp: print signed short != (print v_short != 0)
PASS: gdb.base/exprs.exp: print signed short != (print v_short != 0x7FFF)
PASS: gdb.base/exprs.exp: print signed short < (setup)
PASS: gdb.base/exprs.exp: print signed short < (print v_short < 0)
PASS: gdb.base/exprs.exp: print signed short < (print v_short < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed short > (setup)
PASS: gdb.base/exprs.exp: print signed short > (print v_short > 0)
PASS: gdb.base/exprs.exp: print signed short > (print v_short > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed short == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed short == (minus) (print v_short == 0)
PASS: gdb.base/exprs.exp: print signed short == (minus) (print v_short == -1)
PASS: gdb.base/exprs.exp: print signed short != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed short != (minus) (print v_short != 0)
PASS: gdb.base/exprs.exp: print signed short != (minus) (print v_short != -1)
PASS: gdb.base/exprs.exp: print signed short < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed short < (minus) (print v_short < 0)
PASS: gdb.base/exprs.exp: print signed short < (minus) (print v_short < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed short > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed short > (minus) (print v_short > 0)
PASS: gdb.base/exprs.exp: print signed short > (minus) (print v_short > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed short == (setup)
PASS: gdb.base/exprs.exp: print signed signed short == (print v_signed_short == 0)
PASS: gdb.base/exprs.exp: print signed signed short == (print v_signed_short == 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed short != (setup)
PASS: gdb.base/exprs.exp: print signed signed short != (print v_signed_short != 0)
PASS: gdb.base/exprs.exp: print signed signed short != (print v_signed_short != 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed short < (setup)
PASS: gdb.base/exprs.exp: print signed signed short < (print v_signed_short < 0)
PASS: gdb.base/exprs.exp: print signed signed short < (print v_signed_short < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed short > (setup)
PASS: gdb.base/exprs.exp: print signed signed short > (print v_signed_short > 0)
PASS: gdb.base/exprs.exp: print signed signed short > (print v_signed_short > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed short == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed short == (minus) (print v_signed_short == 0)
PASS: gdb.base/exprs.exp: print signed signed short == (minus) (print v_signed_short == -1)
PASS: gdb.base/exprs.exp: print signed signed short != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed short != (minus) (print v_signed_short != 0)
PASS: gdb.base/exprs.exp: print signed signed short != (minus) (print v_signed_short != -1)
PASS: gdb.base/exprs.exp: print signed signed short < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed short < (minus) (print v_signed_short < 0)
PASS: gdb.base/exprs.exp: print signed signed short < (minus) (print v_signed_short < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed short > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed short > (minus) (print v_signed_short > 0)
PASS: gdb.base/exprs.exp: print signed signed short > (minus) (print v_signed_short > 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned short == (setup)
PASS: gdb.base/exprs.exp: print unsigned short == (print v_unsigned_short == 0)
PASS: gdb.base/exprs.exp: print unsigned short == (print v_unsigned_short == 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned short != (setup)
PASS: gdb.base/exprs.exp: print unsigned short != (print v_unsigned_short != 0)
PASS: gdb.base/exprs.exp: print unsigned short != (print v_unsigned_short != 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned short < (setup)
PASS: gdb.base/exprs.exp: print unsigned short < (print v_unsigned_short < 0)
PASS: gdb.base/exprs.exp: print unsigned short < (print v_unsigned_short < 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned short > (setup)
PASS: gdb.base/exprs.exp: print unsigned short > (print v_unsigned_short > 0)
PASS: gdb.base/exprs.exp: print unsigned short > (print v_unsigned_short > 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned short == (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned short == (~0) (print v_unsigned_short == 0)
PASS: gdb.base/exprs.exp: print unsigned short == (~0) (print sizeof (v_unsigned_short) < sizeof (~0) && v_unsigned_short == ~0)
PASS: gdb.base/exprs.exp: print unsigned short == (~0) (print v_unsigned_short == (unsigned short)~0)
PASS: gdb.base/exprs.exp: print unsigned short != (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned short != (~0) (print v_unsigned_short != 0)
PASS: gdb.base/exprs.exp: print unsigned short != (~0) (print v_unsigned_short != (unsigned short)~0)
PASS: gdb.base/exprs.exp: print unsigned short < (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned short < (~0) (print v_unsigned_short < 0)
PASS: gdb.base/exprs.exp: print unsigned short < (~0) (print v_unsigned_short < 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned short > (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned short > (~0) (print v_unsigned_short > 0)
PASS: gdb.base/exprs.exp: print unsigned short > (~0) (print v_unsigned_short > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed int == (setup)
PASS: gdb.base/exprs.exp: print signed int == (print v_int == 0)
PASS: gdb.base/exprs.exp: print signed int == (print v_int == 0x7FFF)
PASS: gdb.base/exprs.exp: print signed int != (setup)
PASS: gdb.base/exprs.exp: print signed int != (print v_int != 0)
PASS: gdb.base/exprs.exp: print signed int != (print v_int != 0x7FFF)
PASS: gdb.base/exprs.exp: print signed int < (setup)
PASS: gdb.base/exprs.exp: print signed int < (print v_int < 0)
PASS: gdb.base/exprs.exp: print signed int < (print v_int < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed int > (setup)
PASS: gdb.base/exprs.exp: print signed int > (print v_int > 0)
PASS: gdb.base/exprs.exp: print signed int > (print v_int > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed int == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed int == (minus) (print v_int == 0)
PASS: gdb.base/exprs.exp: print signed int == (minus) (print v_int == -1)
PASS: gdb.base/exprs.exp: print signed int != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed int != (minus) (print v_int != 0)
PASS: gdb.base/exprs.exp: print signed int != (minus) (print v_int != -1)
PASS: gdb.base/exprs.exp: print signed int < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed int < (minus) (print v_int < 0)
PASS: gdb.base/exprs.exp: print signed int < (minus) (print v_int < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed int > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed int > (minus) (print v_int > 0)
PASS: gdb.base/exprs.exp: print signed int > (minus) (print v_int > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed int == (setup)
PASS: gdb.base/exprs.exp: print signed signed int == (print v_signed_int == 0)
PASS: gdb.base/exprs.exp: print signed signed int == (print v_signed_int == 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed int != (setup)
PASS: gdb.base/exprs.exp: print signed signed int != (print v_signed_int != 0)
PASS: gdb.base/exprs.exp: print signed signed int != (print v_signed_int != 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed int < (setup)
PASS: gdb.base/exprs.exp: print signed signed int < (print v_signed_int < 0)
PASS: gdb.base/exprs.exp: print signed signed int < (print v_signed_int < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed int > (setup)
PASS: gdb.base/exprs.exp: print signed signed int > (print v_signed_int > 0)
PASS: gdb.base/exprs.exp: print signed signed int > (print v_signed_int > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed int == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed int == (minus) (print v_signed_int == 0)
PASS: gdb.base/exprs.exp: print signed signed int == (minus) (print v_signed_int == -1)
PASS: gdb.base/exprs.exp: print signed signed int != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed int != (minus) (print v_signed_int != 0)
PASS: gdb.base/exprs.exp: print signed signed int != (minus) (print v_signed_int != -1)
PASS: gdb.base/exprs.exp: print signed signed int < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed int < (minus) (print v_signed_int < 0)
PASS: gdb.base/exprs.exp: print signed signed int < (minus) (print v_signed_int < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed int > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed int > (minus) (print v_signed_int > 0)
PASS: gdb.base/exprs.exp: print signed signed int > (minus) (print v_signed_int > 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned int == (setup)
PASS: gdb.base/exprs.exp: print unsigned int == (print v_unsigned_int == 0)
PASS: gdb.base/exprs.exp: print unsigned int == (print v_unsigned_int == 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned int != (setup)
PASS: gdb.base/exprs.exp: print unsigned int != (print v_unsigned_int != 0)
PASS: gdb.base/exprs.exp: print unsigned int != (print v_unsigned_int != 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned int < (setup)
PASS: gdb.base/exprs.exp: print unsigned int < (print v_unsigned_int < 0)
PASS: gdb.base/exprs.exp: print unsigned int < (print v_unsigned_int < 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned int > (setup)
PASS: gdb.base/exprs.exp: print unsigned int > (print v_unsigned_int > 0)
PASS: gdb.base/exprs.exp: print unsigned int > (print v_unsigned_int > 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned int == (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned int == (~0) (print v_unsigned_int == 0)
PASS: gdb.base/exprs.exp: print unsigned int == (~0) (print v_unsigned_int == ~0)
PASS: gdb.base/exprs.exp: print unsigned int == (~0) (print v_unsigned_int == (unsigned int)~0)
PASS: gdb.base/exprs.exp: print unsigned int != (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned int != (~0) (print v_unsigned_int != 0)
PASS: gdb.base/exprs.exp: print unsigned int != (~0) (print v_unsigned_int != (unsigned int)~0)
PASS: gdb.base/exprs.exp: print unsigned int < (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned int < (~0) (print v_unsigned_int < 0)
PASS: gdb.base/exprs.exp: print unsigned int < (~0) (print v_unsigned_int < 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned int > (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned int > (~0) (print v_unsigned_int > 0)
PASS: gdb.base/exprs.exp: print unsigned int > (~0) (print v_unsigned_int > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed long == (setup)
PASS: gdb.base/exprs.exp: print signed long == (print v_long == 0)
PASS: gdb.base/exprs.exp: print signed long == (print v_long == 0x7FFF)
PASS: gdb.base/exprs.exp: print signed long != (setup)
PASS: gdb.base/exprs.exp: print signed long != (print v_long != 0)
PASS: gdb.base/exprs.exp: print signed long != (print v_long != 0x7FFF)
PASS: gdb.base/exprs.exp: print signed long < (setup)
PASS: gdb.base/exprs.exp: print signed long < (print v_long < 0)
PASS: gdb.base/exprs.exp: print signed long < (print v_long < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed long > (setup)
PASS: gdb.base/exprs.exp: print signed long > (print v_long > 0)
PASS: gdb.base/exprs.exp: print signed long > (print v_long > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed long == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed long == (minus) (print v_long == 0)
PASS: gdb.base/exprs.exp: print signed long == (minus) (print v_long == -1)
PASS: gdb.base/exprs.exp: print signed long != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed long != (minus) (print v_long != 0)
PASS: gdb.base/exprs.exp: print signed long != (minus) (print v_long != -1)
PASS: gdb.base/exprs.exp: print signed long < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed long < (minus) (print v_long < 0)
PASS: gdb.base/exprs.exp: print signed long < (minus) (print v_long < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed long > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed long > (minus) (print v_long > 0)
PASS: gdb.base/exprs.exp: print signed long > (minus) (print v_long > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed long == (setup)
PASS: gdb.base/exprs.exp: print signed signed long == (print v_signed_long == 0)
PASS: gdb.base/exprs.exp: print signed signed long == (print v_signed_long == 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed long != (setup)
PASS: gdb.base/exprs.exp: print signed signed long != (print v_signed_long != 0)
PASS: gdb.base/exprs.exp: print signed signed long != (print v_signed_long != 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed long < (setup)
PASS: gdb.base/exprs.exp: print signed signed long < (print v_signed_long < 0)
PASS: gdb.base/exprs.exp: print signed signed long < (print v_signed_long < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed long > (setup)
PASS: gdb.base/exprs.exp: print signed signed long > (print v_signed_long > 0)
PASS: gdb.base/exprs.exp: print signed signed long > (print v_signed_long > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed long == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed long == (minus) (print v_signed_long == 0)
PASS: gdb.base/exprs.exp: print signed signed long == (minus) (print v_signed_long == -1)
PASS: gdb.base/exprs.exp: print signed signed long != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed long != (minus) (print v_signed_long != 0)
PASS: gdb.base/exprs.exp: print signed signed long != (minus) (print v_signed_long != -1)
PASS: gdb.base/exprs.exp: print signed signed long < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed long < (minus) (print v_signed_long < 0)
PASS: gdb.base/exprs.exp: print signed signed long < (minus) (print v_signed_long < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed long > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed long > (minus) (print v_signed_long > 0)
PASS: gdb.base/exprs.exp: print signed signed long > (minus) (print v_signed_long > 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned long == (setup)
PASS: gdb.base/exprs.exp: print unsigned long == (print v_unsigned_long == 0)
PASS: gdb.base/exprs.exp: print unsigned long == (print v_unsigned_long == 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned long != (setup)
PASS: gdb.base/exprs.exp: print unsigned long != (print v_unsigned_long != 0)
PASS: gdb.base/exprs.exp: print unsigned long != (print v_unsigned_long != 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned long < (setup)
PASS: gdb.base/exprs.exp: print unsigned long < (print v_unsigned_long < 0)
PASS: gdb.base/exprs.exp: print unsigned long < (print v_unsigned_long < 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned long > (setup)
PASS: gdb.base/exprs.exp: print unsigned long > (print v_unsigned_long > 0)
PASS: gdb.base/exprs.exp: print unsigned long > (print v_unsigned_long > 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned long == (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned long == (~0) (print v_unsigned_long == 0)
PASS: gdb.base/exprs.exp: print unsigned long == (~0) (print v_unsigned_long == ~0)
PASS: gdb.base/exprs.exp: print unsigned long == (~0) (print v_unsigned_long == (unsigned long)~0)
PASS: gdb.base/exprs.exp: print unsigned long != (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned long != (~0) (print v_unsigned_long != 0)
PASS: gdb.base/exprs.exp: print unsigned long != (~0) (print v_unsigned_long != (unsigned long)~0)
PASS: gdb.base/exprs.exp: print unsigned long < (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned long < (~0) (print v_unsigned_long < 0)
PASS: gdb.base/exprs.exp: print unsigned long < (~0) (print v_unsigned_long < 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned long > (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned long > (~0) (print v_unsigned_long > 0)
PASS: gdb.base/exprs.exp: print unsigned long > (~0) (print v_unsigned_long > 0x7FFF)
PASS: gdb.base/exprs.exp: set print symbol off
PASS: gdb.base/exprs.exp: print (void*)v_signed_char (setup)
PASS: gdb.base/exprs.exp: print (void*)v_signed_char (print (void*)v_signed_char)
PASS: gdb.base/exprs.exp: print (void*)v_signed_short (setup)
PASS: gdb.base/exprs.exp: print (void*)v_signed_short (print (void*)v_signed_short)
PASS: gdb.base/exprs.exp: print (void*)v_signed_int (setup)
PASS: gdb.base/exprs.exp: print (void*)v_signed_int (print (void*)v_signed_int)
PASS: gdb.base/exprs.exp: print (void*)v_signed_long (setup)
PASS: gdb.base/exprs.exp: print (void*)v_signed_long (print (void*)v_signed_long)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_char (setup)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_char (print (void*)v_unsigned_char)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_short (setup)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_short (print (void*)v_unsigned_short)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_int (setup)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_int (print (void*)v_unsigned_int)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_long (setup)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_long (print (void*)v_unsigned_long)
PASS: gdb.base/exprs.exp: sizeof (long long) > sizeof (long) (true)
PASS: gdb.base/exprs.exp: truncate (void*) 0x00000000ffffffff + 1
PASS: gdb.base/exprs.exp: truncate (void*) 0xffffffff00000000 - 1
PASS: gdb.base/exprs.exp: \$[0-9]* = "xy" (setup)
PASS: gdb.base/exprs.exp: \$[0-9]* = "xyz" (setup)
PASS: gdb.base/exprs.exp: \$[0-9]* = red (setup)
PASS: gdb.base/exprs.exp: set output-radix 8
PASS: gdb.base/exprs.exp: \$[0-9]* = red (setup)
PASS: gdb.base/exprs.exp: \$[0-9]* = 0 (setup)
PASS: gdb.base/exprs.exp: set output-radix 10
PASS: gdb.base/exprs.exp: set variable v_int = 1
PASS: gdb.base/exprs.exp: print v_int++
PASS: gdb.base/exprs.exp: print ++v_int
PASS: gdb.base/exprs.exp: print v_int--
PASS: gdb.base/exprs.exp: print --v_int
PASS: gdb.base/exprs.exp: print v_int++ = 5
PASS: gdb.base/exprs.exp: print v_int-- = 5
PASS: gdb.base/exprs.exp: print v_int_array_init
PASS: gdb.base/exprs.exp: print *v_int_array_init@1
PASS: gdb.base/exprs.exp: print *v_int_array_init@2
PASS: gdb.base/exprs.exp: print v_int_array_init[0]@1
PASS: gdb.base/exprs.exp: print v_int_array_init[0]@2
PASS: gdb.base/exprs.exp: print v_int_array_init[1]@1
PASS: gdb.base/exprs.exp: set variable v_short_array[0] = 42
PASS: gdb.base/exprs.exp: print {short} v_short_array
PASS: gdb.base/exprs.exp: print (void) v_int_pointer
PASS: gdb.base/exprs.exp: print & (void) v_char
PASS: gdb.base/exprs.exp: print null_t_struct && null_t_struct->v_int_member == 0
Running ../../../gdb/testsuite/gdb.base/paginate-execution-startup.exp ...
PASS: gdb.base/paginate-execution-startup.exp: probe support: run to main
PASS: gdb.base/paginate-execution-startup.exp: probe support: set height unlimited
PASS: gdb.base/paginate-execution-startup.exp: return: run to pagination
PASS: gdb.base/paginate-execution-startup.exp: return: send \n to GDB
PASS: gdb.base/paginate-execution-startup.exp: return: GDB accepts further input
PASS: gdb.base/paginate-execution-startup.exp: return: set height unlimited
PASS: gdb.base/paginate-execution-startup.exp: cancel with ctrl-c: run to pagination
PASS: gdb.base/paginate-execution-startup.exp: cancel with ctrl-c: cancel pagination
PASS: gdb.base/paginate-execution-startup.exp: cancel with ctrl-c: GDB accepts further input
PASS: gdb.base/paginate-execution-startup.exp: cancel with ctrl-c: set height unlimited
PASS: gdb.base/paginate-execution-startup.exp: cancel with quit: run to pagination
PASS: gdb.base/paginate-execution-startup.exp: cancel with quit: cancel pagination
PASS: gdb.base/paginate-execution-startup.exp: cancel with quit: GDB accepts further input
PASS: gdb.base/paginate-execution-startup.exp: cancel with quit: set height unlimited
Running ../../../gdb/testsuite/gdb.base/gdb-sigterm.exp ...
UNSUPPORTED: gdb.base/gdb-sigterm.exp: gdb-sigterm.exp
Running ../../../gdb/testsuite/gdb.base/infcall-exec.exp ...
UNSUPPORTED: gdb.base/infcall-exec.exp: infcall-exec.exp
Running ../../../gdb/testsuite/gdb.base/gdbinit-history.exp ...
PASS: gdb.base/gdbinit-history.exp: home=gdbinit-history/unlimited: show history size
PASS: gdb.base/gdbinit-history.exp: home=gdbinit-history/unlimited: show commands
PASS: gdb.base/gdbinit-history.exp: home=gdbinit-history/zero: show history size
PASS: gdb.base/gdbinit-history.exp: home=gdbinit-history/zero: show commands
PASS: gdb.base/gdbinit-history.exp: truncation: print 1
PASS: gdb.base/gdbinit-history.exp: truncation: creating: server show commands
PASS: gdb.base/gdbinit-history.exp: truncation: appending: server show commands
PASS: gdb.base/gdbinit-history.exp: home=gdbinit-history/unlimited gdbhistsize=1000: show history size
PASS: gdb.base/gdbinit-history.exp: home=gdbinit-history/unlimited gdbhistsize=1000: show commands
PASS: gdb.base/gdbinit-history.exp: home=gdbinit-history/unlimited gdbhistsize=foo: show history size
PASS: gdb.base/gdbinit-history.exp: home=gdbinit-history/unlimited gdbhistsize=foo: show commands
Running ../../../gdb/testsuite/gdb.base/nested-subp3.exp ...
PASS: gdb.base/nested-subp3.exp: breakpoint to the STOP marker
PASS: gdb.base/nested-subp3.exp: continue to the STOP marker
PASS: gdb.base/nested-subp3.exp: print first
PASS: gdb.base/nested-subp3.exp: print parent_first
Running ../../../gdb/testsuite/gdb.base/siginfo-addr.exp ...
Running ../../../gdb/testsuite/gdb.base/morestack.exp ...
UNSUPPORTED: gdb.base/morestack.exp: more-stack.exp
Running ../../../gdb/testsuite/gdb.base/gdb1090.exp ...
PASS: gdb.base/gdb1090.exp: continue to breakpoint: break-here
PASS: gdb.base/gdb1090.exp: print s24
Running ../../../gdb/testsuite/gdb.base/args.exp ...
PASS: gdb.base/args.exp: continue to breakpoint: breakpoint for basic
PASS: gdb.base/args.exp: argc for basic
PASS: gdb.base/args.exp: argv[1] for basic
PASS: gdb.base/args.exp: argv[2] for basic
PASS: gdb.base/args.exp: continue to breakpoint: breakpoint for one empty
PASS: gdb.base/args.exp: argc for one empty
PASS: gdb.base/args.exp: argv[1] for one empty
PASS: gdb.base/args.exp: argv[2] for one empty
PASS: gdb.base/args.exp: argv[3] for one empty
PASS: gdb.base/args.exp: continue to breakpoint: breakpoint for two empty
PASS: gdb.base/args.exp: argc for two empty
PASS: gdb.base/args.exp: argv[1] for two empty
PASS: gdb.base/args.exp: argv[2] for two empty
PASS: gdb.base/args.exp: argv[3] for two empty
PASS: gdb.base/args.exp: argv[4] for two empty
PASS: gdb.base/args.exp: continue to breakpoint: breakpoint for one empty (with single quotes)
PASS: gdb.base/args.exp: argc for one empty (with single quotes)
PASS: gdb.base/args.exp: argv[1] for one empty (with single quotes)
PASS: gdb.base/args.exp: argv[2] for one empty (with single quotes)
PASS: gdb.base/args.exp: argv[3] for one empty (with single quotes)
PASS: gdb.base/args.exp: continue to breakpoint: breakpoint for two empty (with single quotes)
PASS: gdb.base/args.exp: argc for two empty (with single quotes)
PASS: gdb.base/args.exp: argv[1] for two empty (with single quotes)
PASS: gdb.base/args.exp: argv[2] for two empty (with single quotes)
PASS: gdb.base/args.exp: argv[3] for two empty (with single quotes)
PASS: gdb.base/args.exp: argv[4] for two empty (with single quotes)
PASS: gdb.base/args.exp: continue to breakpoint: breakpoint for one newline
PASS: gdb.base/args.exp: argc for one newline
PASS: gdb.base/args.exp: argv[1] for one newline
PASS: gdb.base/args.exp: argv[2] for one newline
PASS: gdb.base/args.exp: argv[3] for one newline
PASS: gdb.base/args.exp: continue to breakpoint: breakpoint for two newlines
PASS: gdb.base/args.exp: argc for two newlines
PASS: gdb.base/args.exp: argv[1] for two newlines
PASS: gdb.base/args.exp: argv[2] for two newlines
PASS: gdb.base/args.exp: argv[3] for two newlines
PASS: gdb.base/args.exp: argv[4] for two newlines
Running ../../../gdb/testsuite/gdb.base/catch-fork-static.exp ...
Running ../../../gdb/testsuite/gdb.base/dfp-test.exp ...
Running ../../../gdb/testsuite/gdb.base/dbx.exp ...
PASS: gdb.base/dbx.exp: stop in main
PASS: gdb.base/dbx.exp: status
PASS: gdb.base/dbx.exp: stop at average.c:30
PASS: gdb.base/dbx.exp: stop in average.c:30
PASS: gdb.base/dbx.exp: stop at main
PASS: gdb.base/dbx.exp: running to main
PASS: gdb.base/dbx.exp: assign first
PASS: gdb.base/dbx.exp: print first
PASS: gdb.base/dbx.exp: whereis my_list
PASS: gdb.base/dbx.exp: file average.c:1
PASS: gdb.base/dbx.exp: cont 1
PASS: gdb.base/dbx.exp: step
PASS: gdb.base/dbx.exp: func sum
PASS: gdb.base/dbx.exp: stop in sum
PASS: gdb.base/dbx.exp: cont 2
PASS: gdb.base/dbx.exp: func print_average
Running ../../../gdb/testsuite/gdb.base/nextoverexit.exp ...
PASS: gdb.base/nextoverexit.exp: next over exit
Running ../../../gdb/testsuite/gdb.base/hbreak-unmapped.exp ...
Running ../../../gdb/testsuite/gdb.base/fullpath-expand.exp ...
PASS: gdb.base/fullpath-expand.exp: rbreak XXX/fullpath-expand-func.c:func
PASS: gdb.base/fullpath-expand.exp: list func
PASS: gdb.base/fullpath-expand.exp: info source
Running ../../../gdb/testsuite/gdb.base/watch-non-mem.exp ...
PASS: gdb.base/watch-non-mem.exp: set write watchpoint on $pc
PASS: gdb.base/watch-non-mem.exp: watchpoint on $pc works
Running ../../../gdb/testsuite/gdb.base/readline-ask.exp ...
PASS: gdb.base/readline-ask.exp: set width 50
PASS: gdb.base/readline-ask.exp: set height 3
PASS: gdb.base/readline-ask.exp: bell for more message
PASS: gdb.base/readline-ask.exp: more message for 01 and 02
PASS: gdb.base/readline-ask.exp: more message for 03
PASS: gdb.base/readline-ask.exp: more finish for 04
PASS: gdb.base/readline-ask.exp: abort more message
PASS: gdb.base/readline-ask.exp: bell for ask message
PASS: gdb.base/readline-ask.exp: ask message
PASS: gdb.base/readline-ask.exp: ask message for 01 and 02
PASS: gdb.base/readline-ask.exp: ask message no
PASS: gdb.base/readline-ask.exp: abort ask message
Running ../../../gdb/testsuite/gdb.base/sigbpt.exp ...
Running ../../../gdb/testsuite/gdb.base/eval-avoid-side-effects.exp ...
PASS: gdb.base/eval-avoid-side-effects.exp: get integer valueof "sizeof (int)" (4)
PASS: gdb.base/eval-avoid-side-effects.exp: set variable x=42
PASS: gdb.base/eval-avoid-side-effects.exp: test sizeof side effects
PASS: gdb.base/eval-avoid-side-effects.exp: sizeof has no side effects
PASS: gdb.base/eval-avoid-side-effects.exp: test ptype side effects
PASS: gdb.base/eval-avoid-side-effects.exp: ptype has no side effects
PASS: gdb.base/eval-avoid-side-effects.exp: test whatis side effects
PASS: gdb.base/eval-avoid-side-effects.exp: whatis has no side effects
Running ../../../gdb/testsuite/gdb.base/exitsignal.exp ...
Running ../../../gdb/testsuite/gdb.base/eu-strip-infcall.exp ...
PASS: gdb.base/eu-strip-infcall.exp: infcall
Running ../../../gdb/testsuite/gdb.base/memattr.exp ...
PASS: gdb.base/memattr.exp: create mem region 1
PASS: gdb.base/memattr.exp: create mem region 2
PASS: gdb.base/memattr.exp: create mem region 3
PASS: gdb.base/memattr.exp: create mem region 4
PASS: gdb.base/memattr.exp: create mem region 5
PASS: gdb.base/memattr.exp: info mem (1)
PASS: gdb.base/memattr.exp: mem1 cannot be read
PASS: gdb.base/memattr.exp: mem1 can be written
PASS: gdb.base/memattr.exp: mem2 cannot be written
PASS: gdb.base/memattr.exp: mem2 can be read
PASS: gdb.base/memattr.exp: disable mem 1
PASS: gdb.base/memattr.exp: mem 1 was disabled
PASS: gdb.base/memattr.exp: enable mem 1
PASS: gdb.base/memattr.exp: mem 1 was enabled
PASS: gdb.base/memattr.exp: disable mem 2 4
PASS: gdb.base/memattr.exp: mem 2 and 4 were disabled
PASS: gdb.base/memattr.exp: enable mem 2-4
PASS: gdb.base/memattr.exp: mem 2-4 were enabled
PASS: gdb.base/memattr.exp: disable mem
PASS: gdb.base/memattr.exp: mem 1 to 5 were disabled
PASS: gdb.base/memattr.exp: enable mem
PASS: gdb.base/memattr.exp: mem 1 to 5 were enabled
PASS: gdb.base/memattr.exp: disable non-existant regions
PASS: gdb.base/memattr.exp: delete mem 1
PASS: gdb.base/memattr.exp: mem 1 was deleted
PASS: gdb.base/memattr.exp: delete mem 2 4
PASS: gdb.base/memattr.exp: mem 2 and 4 were deleted
PASS: gdb.base/memattr.exp: delete mem 2-4
PASS: gdb.base/memattr.exp: mem 2-4 were deleted
PASS: gdb.base/memattr.exp: delete non-existant region
PASS: gdb.base/memattr.exp: mem 0x30 0x60 ro
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x20 0x40: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x30 0x40: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x40 0x50: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x50 0x60: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x50 0x70: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x30 0x60: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x20 0x70: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x20 0x0: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x30 0x0: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x40 0x0: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x20 0x30: no-overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x60 0x70: no-overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x80 0x0: no-overlap
PASS: gdb.base/memattr.exp: mem 0x30 0x0 ro
PASS: gdb.base/memattr.exp: 0x30 0x0: 0x20 0x50: overlap
PASS: gdb.base/memattr.exp: 0x30 0x0: 0x30 0x50: overlap
PASS: gdb.base/memattr.exp: 0x30 0x0: 0x40 0x50: overlap
PASS: gdb.base/memattr.exp: 0x30 0x0: 0x20 0x0: overlap
PASS: gdb.base/memattr.exp: 0x30 0x0: 0x30 0x0: overlap
PASS: gdb.base/memattr.exp: 0x30 0x0: 0x40 0x0: overlap
PASS: gdb.base/memattr.exp: 0x30 0x0: 0x20 0x30: no-overlap
PASS: gdb.base/memattr.exp: 0x30 0x0: 0x00 0x10: no-overlap
Running ../../../gdb/testsuite/gdb.base/gdbvars.exp ...
PASS: gdb.base/gdbvars.exp: set print sevenbit-strings
PASS: gdb.base/gdbvars.exp: Set value-history[1] using $1
PASS: gdb.base/gdbvars.exp: Set value-history[2] using $2
PASS: gdb.base/gdbvars.exp: Set value-history[3] using $3
PASS: gdb.base/gdbvars.exp: Print value-history[MAX-1] using inplicit index $$
PASS: gdb.base/gdbvars.exp: Print value-history[MAX-1] again using implicit index $$
PASS: gdb.base/gdbvars.exp: Print value-history[MAX] using implicit index $
PASS: gdb.base/gdbvars.exp: Print value-history[MAX-2] using explicit index $$2
PASS: gdb.base/gdbvars.exp: Print value-history[MAX] using explicit index $0
PASS: gdb.base/gdbvars.exp: print 108
PASS: gdb.base/gdbvars.exp: Print value-history[MAX] using explicit index $$0
PASS: gdb.base/gdbvars.exp: Print value-history[1] using explicit index $1
PASS: gdb.base/gdbvars.exp: Print value-history[2] using explicit index $2
PASS: gdb.base/gdbvars.exp: Print value-history[3] using explicit index $3
PASS: gdb.base/gdbvars.exp: Print (value-history[MAX] - 3) using implicit index $
PASS: gdb.base/gdbvars.exp: Use value-history element in arithmetic expression
PASS: gdb.base/gdbvars.exp: Set a new convenience variable
PASS: gdb.base/gdbvars.exp: Print contents of new convenience variable
PASS: gdb.base/gdbvars.exp: Set convenience variable to a new value
PASS: gdb.base/gdbvars.exp: Print new contents of convenience variable
PASS: gdb.base/gdbvars.exp: Set convenience variable $_
PASS: gdb.base/gdbvars.exp: Print contents of convenience variable $_
PASS: gdb.base/gdbvars.exp: Use convenience variable in arithmetic expression
PASS: gdb.base/gdbvars.exp: Use convenience variable assignment in arithmetic expression
PASS: gdb.base/gdbvars.exp: Print contents of uninitialized convenience variable
PASS: gdb.base/gdbvars.exp: Print internal function $_isvoid
PASS: gdb.base/gdbvars.exp: Print void convenience variable
PASS: gdb.base/gdbvars.exp: Check whether void convenience variable is void
PASS: gdb.base/gdbvars.exp: Set void convenience variable to 1
PASS: gdb.base/gdbvars.exp: Check whether non-void convenience variable is void
PASS: gdb.base/gdbvars.exp: Check whether void function is void
PASS: gdb.base/gdbvars.exp: Check whether non-void function is void
PASS: gdb.base/gdbvars.exp: Set a new convenience variable to a program variable
PASS: gdb.base/gdbvars.exp: Print contents of new convenience variable of program variable
Running ../../../gdb/testsuite/gdb.base/consecutive.exp ...
PASS: gdb.base/consecutive.exp: continue to breakpoint in foo
PASS: gdb.base/consecutive.exp: get breakpoint address for foo
PASS: gdb.base/consecutive.exp: set bp, 2nd instr
PASS: gdb.base/consecutive.exp: stopped at bp, 2nd instr
Running ../../../gdb/testsuite/gdb.base/type-opaque.exp ...
Running ../../../gdb/testsuite/gdb.base/macscp.exp ...
PASS: gdb.base/macscp.exp: list main for support check
PASS: gdb.base/macscp.exp: list main for WHERE
PASS: gdb.base/macscp.exp: info macro WHERE after `list main'
PASS: gdb.base/macscp.exp: list macscp2_2 for WHERE
PASS: gdb.base/macscp.exp: info macro WHERE after `list macscp2_2'
PASS: gdb.base/macscp.exp: list macscp3_2 for WHERE
PASS: gdb.base/macscp.exp: info macro WHERE after `list macscp3_2'
PASS: gdb.base/macscp.exp: info macro FROM_COMMANDLINE
PASS: gdb.base/macscp.exp: info macro __FILE__ before running
PASS: gdb.base/macscp.exp: info macro __LINE__ before running
PASS: gdb.base/macscp.exp: list macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: info macro WHERE after `list macscp_4_2_from_macscp2'
PASS: gdb.base/macscp.exp: list macscp4_2_from_macscp3
KFAIL: gdb.base/macscp.exp: info macro WHERE after `list macscp_4_2_from_macscp3' (gdb/555) (PRMS: gdb/555)
PASS: gdb.base/macscp.exp: break macscp1_1
PASS: gdb.base/macscp.exp: break macscp2_1
PASS: gdb.base/macscp.exp: break macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: break macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: break macscp2_2
PASS: gdb.base/macscp.exp: break macscp1_2
PASS: gdb.base/macscp.exp: break macscp3_1
PASS: gdb.base/macscp.exp: break macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: break macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: break macscp3_2
PASS: gdb.base/macscp.exp: break macscp1_3
PASS: gdb.base/macscp.exp: continue to macscp1_1
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: continue to macscp2_1
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: continue to macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: continue to macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: continue to macscp2_2
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: continue to macscp1_2
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: continue to macscp3_1
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: continue to macscp4_1_from_macscp3
KFAIL: gdb.base/macscp.exp: info macro WHERE stopped in macscp4_1_from_macscp3 (gdb/555) (PRMS: gdb/555)
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp4_1_from_macscp3
KFAIL: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp4_1_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp4_1_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp4_1_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp4_1_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp4_1_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp4_1_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp4_1_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp4_1_from_macscp3 (PRMS: gdb/555)
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: continue to macscp4_2_from_macscp3
KFAIL: gdb.base/macscp.exp: info macro WHERE stopped in macscp4_2_from_macscp3 (gdb/555) (PRMS: gdb/555)
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp4_2_from_macscp3
KFAIL: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp4_2_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp4_2_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp4_2_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp4_2_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp4_2_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp4_2_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp4_2_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp4_2_from_macscp3 (PRMS: gdb/555)
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: continue to macscp3_2
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: continue to macscp1_3
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: breakpoint macscp_expr
PASS: gdb.base/macscp.exp: macro MACRO_TO_EXPAND not in scope at breakpoint
PASS: gdb.base/macscp.exp: breakpoint macscp_expr using MACRO_TO_EXPAND
PASS: gdb.base/macscp.exp: continue to macsp_expr
PASS: gdb.base/macscp.exp: print address.addr
PASS: gdb.base/macscp.exp: print expression with macro before define.
PASS: gdb.base/macscp.exp: next to definition 1
PASS: gdb.base/macscp.exp: print expression with macro in scope.
PASS: gdb.base/macscp.exp: user macro override
PASS: gdb.base/macscp.exp: choose user macro
PASS: gdb.base/macscp.exp: remove user override
PASS: gdb.base/macscp.exp: print expression with macro after removing override
PASS: gdb.base/macscp.exp: next to definition 2
PASS: gdb.base/macscp.exp: print expression with macro after undef.
PASS: gdb.base/macscp.exp: basic macro define
PASS: gdb.base/macscp.exp: expansion of defined macro
PASS: gdb.base/macscp.exp: basic macro list
PASS: gdb.base/macscp.exp: basic redefine, macro with args
PASS: gdb.base/macscp.exp: expansion of macro with arguments
PASS: gdb.base/macscp.exp: basic macro undef
PASS: gdb.base/macscp.exp: print expression with macro after user undef.
PASS: gdb.base/macscp.exp: macro define with no arguments
PASS: gdb.base/macscp.exp: macro undef with no arguments
PASS: gdb.base/macscp.exp: complete 'p FIFTY_SEVEN'
PASS: gdb.base/macscp.exp: complete 'p TWENTY_'
PASS: gdb.base/macscp.exp: complete 'p FORTY_'
PASS: gdb.base/macscp.exp: defining TWENTY_THREE
PASS: gdb.base/macscp.exp: complete 'p TWENTY_THREE'
PASS: gdb.base/macscp.exp: basic macro splicing
PASS: gdb.base/macscp.exp: define splice helper
PASS: gdb.base/macscp.exp: splicing plus expansion
PASS: gdb.base/macscp.exp: define first varargs helper
PASS: gdb.base/macscp.exp: define second varargs helper
PASS: gdb.base/macscp.exp: define third varargs helper
PASS: gdb.base/macscp.exp: define fourth varargs helper
PASS: gdb.base/macscp.exp: c99 varargs expansion
PASS: gdb.base/macscp.exp: c99 varargs expansion without an argument
PASS: gdb.base/macscp.exp: c99 varargs expansion, multiple formal arguments
PASS: gdb.base/macscp.exp: gnu varargs expansion
PASS: gdb.base/macscp.exp: gnu varargs expansion without an argument
PASS: gdb.base/macscp.exp: gnu varargs expansion special splicing without an argument
PASS: gdb.base/macscp.exp: define stringification macro
PASS: gdb.base/macscp.exp: define first stringification helper
PASS: gdb.base/macscp.exp: define second stringification helper
PASS: gdb.base/macscp.exp: simple stringify
PASS: gdb.base/macscp.exp: stringify with one space
PASS: gdb.base/macscp.exp: stringify with many spaces
PASS: gdb.base/macscp.exp: stringify with quotes
PASS: gdb.base/macscp.exp: stringify with backslashes
PASS: gdb.base/macscp.exp: stringify without substitution
PASS: gdb.base/macscp.exp: stringify with substitution
PASS: gdb.base/macscp.exp: define si_addr macro
PASS: gdb.base/macscp.exp: macro expand siginfo.si_addr
PASS: gdb.base/macscp.exp: print __FILE__
PASS: gdb.base/macscp.exp: print __LINE__
Running ../../../gdb/testsuite/gdb.base/step-bt.exp ...
PASS: gdb.base/step-bt.exp: breakpoint at first instruction of hello()
PASS: gdb.base/step-bt.exp: run to hello()
PASS: gdb.base/step-bt.exp: step first instruction
PASS: gdb.base/step-bt.exp: backtrace after first instruction step
PASS: gdb.base/step-bt.exp: step second instruction
PASS: gdb.base/step-bt.exp: backtrace after second instruction step
Running ../../../gdb/testsuite/gdb.base/condbreak.exp ...
PASS: gdb.base/condbreak.exp: breakpoint function
PASS: gdb.base/condbreak.exp: break marker1 if 1==1
PASS: gdb.base/condbreak.exp: delete 2
PASS: gdb.base/condbreak.exp: break break.c:47 if 1==1
PASS: gdb.base/condbreak.exp: delete 3
PASS: gdb.base/condbreak.exp: break marker1 if (1==1)
PASS: gdb.base/condbreak.exp: break break.c:47 if (1==1)
PASS: gdb.base/condbreak.exp: break marker2 if (a==43)
PASS: gdb.base/condbreak.exp: break marker3 if (multi_line_if_conditional(1,1,1)==0)
PASS: gdb.base/condbreak.exp: break marker4
PASS: gdb.base/condbreak.exp: breakpoint info
PASS: gdb.base/condbreak.exp: rerun to main
PASS: gdb.base/condbreak.exp: run until breakpoint set at a line number
PASS: gdb.base/condbreak.exp: run until breakpoint at marker1
PASS: gdb.base/condbreak.exp: run until breakpoint at marker2
PASS: gdb.base/condbreak.exp: break main if (1==1) thread 999
PASS: gdb.base/condbreak.exp: break main thread 999 if (1==1)
PASS: gdb.base/condbreak.exp: break *main if (1==1) thread 999
PASS: gdb.base/condbreak.exp: break *main thread 999 if (1==1)
PASS: gdb.base/condbreak.exp: break *main if (1==1) task 999
PASS: gdb.base/condbreak.exp: break *main task 999 if (1==1)
PASS: gdb.base/condbreak.exp: break *main if (1==1) t 999
PASS: gdb.base/condbreak.exp: break *main if (1==1) th 999
PASS: gdb.base/condbreak.exp: break *main if (1==1) ta 999
PASS: gdb.base/condbreak.exp: run until breakpoint at marker3
PASS: gdb.base/condbreak.exp: run until breakpoint at marker4
PASS: gdb.base/condbreak.exp: complete cond 1
PASS: gdb.base/condbreak.exp: set variable $var = 1
PASS: gdb.base/condbreak.exp: complete cond $v
PASS: gdb.base/condbreak.exp: complete cond 1 values[0].a
Running ../../../gdb/testsuite/gdb.base/prologue.exp ...
Running ../../../gdb/testsuite/gdb.base/set-noassign.exp ...
PASS: gdb.base/set-noassign.exp: set language ada
PASS: gdb.base/set-noassign.exp: warning for set without assignment
Running ../../../gdb/testsuite/gdb.base/continue-all-already-running.exp ...
PASS: gdb.base/continue-all-already-running.exp: set non-stop on
PASS: gdb.base/continue-all-already-running.exp: c -a&
PASS: gdb.base/continue-all-already-running.exp: no stop
PASS: gdb.base/continue-all-already-running.exp: print 1
PASS: gdb.base/continue-all-already-running.exp: c -a
PASS: gdb.base/continue-all-already-running.exp: breakpoint hit
PASS: gdb.base/continue-all-already-running.exp: print command result
Running ../../../gdb/testsuite/gdb.base/testenv.exp ...
Running ../../../gdb/testsuite/gdb.base/foll-vfork.exp ...
Running ../../../gdb/testsuite/gdb.base/break-interp.exp ...
Running ../../../gdb/testsuite/gdb.base/break-on-linker-gcd-function.exp ...
Running ../../../gdb/testsuite/gdb.base/call-sc.exp ...
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-tc (char)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-tc char
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-tc
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-tc
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-tc
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-tc
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-tc
PASS: gdb.base/call-sc.exp: return foo; return call-sc-tc
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-tc
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-tc
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-tc
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-tc
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-tc
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-tc
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-ts (short int)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-ts short int
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-ts
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-ts
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-ts
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-ts
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-ts
PASS: gdb.base/call-sc.exp: return foo; return call-sc-ts
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-ts
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-ts
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-ts
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-ts
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-ts
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-ts
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-ti (int)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-ti int
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-ti
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-ti
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-ti
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-ti
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-ti
PASS: gdb.base/call-sc.exp: return foo; return call-sc-ti
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-ti
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-ti
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-ti
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-ti
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-ti
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-ti
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-tl (long int)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-tl long int
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-tl
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-tl
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-tl
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-tl
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-tl
PASS: gdb.base/call-sc.exp: return foo; return call-sc-tl
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-tl
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-tl
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-tl
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-tl
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-tl
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-tl
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-tll (long long int)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-tll long long int
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-tll
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-tll
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-tll
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-tll
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-tll
PASS: gdb.base/call-sc.exp: return foo; return call-sc-tll
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-tll
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-tll
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-tll
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-tll
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-tll
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-tll
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-tf (float)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-tf float
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-tf
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-tf
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-tf
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-tf
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-tf
PASS: gdb.base/call-sc.exp: return foo; return call-sc-tf
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-tf
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-tf
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-tf
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-tf
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-tf
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-tf
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-td (double)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-td double
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-td
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-td
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-td
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-td
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-td
PASS: gdb.base/call-sc.exp: return foo; return call-sc-td
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-td
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-td
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-td
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-td
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-td
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-td
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-tld (long double)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-tld long double
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-tld
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-tld
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-tld
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-tld
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-tld
PASS: gdb.base/call-sc.exp: return foo; return call-sc-tld
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-tld
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-tld
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-tld
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-tld
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-tld
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-tld
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-te (enum {e = 49})
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-te enum {e = 49}
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-te
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-te
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-te
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-te
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-te
PASS: gdb.base/call-sc.exp: return foo; return call-sc-te
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-te
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-te
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-te
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-te
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-te
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-te
Running ../../../gdb/testsuite/gdb.base/bfp-test.exp ...
PASS: gdb.base/bfp-test.exp: continue to breakpoint: return
PASS: gdb.base/bfp-test.exp: The original value of b32 is 1.5
PASS: gdb.base/bfp-test.exp: The original value of b64 is 2.25
PASS: gdb.base/bfp-test.exp: The original value of b128 is 3.375
PASS: gdb.base/bfp-test.exp: Try to change b32 to -1.5 with 'print b32=-1.5f'
PASS: gdb.base/bfp-test.exp: Try to change b64 to -2.25 with 'print b64=-2.25f'
PASS: gdb.base/bfp-test.exp: Try to change b128 to -3.375 with 'print b128=-3.375l'
PASS: gdb.base/bfp-test.exp: set variable b32 = 10.5f
PASS: gdb.base/bfp-test.exp: set variable b64 = 20.25f
PASS: gdb.base/bfp-test.exp: set variable b128 = 30.375l
PASS: gdb.base/bfp-test.exp: The value of b32 is changed to 10.5
PASS: gdb.base/bfp-test.exp: The value of b64 is changed to 20.25
PASS: gdb.base/bfp-test.exp: The value of b128 is changed to 30.375
PASS: gdb.base/bfp-test.exp: set variable b32 = 100.5a
PASS: gdb.base/bfp-test.exp: set variable b64 = 200.25x
PASS: gdb.base/bfp-test.exp: set variable b128 = 300.375fl
PASS: gdb.base/bfp-test.exp: set variable b128 = 300.375fff
Running ../../../gdb/testsuite/gdb.base/randomize.exp ...
UNTESTED: gdb.base/randomize.exp: Disabling randomization is not supported on this Linux GDB
Running ../../../gdb/testsuite/gdb.base/call-signal-resume.exp ...
Running ../../../gdb/testsuite/gdb.base/dump.exp ...
PASS: gdb.base/dump.exp: inaccessible memory is reported
PASS: gdb.base/dump.exp: get hexadecimal valueof "&intarray"
PASS: gdb.base/dump.exp: endianness: little
PASS: gdb.base/dump.exp: dump array as value, default
PASS: gdb.base/dump.exp: dump struct as value, default
PASS: gdb.base/dump.exp: dump array as value, binary
PASS: gdb.base/dump.exp: dump struct as value, binary
PASS: gdb.base/dump.exp: dump array as value, srec
PASS: gdb.base/dump.exp: dump struct as value, srec
PASS: gdb.base/dump.exp: dump array as value, intel hex
PASS: gdb.base/dump.exp: dump struct as value, intel hex
PASS: gdb.base/dump.exp: dump array as value, tekhex
PASS: gdb.base/dump.exp: dump struct as value, tekhex
PASS: gdb.base/dump.exp: dump array as value, intel hex
PASS: gdb.base/dump.exp: dump struct as value, intel hex
PASS: gdb.base/dump.exp: capture /x &intarray[0]
PASS: gdb.base/dump.exp: capture /x &intarray[32]
PASS: gdb.base/dump.exp: capture /x &intstruct
PASS: gdb.base/dump.exp: capture /x &intstruct + 1
PASS: gdb.base/dump.exp: capture intarray
PASS: gdb.base/dump.exp: capture intstruct
PASS: gdb.base/dump.exp: capture type of pointer &intarray
PASS: gdb.base/dump.exp: capture type of pointer &intstruct
PASS: gdb.base/dump.exp: dump array as memory, default
PASS: gdb.base/dump.exp: dump struct as memory, default
PASS: gdb.base/dump.exp: dump array as memory, binary
PASS: gdb.base/dump.exp: dump struct as memory, binary
PASS: gdb.base/dump.exp: dump array as memory, srec
PASS: gdb.base/dump.exp: dump struct as memory, srec
PASS: gdb.base/dump.exp: dump array as memory, ihex
PASS: gdb.base/dump.exp: dump struct as memory, ihex
PASS: gdb.base/dump.exp: dump array as memory, tekhex
PASS: gdb.base/dump.exp: dump struct as memory, tekhex
PASS: gdb.base/dump.exp: dump array as memory, verilog
PASS: gdb.base/dump.exp: dump struct as memory, verilog
PASS: gdb.base/dump.exp: dump array as mem, srec, expressions
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as value, srec; file restored ok
PASS: gdb.base/dump.exp: array as value, srec; capture
PASS: gdb.base/dump.exp: array as value, srec; value restored ok
PASS: gdb.base/dump.exp: struct as value, srec; file restored ok
PASS: gdb.base/dump.exp: struct as value, srec; capture
PASS: gdb.base/dump.exp: struct as value, srec; value restored ok
PASS: gdb.base/dump.exp: zero all
PASS: gdb.base/dump.exp: array as memory, srec; file restored ok
PASS: gdb.base/dump.exp: array as memory, srec; capture
PASS: gdb.base/dump.exp: array as memory, srec; value restored ok
PASS: gdb.base/dump.exp: struct as memory, srec; file restored ok
PASS: gdb.base/dump.exp: struct as memory, srec; capture
PASS: gdb.base/dump.exp: struct as memory, srec; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as value, ihex; file restored ok
PASS: gdb.base/dump.exp: array as value, ihex; capture
PASS: gdb.base/dump.exp: array as value, ihex; value restored ok
PASS: gdb.base/dump.exp: struct as value, ihex; file restored ok
PASS: gdb.base/dump.exp: struct as value, ihex; capture
PASS: gdb.base/dump.exp: struct as value, ihex; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as memory, ihex; file restored ok
PASS: gdb.base/dump.exp: array as memory, ihex; capture
PASS: gdb.base/dump.exp: array as memory, ihex; value restored ok
PASS: gdb.base/dump.exp: struct as memory, ihex; file restored ok
PASS: gdb.base/dump.exp: struct as memory, ihex; capture
PASS: gdb.base/dump.exp: struct as memory, ihex; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as value, tekhex; file restored ok
PASS: gdb.base/dump.exp: array as value, tekhex; capture
PASS: gdb.base/dump.exp: array as value, tekhex; value restored ok
PASS: gdb.base/dump.exp: struct as value, tekhex; file restored ok
PASS: gdb.base/dump.exp: struct as value, tekhex; capture
PASS: gdb.base/dump.exp: struct as value, tekhex; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as memory, tekhex; file restored ok
PASS: gdb.base/dump.exp: array as memory, tekhex; capture
PASS: gdb.base/dump.exp: array as memory, tekhex; value restored ok
PASS: gdb.base/dump.exp: struct as memory, tekhex; file restored ok
PASS: gdb.base/dump.exp: struct as memory, tekhex; capture
PASS: gdb.base/dump.exp: struct as memory, tekhex; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as value, binary; file restored ok
PASS: gdb.base/dump.exp: array as value, binary; capture
PASS: gdb.base/dump.exp: array as value, binary; value restored ok
PASS: gdb.base/dump.exp: struct as value, binary; file restored ok
PASS: gdb.base/dump.exp: struct as value, binary; capture
PASS: gdb.base/dump.exp: struct as value, binary; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as memory, binary; file restored ok
PASS: gdb.base/dump.exp: array as memory, binary; capture
PASS: gdb.base/dump.exp: array as memory, binary; value restored ok
PASS: gdb.base/dump.exp: struct as memory, binary; file restored ok
PASS: gdb.base/dump.exp: struct as memory, binary; capture
PASS: gdb.base/dump.exp: struct as memory, binary; value restored ok
PASS: gdb.base/dump.exp: capture /x &intarray2[0]
PASS: gdb.base/dump.exp: capture /x &intstruct2
PASS: gdb.base/dump.exp: capture (char *) &intarray2 - (char *) &intarray
PASS: gdb.base/dump.exp: capture (char *) &intstruct2 - (char *) &intstruct
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array copy, srec; file restored ok
PASS: gdb.base/dump.exp: array copy, srec; capture
PASS: gdb.base/dump.exp: array copy, srec; value restored ok
PASS: gdb.base/dump.exp: struct copy, srec; file restored ok
PASS: gdb.base/dump.exp: struct copy, srec; capture
PASS: gdb.base/dump.exp: struct copy, srec; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array copy, ihex; file restored ok
PASS: gdb.base/dump.exp: array copy, ihex; capture
PASS: gdb.base/dump.exp: array copy, ihex; value restored ok
PASS: gdb.base/dump.exp: struct copy, ihex; file restored ok
PASS: gdb.base/dump.exp: struct copy, ihex; capture
PASS: gdb.base/dump.exp: struct copy, ihex; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array copy, tekhex; file restored ok
PASS: gdb.base/dump.exp: array copy, tekhex; capture
PASS: gdb.base/dump.exp: array copy, tekhex; value restored ok
PASS: gdb.base/dump.exp: struct copy, tekhex; file restored ok
PASS: gdb.base/dump.exp: struct copy, tekhex; capture
PASS: gdb.base/dump.exp: struct copy, tekhex; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array copy, binary; file restored ok
PASS: gdb.base/dump.exp: array copy, binary; capture
PASS: gdb.base/dump.exp: array copy, binary; value restored ok
PASS: gdb.base/dump.exp: struct copy, binary; file restored ok
PASS: gdb.base/dump.exp: struct copy, binary; capture
PASS: gdb.base/dump.exp: struct copy, binary; value restored ok
PASS: gdb.base/dump.exp: capture /x &intarray[3]
PASS: gdb.base/dump.exp: capture /x &intarray[4]
PASS: gdb.base/dump.exp: capture /x (char *) &intarray[3] - (char *) &intarray[0]
PASS: gdb.base/dump.exp: capture /x (char *) &intarray[4] - (char *) &intarray[0]
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array partial, srec; file restored ok
PASS: gdb.base/dump.exp: array partial, srec; capture
PASS: gdb.base/dump.exp: array partial, srec; value restored ok
PASS: gdb.base/dump.exp: element 2 not changed - 1
PASS: gdb.base/dump.exp: element 4 not changed - 1
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array partial, ihex; file restored ok
PASS: gdb.base/dump.exp: array partial, ihex; capture
PASS: gdb.base/dump.exp: array partial, ihex; value restored ok
PASS: gdb.base/dump.exp: element 2 not changed - 2
PASS: gdb.base/dump.exp: element 4 not changed - 2
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array partial, tekhex; file restored ok
PASS: gdb.base/dump.exp: array partial, tekhex; capture
PASS: gdb.base/dump.exp: array partial, tekhex; value restored ok
PASS: gdb.base/dump.exp: element 2 not changed - 3
PASS: gdb.base/dump.exp: element 4 not changed - 3
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array partial, binary; file restored ok
PASS: gdb.base/dump.exp: array partial, binary; capture
PASS: gdb.base/dump.exp: array partial, binary; value restored ok
PASS: gdb.base/dump.exp: element 2 not changed - 4
PASS: gdb.base/dump.exp: element 4 not changed - 4
PASS: gdb.base/dump.exp: array partial with expressions; file restored ok
PASS: gdb.base/dump.exp: array partial with expressions; capture
PASS: gdb.base/dump.exp: array partial with expressions; value restored ok
PASS: gdb.base/dump.exp: element 2 not changed, == 4
PASS: gdb.base/dump.exp: element 4 not changed, == 4
PASS: gdb.base/dump.exp: setting little endianness
PASS: gdb.base/dump.exp: file binfile; intarray; capture
PASS: gdb.base/dump.exp: start with intarray un-initialized
PASS: gdb.base/dump.exp: file binfile; intstruct; capture
PASS: gdb.base/dump.exp: start with intstruct un-initialized
PASS: gdb.base/dump.exp: reload array as value, srec; capture
PASS: gdb.base/dump.exp: reload array as value, srec; value restored ok
PASS: gdb.base/dump.exp: reload struct as value, srec; capture
PASS: gdb.base/dump.exp: reload struct as value, srec; value restored ok
PASS: gdb.base/dump.exp: reload array as memory, srec; capture
PASS: gdb.base/dump.exp: reload array as memory, srec; value restored ok
PASS: gdb.base/dump.exp: reload struct as memory, srec; capture
PASS: gdb.base/dump.exp: reload struct as memory, srec; value restored ok
PASS: gdb.base/dump.exp: reload array as value, intel hex; capture
PASS: gdb.base/dump.exp: reload array as value, intel hex; value restored ok
PASS: gdb.base/dump.exp: reload struct as value, intel hex; capture
PASS: gdb.base/dump.exp: reload struct as value, intel hex; value restored ok
PASS: gdb.base/dump.exp: reload array as memory, intel hex; capture
PASS: gdb.base/dump.exp: reload array as memory, intel hex; value restored ok
PASS: gdb.base/dump.exp: reload struct as memory, intel hex; capture
PASS: gdb.base/dump.exp: reload struct as memory, intel hex; value restored ok
PASS: gdb.base/dump.exp: reload array as value, tekhex; capture
PASS: gdb.base/dump.exp: reload array as value, tekhex; value restored ok
PASS: gdb.base/dump.exp: reload struct as value, tekhex; capture
PASS: gdb.base/dump.exp: reload struct as value, tekhex; value restored ok
PASS: gdb.base/dump.exp: reload array as memory, tekhex; capture
PASS: gdb.base/dump.exp: reload array as memory, tekhex; value restored ok
PASS: gdb.base/dump.exp: reload struct as memory, tekhex; capture
PASS: gdb.base/dump.exp: reload struct as memory, tekhex; value restored ok
Running ../../../gdb/testsuite/gdb.base/sss-bp-on-user-bp-2.exp ...
UNSUPPORTED: gdb.base/sss-bp-on-user-bp-2.exp: sss-bp-on-user-bp-2.exp
Running ../../../gdb/testsuite/gdb.base/kill-after-signal.exp ...
Running ../../../gdb/testsuite/gdb.base/attach-pie-noexec.exp ...
Running ../../../gdb/testsuite/gdb.base/sep.exp ...
PASS: gdb.base/sep.exp: list using location inside included file
PASS: gdb.base/sep.exp: breakpoint inside included file
Running ../../../gdb/testsuite/gdb.base/solib-weak.exp ...
Running ../../../gdb/testsuite/gdb.base/twice.exp ...
PASS: gdb.base/twice.exp: step
Running ../../../gdb/testsuite/gdb.base/annota-input-while-running.exp ...
Running ../../../gdb/testsuite/gdb.base/dfp-exprs.exp ...
PASS: gdb.base/dfp-exprs.exp: p 1.2df
PASS: gdb.base/dfp-exprs.exp: p -1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.234567df
PASS: gdb.base/dfp-exprs.exp: p -1.234567df
PASS: gdb.base/dfp-exprs.exp: p 1234567.df
PASS: gdb.base/dfp-exprs.exp: p -1234567.df
PASS: gdb.base/dfp-exprs.exp: p 1.2E1df
PASS: gdb.base/dfp-exprs.exp: p 1.2E10df
PASS: gdb.base/dfp-exprs.exp: p 1.2E-10df
PASS: gdb.base/dfp-exprs.exp: p 1.2E96df
PASS: gdb.base/dfp-exprs.exp: p 1.2dd
PASS: gdb.base/dfp-exprs.exp: p -1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.234567890123456dd
PASS: gdb.base/dfp-exprs.exp: p -1.234567890123456dd
PASS: gdb.base/dfp-exprs.exp: p 1234567890123456.dd
PASS: gdb.base/dfp-exprs.exp: p -1234567890123456.dd
PASS: gdb.base/dfp-exprs.exp: p 1.2E1dd
PASS: gdb.base/dfp-exprs.exp: p 1.2E10dd
PASS: gdb.base/dfp-exprs.exp: p 1.2E-10dd
PASS: gdb.base/dfp-exprs.exp: p 1.2E384dd
PASS: gdb.base/dfp-exprs.exp: p 1.2dl
PASS: gdb.base/dfp-exprs.exp: p -1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.234567890123456789012345678901234dl
PASS: gdb.base/dfp-exprs.exp: p -1.234567890123456789012345678901234dl
PASS: gdb.base/dfp-exprs.exp: p 1234567890123456789012345678901234.dl
PASS: gdb.base/dfp-exprs.exp: p -1234567890123456789012345678901234.dl
PASS: gdb.base/dfp-exprs.exp: p 1.2E1dl
PASS: gdb.base/dfp-exprs.exp: p 1.2E10dl
PASS: gdb.base/dfp-exprs.exp: p 1.2E-10dl
PASS: gdb.base/dfp-exprs.exp: p 1.2E6144dl
PASS: gdb.base/dfp-exprs.exp: p 1.4df + 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.4df - 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.4df * 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.4df / 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.4dd + 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.4dd - 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.4dd * 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.4dd / 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.4dl + 1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.4dl - 1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.4dl * 1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.4dl / 1.2dl
PASS: gdb.base/dfp-exprs.exp: ptype 2.df + 2.df
PASS: gdb.base/dfp-exprs.exp: ptype 2.dd + 2.dd
PASS: gdb.base/dfp-exprs.exp: ptype 2.dl + 2.dl
PASS: gdb.base/dfp-exprs.exp: p 2.1df + 2.7dd
PASS: gdb.base/dfp-exprs.exp: p 2.1dd + 2.7df
PASS: gdb.base/dfp-exprs.exp: p 2.6df + 2.7dl
PASS: gdb.base/dfp-exprs.exp: p 2.6dl + 2.7df
PASS: gdb.base/dfp-exprs.exp: p 2.3dd + 2.2dl
PASS: gdb.base/dfp-exprs.exp: p 2.3dl + 2.2dd
PASS: gdb.base/dfp-exprs.exp: ptype 2.df + 2.dd
PASS: gdb.base/dfp-exprs.exp: ptype 2.df + 2.dl
PASS: gdb.base/dfp-exprs.exp: ptype 2.dd + 2.dl
PASS: gdb.base/dfp-exprs.exp: p 1.2df + 1
PASS: gdb.base/dfp-exprs.exp: p 2 + 1.7dd
PASS: gdb.base/dfp-exprs.exp: p 3 + 2.1dl
PASS: gdb.base/dfp-exprs.exp: ptype 1.2df + 1
PASS: gdb.base/dfp-exprs.exp: ptype 2 + 1.7dd
PASS: gdb.base/dfp-exprs.exp: ptype 3 + 2.1dl
PASS: gdb.base/dfp-exprs.exp: p 1.2df + 2ll
PASS: gdb.base/dfp-exprs.exp: p 1.2df + 1.2f
PASS: gdb.base/dfp-exprs.exp: p !0.df
PASS: gdb.base/dfp-exprs.exp: p !0.dd
PASS: gdb.base/dfp-exprs.exp: p !0.dl
PASS: gdb.base/dfp-exprs.exp: p !0.5df
PASS: gdb.base/dfp-exprs.exp: p !0.5dd
PASS: gdb.base/dfp-exprs.exp: p !0.5dl
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dd == 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.2dd == 1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dl == 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.2dl == 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.3dd
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.3dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dd == 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2dd == 1.3dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dl == 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2dl == 1.3dd
PASS: gdb.base/dfp-exprs.exp: p +1.2df
PASS: gdb.base/dfp-exprs.exp: p +1.2dd
PASS: gdb.base/dfp-exprs.exp: p +1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.2df < 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2df < 1.3dd
PASS: gdb.base/dfp-exprs.exp: p 1.2dl < 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2dd < 1.3dd
PASS: gdb.base/dfp-exprs.exp: p 1.2dd < 1.3dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dl < 1.3dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dl < 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2df > 1
PASS: gdb.base/dfp-exprs.exp: p 1.2dl > 2
PASS: gdb.base/dfp-exprs.exp: p 2 > 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 2 > 3.1dl
PASS: gdb.base/dfp-exprs.exp: p (float) -0.1df
PASS: gdb.base/dfp-exprs.exp: p (int) 8.3dd
PASS: gdb.base/dfp-exprs.exp: p (_Decimal64) 3.1
PASS: gdb.base/dfp-exprs.exp: p (_Decimal128) 3.7df
PASS: gdb.base/dfp-exprs.exp: p (_Decimal32) 4
Running ../../../gdb/testsuite/gdb.base/whatis-exp.exp ...
PASS: gdb.base/whatis-exp.exp: set variable x=14
PASS: gdb.base/whatis-exp.exp: set variable y=2
PASS: gdb.base/whatis-exp.exp: set variable z=2
PASS: gdb.base/whatis-exp.exp: set variable w=3
PASS: gdb.base/whatis-exp.exp: print value of x
PASS: gdb.base/whatis-exp.exp: print value of y
PASS: gdb.base/whatis-exp.exp: print value of z
PASS: gdb.base/whatis-exp.exp: print value of w
PASS: gdb.base/whatis-exp.exp: whatis value of x+y
PASS: gdb.base/whatis-exp.exp: whatis value of x-y
PASS: gdb.base/whatis-exp.exp: whatis value of x*y
PASS: gdb.base/whatis-exp.exp: whatis value of x/y
PASS: gdb.base/whatis-exp.exp: whatis value of x%y
PASS: gdb.base/whatis-exp.exp: whatis value of x=y
PASS: gdb.base/whatis-exp.exp: whatis value of x+=2
PASS: gdb.base/whatis-exp.exp: whatis value of  ++x
PASS: gdb.base/whatis-exp.exp: whatis value of  --x
PASS: gdb.base/whatis-exp.exp: whatis value of  x++
PASS: gdb.base/whatis-exp.exp: whatis value of  x--
Running ../../../gdb/testsuite/gdb.base/watch-read.exp ...
Running ../../../gdb/testsuite/gdb.base/hbreak2.exp ...
UNSUPPORTED: gdb.base/hbreak2.exp: hardware breakpoints
Running ../../../gdb/testsuite/gdb.base/moribund-step.exp ...
PASS: gdb.base/moribund-step.exp: set non-stop on
PASS: gdb.base/moribund-step.exp: step
Running ../../../gdb/testsuite/gdb.base/structs3.exp ...
PASS: gdb.base/structs3.exp: print two
PASS: gdb.base/structs3.exp: print *twop
PASS: gdb.base/structs3.exp: print *(struct Two *)onep
PASS: gdb.base/structs3.exp: print *(tTwo *)onep
Running ../../../gdb/testsuite/gdb.base/debug-expr.exp ...
PASS: gdb.base/debug-expr.exp: set variable array[0] = 0
PASS: gdb.base/debug-expr.exp: set variable array[1] = 1
PASS: gdb.base/debug-expr.exp: set variable array[2] = 2
PASS: gdb.base/debug-expr.exp: set variable array[3] = 3
PASS: gdb.base/debug-expr.exp: set debug expression 1
PASS: gdb.base/debug-expr.exp: print /x {char[4]} array
PASS: gdb.base/debug-expr.exp: String evaluation with debug expr
Running ../../../gdb/testsuite/gdb.base/noreturn-return.exp ...
PASS: gdb.base/noreturn-return.exp: continue to breakpoint: noreturn_func
PASS: gdb.base/noreturn-return.exp: cancel return from noreturn_func
Running ../../../gdb/testsuite/gdb.base/finish.exp ...
PASS: gdb.base/finish.exp: set break on void_func
PASS: gdb.base/finish.exp: continue to void_func
PASS: gdb.base/finish.exp: finish from void_func
PASS: gdb.base/finish.exp: set break on char_func
PASS: gdb.base/finish.exp: continue to char_func
PASS: gdb.base/finish.exp: finish from char_func
PASS: gdb.base/finish.exp: set break on short_func
PASS: gdb.base/finish.exp: continue to short_func
PASS: gdb.base/finish.exp: finish from short_func
PASS: gdb.base/finish.exp: set break on int_func
PASS: gdb.base/finish.exp: continue to int_func
PASS: gdb.base/finish.exp: finish from int_func
PASS: gdb.base/finish.exp: set break on long_func
PASS: gdb.base/finish.exp: continue to long_func
PASS: gdb.base/finish.exp: finish from long_func
PASS: gdb.base/finish.exp: set break on long_long_func
PASS: gdb.base/finish.exp: continue to long_long_func
PASS: gdb.base/finish.exp: finish from long_long_func
PASS: gdb.base/finish.exp: set break on float_func
PASS: gdb.base/finish.exp: continue to float_func
PASS: gdb.base/finish.exp: finish from float_func
PASS: gdb.base/finish.exp: set break on double_func
PASS: gdb.base/finish.exp: continue to double_func
PASS: gdb.base/finish.exp: finish from double_func
PASS: gdb.base/finish.exp: Testing the "fin" abbreviation for "finish"
Running ../../../gdb/testsuite/gdb.base/eval-skip.exp ...
PASS: gdb.base/eval-skip.exp: set variable x=14
PASS: gdb.base/eval-skip.exp: set variable y=2
PASS: gdb.base/eval-skip.exp: set variable z=2
PASS: gdb.base/eval-skip.exp: set variable w=3
PASS: gdb.base/eval-skip.exp: print value of (0 && (x+y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x-y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x*y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x/y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x%y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x&&y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x||y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x&y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x|y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x^y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x < y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x <= y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x>y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x>=y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x==y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x!=y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x<<31))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x>>31))
PASS: gdb.base/eval-skip.exp: print value of (0 && (!x))
PASS: gdb.base/eval-skip.exp: print value of (0 && (~x))
PASS: gdb.base/eval-skip.exp: print value of (0 && (-x))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x++))
PASS: gdb.base/eval-skip.exp: print value of (0 && (++x))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x--))
PASS: gdb.base/eval-skip.exp: print value of (0 && (--x))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x+=7))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x=y))
Running ../../../gdb/testsuite/gdb.base/break-fun-addr.exp ...
PASS: gdb.base/break-fun-addr.exp: /work1-hdd/tools_master/gdb/k1_build_gdb_x86/gdb/testsuite/outputs/gdb.base/break-fun-addr/break-fun-addr1: break *main
PASS: gdb.base/break-fun-addr.exp: /work1-hdd/tools_master/gdb/k1_build_gdb_x86/gdb/testsuite/outputs/gdb.base/break-fun-addr/break-fun-addr1: run to breakpoint at *main
PASS: gdb.base/break-fun-addr.exp: /work1-hdd/tools_master/gdb/k1_build_gdb_x86/gdb/testsuite/outputs/gdb.base/break-fun-addr/break-fun-addr1: p $pc == main
PASS: gdb.base/break-fun-addr.exp: /work1-hdd/tools_master/gdb/k1_build_gdb_x86/gdb/testsuite/outputs/gdb.base/break-fun-addr/break-fun-addr2: run to breakpoint at *main
PASS: gdb.base/break-fun-addr.exp: /work1-hdd/tools_master/gdb/k1_build_gdb_x86/gdb/testsuite/outputs/gdb.base/break-fun-addr/break-fun-addr2: p $pc == main
Running ../../../gdb/testsuite/gdb.base/default.exp ...
PASS: gdb.base/default.exp: add-symbol-file
PASS: gdb.base/default.exp: append
PASS: gdb.base/default.exp: append binary
PASS: gdb.base/default.exp: append memory
PASS: gdb.base/default.exp: append value
PASS: gdb.base/default.exp: append binary memory
PASS: gdb.base/default.exp: append binary value
WARNING: Skipping backtrace and break tests because of GDB stub.
PASS: gdb.base/default.exp: continue
PASS: gdb.base/default.exp: continue "c" abbreviation
PASS: gdb.base/default.exp: call
PASS: gdb.base/default.exp: catch
PASS: gdb.base/default.exp: cd
PASS: gdb.base/default.exp: clear
PASS: gdb.base/default.exp: commands
PASS: gdb.base/default.exp: condition
PASS: gdb.base/default.exp: core-file
PASS: gdb.base/default.exp: delete "d" abbreviation
PASS: gdb.base/default.exp: delete
PASS: gdb.base/default.exp: define
PASS: gdb.base/default.exp: delete breakpoints
PASS: gdb.base/default.exp: delete display prompt
PASS: gdb.base/default.exp: detach
PASS: gdb.base/default.exp: directory prompt
PASS: gdb.base/default.exp: disable "dis" abbreviation
PASS: gdb.base/default.exp: disable "disa" abbreviation
PASS: gdb.base/default.exp: disable
PASS: gdb.base/default.exp: disable breakpoints
PASS: gdb.base/default.exp: disable display
PASS: gdb.base/default.exp: disassemble
PASS: gdb.base/default.exp: display
PASS: gdb.base/default.exp: do
PASS: gdb.base/default.exp: document
PASS: gdb.base/default.exp: down
PASS: gdb.base/default.exp: down-silently
PASS: gdb.base/default.exp: dump
PASS: gdb.base/default.exp: dump binary
PASS: gdb.base/default.exp: dump ihex
PASS: gdb.base/default.exp: dump memory
PASS: gdb.base/default.exp: dump srec
PASS: gdb.base/default.exp: dump tekhex
PASS: gdb.base/default.exp: dump value
PASS: gdb.base/default.exp: dump binary memory
PASS: gdb.base/default.exp: dump binary value
PASS: gdb.base/default.exp: dump ihex memory
PASS: gdb.base/default.exp: dump ihex value
PASS: gdb.base/default.exp: dump srec memory
PASS: gdb.base/default.exp: dump srec value
PASS: gdb.base/default.exp: dump tekhex memory
PASS: gdb.base/default.exp: dump tekhex value
PASS: gdb.base/default.exp: echo
PASS: gdb.base/default.exp: enable breakpoints delete
PASS: gdb.base/default.exp: enable breakpoints once
PASS: gdb.base/default.exp: enable breakpoints
PASS: gdb.base/default.exp: enable delete
PASS: gdb.base/default.exp: enable display
PASS: gdb.base/default.exp: enable once
PASS: gdb.base/default.exp: enable
PASS: gdb.base/default.exp: exec-file
PASS: gdb.base/default.exp: frame "f" abbreviation
PASS: gdb.base/default.exp: frame
PASS: gdb.base/default.exp: fg
PASS: gdb.base/default.exp: file
PASS: gdb.base/default.exp: finish
PASS: gdb.base/default.exp: forward-search
PASS: gdb.base/default.exp: gcore
PASS: gdb.base/default.exp: generate-core-file
PASS: gdb.base/default.exp: help "h" abbreviation
PASS: gdb.base/default.exp: help
PASS: gdb.base/default.exp: handle
PASS: gdb.base/default.exp: info "i" abbreviation
PASS: gdb.base/default.exp: info
PASS: gdb.base/default.exp: ignore
PASS: gdb.base/default.exp: info address
PASS: gdb.base/default.exp: info all-registers
PASS: gdb.base/default.exp: info args
PASS: gdb.base/default.exp: info bogus-gdb-command
PASS: gdb.base/default.exp: info breakpoints
PASS: gdb.base/default.exp: info copying
PASS: gdb.base/default.exp: info display
PASS: gdb.base/default.exp: info frame "f" abbreviation
PASS: gdb.base/default.exp: info frame
PASS: gdb.base/default.exp: info files
PASS: gdb.base/default.exp: info float
PASS: gdb.base/default.exp: info functions
PASS: gdb.base/default.exp: info locals
PASS: gdb.base/default.exp: info program
PASS: gdb.base/default.exp: info registers
PASS: gdb.base/default.exp: info stack "s" abbreviation
PASS: gdb.base/default.exp: info stack
PASS: gdb.base/default.exp: info set
PASS: gdb.base/default.exp: info symbol
PASS: gdb.base/default.exp: info source
PASS: gdb.base/default.exp: info sources
PASS: gdb.base/default.exp: info target
PASS: gdb.base/default.exp: info terminal
PASS: gdb.base/default.exp: info threads
PASS: gdb.base/default.exp: info types
PASS: gdb.base/default.exp: info variables
PASS: gdb.base/default.exp: info vector
PASS: gdb.base/default.exp: info warranty
PASS: gdb.base/default.exp: info watchpoints
PASS: gdb.base/default.exp: inspect
PASS: gdb.base/default.exp: jump
PASS: gdb.base/default.exp: kill
PASS: gdb.base/default.exp: list "l" abbreviation
PASS: gdb.base/default.exp: list
PASS: gdb.base/default.exp: load
PASS: gdb.base/default.exp: next "n" abbreviation
PASS: gdb.base/default.exp: next
PASS: gdb.base/default.exp: nexti "ni" abbreviation
PASS: gdb.base/default.exp: nexti
PASS: gdb.base/default.exp: output
PASS: gdb.base/default.exp: overlay
PASS: gdb.base/default.exp: overlay on
PASS: gdb.base/default.exp: overlay manual #1
PASS: gdb.base/default.exp: overlay auto
PASS: gdb.base/default.exp: overlay off
PASS: gdb.base/default.exp: overlay list
PASS: gdb.base/default.exp: overlay map #1
PASS: gdb.base/default.exp: overlay unmap #1
PASS: gdb.base/default.exp: overlay manual #2
PASS: gdb.base/default.exp: overlay map #2
PASS: gdb.base/default.exp: overlay unmap #2
PASS: gdb.base/default.exp: print "p" abbreviation
PASS: gdb.base/default.exp: print
PASS: gdb.base/default.exp: printf
PASS: gdb.base/default.exp: ptype
PASS: gdb.base/default.exp: pwd
PASS: gdb.base/default.exp: rbreak
PASS: gdb.base/default.exp: restore
PASS: gdb.base/default.exp: return
PASS: gdb.base/default.exp: reverse-search
PASS: gdb.base/default.exp: step "s" abbreviation #1
PASS: gdb.base/default.exp: step #1
PASS: gdb.base/default.exp: search
PASS: gdb.base/default.exp: section
PASS: gdb.base/default.exp: set annotate
PASS: gdb.base/default.exp: set args
PASS: gdb.base/default.exp: set check "c" abbreviation
PASS: gdb.base/default.exp: set check "ch" abbreviation
PASS: gdb.base/default.exp: set check "check" abbreviation
PASS: gdb.base/default.exp: set check range
PASS: gdb.base/default.exp: set check type
PASS: gdb.base/default.exp: set complaints
PASS: gdb.base/default.exp: set confirm
PASS: gdb.base/default.exp: set environment
PASS: gdb.base/default.exp: set height
PASS: gdb.base/default.exp: set history expansion
PASS: gdb.base/default.exp: set history filename
PASS: gdb.base/default.exp: set the history filename
PASS: gdb.base/default.exp: set history save
PASS: gdb.base/default.exp: set history size
PASS: gdb.base/default.exp: set history
PASS: gdb.base/default.exp: set language
PASS: gdb.base/default.exp: set listsize
PASS: gdb.base/default.exp: set print "p" abbreviation
PASS: gdb.base/default.exp: set print "pr" abbreviation
PASS: gdb.base/default.exp: set print
PASS: gdb.base/default.exp: set print address
PASS: gdb.base/default.exp: set print array
PASS: gdb.base/default.exp: set print asm-demangle
PASS: gdb.base/default.exp: set print demangle
PASS: gdb.base/default.exp: set print elements
PASS: gdb.base/default.exp: set print object
PASS: gdb.base/default.exp: set print pretty
PASS: gdb.base/default.exp: set print sevenbit-strings
PASS: gdb.base/default.exp: set print union
PASS: gdb.base/default.exp: set print vtbl
PASS: gdb.base/default.exp: set radix
PASS: gdb.base/default.exp: set variable
PASS: gdb.base/default.exp: set verbose
PASS: gdb.base/default.exp: set width
PASS: gdb.base/default.exp: set write
PASS: gdb.base/default.exp: set
PASS: gdb.base/default.exp: shell echo Hi dad!
PASS: gdb.base/default.exp: show annotate
PASS: gdb.base/default.exp: show args
PASS: gdb.base/default.exp: show check "c" abbreviation
PASS: gdb.base/default.exp: show check "ch" abbreviation
PASS: gdb.base/default.exp: show check "check" abbreviation
PASS: gdb.base/default.exp: show check range
PASS: gdb.base/default.exp: show check type
PASS: gdb.base/default.exp: show commands
PASS: gdb.base/default.exp: show complaints
PASS: gdb.base/default.exp: show confirm
UNSUPPORTED: gdb.base/default.exp: Python support is disabled.
PASS: gdb.base/default.exp: show convenience
PASS: gdb.base/default.exp: show directories
PASS: gdb.base/default.exp: show editing
PASS: gdb.base/default.exp: show height
PASS: gdb.base/default.exp: show history expansion
PASS: gdb.base/default.exp: show history filename
PASS: gdb.base/default.exp: show history save
PASS: gdb.base/default.exp: show history size
PASS: gdb.base/default.exp: show history
PASS: gdb.base/default.exp: show language
PASS: gdb.base/default.exp: show listsize
PASS: gdb.base/default.exp: show p
PASS: gdb.base/default.exp: show pr
PASS: gdb.base/default.exp: show print
PASS: gdb.base/default.exp: show paths
PASS: gdb.base/default.exp: show print address
PASS: gdb.base/default.exp: show print array
PASS: gdb.base/default.exp: show print asm-demangle
PASS: gdb.base/default.exp: show print demangle
PASS: gdb.base/default.exp: show print elements
PASS: gdb.base/default.exp: show print object
PASS: gdb.base/default.exp: show print pretty
PASS: gdb.base/default.exp: show print sevenbit-strings
PASS: gdb.base/default.exp: show print union
PASS: gdb.base/default.exp: show print vtbl
PASS: gdb.base/default.exp: show prompt
PASS: gdb.base/default.exp: show radix
PASS: gdb.base/default.exp: show user
PASS: gdb.base/default.exp: show values
PASS: gdb.base/default.exp: show verbose
PASS: gdb.base/default.exp: show version
PASS: gdb.base/default.exp: show width
PASS: gdb.base/default.exp: show write
PASS: gdb.base/default.exp: show
PASS: gdb.base/default.exp: set history save off
PASS: gdb.base/default.exp: stepi "si" abbreviation
PASS: gdb.base/default.exp: stepi
PASS: gdb.base/default.exp: signal
PASS: gdb.base/default.exp: source
PASS: gdb.base/default.exp: step "s" abbreviation #2
PASS: gdb.base/default.exp: step #2
PASS: gdb.base/default.exp: symbol-file
PASS: gdb.base/default.exp: target native
PASS: gdb.base/default.exp: target core
PASS: gdb.base/default.exp: target exec
PASS: gdb.base/default.exp: target remote
PASS: gdb.base/default.exp: target
PASS: gdb.base/default.exp: tbreak
PASS: gdb.base/default.exp: thread
PASS: gdb.base/default.exp: thread apply
PASS: gdb.base/default.exp: thread find
PASS: gdb.base/default.exp: thread name
PASS: gdb.base/default.exp: tty
PASS: gdb.base/default.exp: until "u" abbreviation
PASS: gdb.base/default.exp: until
PASS: gdb.base/default.exp: undisplay prompt
PASS: gdb.base/default.exp: unset environment prompt
PASS: gdb.base/default.exp: unset
PASS: gdb.base/default.exp: up-silently
PASS: gdb.base/default.exp: watch
PASS: gdb.base/default.exp: whatis
PASS: gdb.base/default.exp: where
PASS: gdb.base/default.exp: x
Running ../../../gdb/testsuite/gdb.base/corefile.exp ...
Running ../../../gdb/testsuite/gdb.base/dprintf.exp ...
PASS: gdb.base/dprintf.exp: dprintf
PASS: gdb.base/dprintf.exp: dprintf foo
PASS: gdb.base/dprintf.exp: dprintf 29
PASS: gdb.base/dprintf.exp: dprintf foo,"At foo entry\n"
PASS: gdb.base/dprintf.exp: ignore $bpnum 1
PASS: gdb.base/dprintf.exp: dprintf 28,"arg=%d, g=%d\n", arg, g
PASS: gdb.base/dprintf.exp: dprintf info 1
PASS: gdb.base/dprintf.exp: break 29
PASS: gdb.base/dprintf.exp: 1st dprintf, gdb
PASS: gdb.base/dprintf.exp: 2nd dprintf, gdb
PASS: gdb.base/dprintf.exp: agent: dprintf foo,"At foo entry\n"
PASS: gdb.base/dprintf.exp: agent: dprintf 28,"arg=%d, g=%d\n", arg, g
PASS: gdb.base/dprintf.exp: agent: break 29
UNSUPPORTED: gdb.base/dprintf.exp: agent: set dprintf style to agent
PASS: gdb.base/dprintf.exp: Set dprintf style to an unrecognized type
PASS: gdb.base/dprintf.exp: probe for target remote
PASS: gdb.base/dprintf.exp: set remote breakpoint-commands-packet off
PASS: gdb.base/dprintf.exp: set dprintf-style agent, with feature disabled
Running ../../../gdb/testsuite/gdb.base/info-os.exp ...
UNSUPPORTED: gdb.base/info-os.exp: info-os.exp
Running ../../../gdb/testsuite/gdb.base/step-symless.exp ...
PASS: gdb.base/step-symless.exp: strip stub symbols
FAIL: gdb.base/step-symless.exp: step
Running ../../../gdb/testsuite/gdb.base/vdso-warning.exp ...
PASS: gdb.base/vdso-warning.exp: set environment LD_DEBUG=unused
FAIL: gdb.base/vdso-warning.exp: stop without warning
PASS: gdb.base/vdso-warning.exp: no vdso without symbols is listed
Running ../../../gdb/testsuite/gdb.base/dprintf-non-stop.exp ...
UNSUPPORTED: gdb.base/dprintf-non-stop.exp: Testing dprintf with remote/non-stop is not supported.
Running ../../../gdb/testsuite/gdb.base/define.exp ...
PASS: gdb.base/define.exp: define user command: nextwhere
PASS: gdb.base/define.exp: use user command: nextwhere
PASS: gdb.base/define.exp: define user command: nextwh
PASS: gdb.base/define.exp: redefine user command aborted: nextwhere
PASS: gdb.base/define.exp: redefine user command: nextwhere
PASS: gdb.base/define.exp: redocumenting builtin command disallowed
PASS: gdb.base/define.exp: document user command: nextwhere
PASS: gdb.base/define.exp: re-document user command: nextwhere
PASS: gdb.base/define.exp: help user command: nextwhere
PASS: gdb.base/define.exp: set up whitespace in help string
PASS: gdb.base/define.exp: preserve whitespace in help string
PASS: gdb.base/define.exp: define user command: ifnospace
PASS: gdb.base/define.exp: test ifnospace is parsed correctly
PASS: gdb.base/define.exp: define user command: whilenospace
PASS: gdb.base/define.exp: test whilenospace is parsed correctly
PASS: gdb.base/define.exp: define user command: user-bt
PASS: gdb.base/define.exp: define hook-stop command
PASS: gdb.base/define.exp: use hook-stop command
PASS: gdb.base/define.exp: define hook undefined command aborted: bar
PASS: gdb.base/define.exp: define hook undefined command: bar
PASS: gdb.base/define.exp: define target testsuite
PASS: gdb.base/define.exp: document target testsuite
PASS: gdb.base/define.exp: help target
PASS: gdb.base/define.exp: target testsuite
PASS: gdb.base/define.exp: show user target testsuite
PASS: gdb.base/define.exp: define target hook-testsuite
PASS: gdb.base/define.exp: define target hookpost-testsuite
PASS: gdb.base/define.exp: target testsuite with hooks
PASS: gdb.base/define.exp: set gdb_prompt
PASS: gdb.base/define.exp: reset gdb_prompt
Running ../../../gdb/testsuite/gdb.base/break-caller-line.exp ...
PASS: gdb.base/break-caller-line.exp: up
PASS: gdb.base/break-caller-line.exp: info line *$pc
PASS: gdb.base/break-caller-line.exp: break
Running ../../../gdb/testsuite/gdb.base/realname-expand.exp ...
PASS: gdb.base/realname-expand.exp: set basenames-may-differ on
PASS: gdb.base/realname-expand.exp: rbreak realname-expand-real.c:func
PASS: gdb.base/realname-expand.exp: set basenames-may-differ on
PASS: gdb.base/realname-expand.exp: break realname-expand-real.c:func
Running ../../../gdb/testsuite/gdb.base/break-idempotent.exp ...
PASS: gdb.base/break-idempotent.exp: always-inserted off: break: set breakpoint always-inserted off
PASS: gdb.base/break-idempotent.exp: always-inserted off: break: once: break foo
PASS: gdb.base/break-idempotent.exp: always-inserted off: break: twice: break foo
PASS: gdb.base/break-idempotent.exp: always-inserted off: break: file $binfile
PASS: gdb.base/break-idempotent.exp: always-inserted off: break: condition $bpnum cond_global == 0
PASS: gdb.base/break-idempotent.exp: always-inserted off: break: b bar
PASS: gdb.base/break-idempotent.exp: always-inserted off: break: continue
PASS: gdb.base/break-idempotent.exp: always-inserted on: break: set breakpoint always-inserted on
PASS: gdb.base/break-idempotent.exp: always-inserted on: break: once: break foo
PASS: gdb.base/break-idempotent.exp: always-inserted on: break: twice: break foo
PASS: gdb.base/break-idempotent.exp: always-inserted on: break: file $binfile
PASS: gdb.base/break-idempotent.exp: always-inserted on: break: condition $bpnum cond_global == 0
PASS: gdb.base/break-idempotent.exp: always-inserted on: break: b bar
PASS: gdb.base/break-idempotent.exp: always-inserted on: break: continue
Running ../../../gdb/testsuite/gdb.base/break.exp ...
PASS: gdb.base/break.exp: Delete all breakpoints when none
PASS: gdb.base/break.exp: breakpoint function
PASS: gdb.base/break.exp: breakpoint quoted function
PASS: gdb.base/break.exp: breakpoint function in file
PASS: gdb.base/break.exp: use `list' to establish default source file
PASS: gdb.base/break.exp: breakpoint line number
PASS: gdb.base/break.exp: breakpoint duplicate
PASS: gdb.base/break.exp: breakpoint line number in file
PASS: gdb.base/break.exp: breakpoint at start of multi line if conditional
PASS: gdb.base/break.exp: breakpoint at start of multi line while conditional
PASS: gdb.base/break.exp: breakpoint info
PASS: gdb.base/break.exp: info break 2 4 6
PASS: gdb.base/break.exp: info break 3-5
PASS: gdb.base/break.exp: disable using history values
PASS: gdb.base/break.exp: check disable with history values
PASS: gdb.base/break.exp: disable with convenience values
PASS: gdb.base/break.exp: check disable with convenience values
PASS: gdb.base/break.exp: disable non-existent breakpoint 10
PASS: gdb.base/break.exp: set $baz = 1.234
PASS: gdb.base/break.exp: disable with non-integer convenience var
PASS: gdb.base/break.exp: disable with non-existent convenience var
PASS: gdb.base/break.exp: disable with non-existent history value
PASS: gdb.base/break.exp: disable with badly formed history value
PASS: gdb.base/break.exp: run until function breakpoint
PASS: gdb.base/break.exp: list marker1
PASS: gdb.base/break.exp: break lineno
PASS: gdb.base/break.exp: delete $bpnum
PASS: gdb.base/break.exp: run until breakpoint set at a line number
PASS: gdb.base/break.exp: run until file:function(6) breakpoint
PASS: gdb.base/break.exp: run until file:function(5) breakpoint
PASS: gdb.base/break.exp: run until file:function(4) breakpoint
PASS: gdb.base/break.exp: run until file:function(3) breakpoint
PASS: gdb.base/break.exp: run until file:function(2) breakpoint
PASS: gdb.base/break.exp: run until file:function(1) breakpoint
PASS: gdb.base/break.exp: run until quoted breakpoint
PASS: gdb.base/break.exp: run until file:linenum breakpoint
PASS: gdb.base/break.exp: breakpoint offset +1
PASS: gdb.base/break.exp: step onto breakpoint
PASS: gdb.base/break.exp: setting breakpoint at }
PASS: gdb.base/break.exp: continue to breakpoint at }
PASS: gdb.base/break.exp: Temporary breakpoint function
PASS: gdb.base/break.exp: Temporary breakpoint function in file
PASS: gdb.base/break.exp: Temporary breakpoint line number #1
PASS: gdb.base/break.exp: Temporary breakpoint line number #2
PASS: gdb.base/break.exp: Temporary breakpoint line number in file #1
PASS: gdb.base/break.exp: Temporary breakpoint line number in file #2
PASS: gdb.base/break.exp: Temporary breakpoint info
PASS: gdb.base/break.exp: catch requires an event name
PASS: gdb.base/break.exp: set catch fork, never expected to trigger
PASS: gdb.base/break.exp: set catch vfork, never expected to trigger
PASS: gdb.base/break.exp: set catch exec, never expected to trigger
PASS: gdb.base/break.exp: set breakpoint pending off
PASS: gdb.base/break.exp: break on non-existent source line
PASS: gdb.base/break.exp: until bp_location1
PASS: gdb.base/break.exp: break on default location, 1st time
PASS: gdb.base/break.exp: break on default location, 2nd time
PASS: gdb.base/break.exp: break on default location, 3rd time
PASS: gdb.base/break.exp: break on default location, 4th time
PASS: gdb.base/break.exp: set to-be-silent break bp_location1
PASS: gdb.base/break.exp: set silent break bp_location1
PASS: gdb.base/break.exp: info silent break bp_location1
PASS: gdb.base/break.exp: hit silent break bp_location1
PASS: gdb.base/break.exp: stopped for silent break bp_location1
PASS: gdb.base/break.exp: thread-specific breakpoint on non-existent thread disallowed
PASS: gdb.base/break.exp: thread-specific breakpoint on bogus thread ID disallowed
PASS: gdb.base/break.exp: breakpoint with trailing garbage disallowed
PASS: gdb.base/break.exp: step over breakpoint
PASS: gdb.base/break.exp: clear line has no breakpoint disallowed
PASS: gdb.base/break.exp: clear current line has no breakpoint disallowed
PASS: gdb.base/break.exp: break marker3 #1
PASS: gdb.base/break.exp: break marker3 #2
PASS: gdb.base/break.exp: clear marker3
PASS: gdb.base/break.exp: set convenience variable $foo to bp_location11
PASS: gdb.base/break.exp: set breakpoint via convenience variable
PASS: gdb.base/break.exp: set convenience variable $foo to 81.5
PASS: gdb.base/break.exp: set breakpoint via non-integer convenience variable disallowed
PASS: gdb.base/break.exp: set breakpoint on to-be-called function
PASS: gdb.base/break.exp: hit breakpoint on called function
PASS: gdb.base/break.exp: backtrace while in called function
PASS: gdb.base/break.exp: finish from called function
PASS: gdb.base/break.exp: finish with arguments disallowed
PASS: gdb.base/break.exp: finish from outermost frame disallowed
PASS: gdb.base/break.exp: kill program
PASS: gdb.base/break.exp: break at factorial
PASS: gdb.base/break.exp: run to factorial(6)
PASS: gdb.base/break.exp: continue to factorial(5)
PASS: gdb.base/break.exp: backtrace from factorial(5)
PASS: gdb.base/break.exp: next to recursive call
PASS: gdb.base/break.exp: next over recursive call
PASS: gdb.base/break.exp: backtrace from factorial(5.1)
PASS: gdb.base/break.exp: continue until exit at recursive next test
PASS: gdb.base/break.exp: breakpoint function, optimized file
PASS: gdb.base/break.exp: breakpoint small function, optimized file
PASS: gdb.base/break.exp: run until function breakpoint, optimized file
PASS: gdb.base/break.exp: run until breakpoint set at small function, optimized file (line bp_location14)
PASS: gdb.base/break.exp: rbreak junk pending setup
PASS: gdb.base/break.exp: rbreak junk set breakpoint
PASS: gdb.base/break.exp: rbreak junk
PASS: gdb.base/break.exp: set $l = 47
PASS: gdb.base/break.exp: set convenience variable $foo to 81.5
PASS: gdb.base/break.exp: set breakpoint via non-integer convenience variable disallowed
Running ../../../gdb/testsuite/gdb.base/dprintf-pending.exp ...
Running ../../../gdb/testsuite/gdb.base/watchpoint-reuse-slot.exp ...
PASS: gdb.base/watchpoint-reuse-slot.exp: continue to breakpoint: stepi line
PASS: gdb.base/watchpoint-reuse-slot.exp: set breakpoint always-inserted on
PASS: gdb.base/watchpoint-reuse-slot.exp: watch
UNSUPPORTED: gdb.base/watchpoint-reuse-slot.exp: awatch
PASS: gdb.base/watchpoint-reuse-slot.exp: rwatch
UNSUPPORTED: gdb.base/watchpoint-reuse-slot.exp: hbreak
PASS: gdb.base/watchpoint-reuse-slot.exp: get PC
PASS: gdb.base/watchpoint-reuse-slot.exp: set breakpoint always-inserted off
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 1, iter 0: base + 0: watch *(buf.byte + 0 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 1, iter 0: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 1, iter 0: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 1, iter 0: base + 1: watch *(buf.byte + 0 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 1, iter 0: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 1, iter 0: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 1, iter 1: base + 0: watch *(buf.byte + 1 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 1, iter 1: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 1, iter 1: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 1, iter 1: base + 1: watch *(buf.byte + 1 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 1, iter 1: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 1, iter 1: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 1, iter 2: base + 0: watch *(buf.byte + 2 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 1, iter 2: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 1, iter 2: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 1, iter 2: base + 1: watch *(buf.byte + 2 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 1, iter 2: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 1, iter 2: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 1, iter 3: base + 0: watch *(buf.byte + 3 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 1, iter 3: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 1, iter 3: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 1, iter 3: base + 1: watch *(buf.byte + 3 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 1, iter 3: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 1, iter 3: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 2, iter 0: base + 0: watch *(buf.byte + 0 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 2, iter 0: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 2, iter 0: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 2, iter 0: base + 1: watch *(buf.byte + 0 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 2, iter 0: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 2, iter 0: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 2, iter 1: base + 0: watch *(buf.byte + 1 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 2, iter 1: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 2, iter 1: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 2, iter 1: base + 1: watch *(buf.byte + 1 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 2, iter 1: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 2, iter 1: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 2, iter 2: base + 0: watch *(buf.byte + 2 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 2, iter 2: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 2, iter 2: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 2, iter 2: base + 1: watch *(buf.byte + 2 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 2, iter 2: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 2, iter 2: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 2, iter 3: base + 0: watch *(buf.byte + 3 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 2, iter 3: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 2, iter 3: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 2, iter 3: base + 1: watch *(buf.byte + 3 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 2, iter 3: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 2, iter 3: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 3, iter 0: base + 0: watch *(buf.byte + 0 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 3, iter 0: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 3, iter 0: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 3, iter 0: base + 1: watch *(buf.byte + 0 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 3, iter 0: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 3, iter 0: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 3, iter 1: base + 0: watch *(buf.byte + 1 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 3, iter 1: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 3, iter 1: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 3, iter 1: base + 1: watch *(buf.byte + 1 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 3, iter 1: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 3, iter 1: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 3, iter 2: base + 0: watch *(buf.byte + 2 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 3, iter 2: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 3, iter 2: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 3, iter 2: base + 1: watch *(buf.byte + 2 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 3, iter 2: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 3, iter 2: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 3, iter 3: base + 0: watch *(buf.byte + 3 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 3, iter 3: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 3, iter 3: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 3, iter 3: base + 1: watch *(buf.byte + 3 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 3, iter 3: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x watch: : width 3, iter 3: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 1, iter 0: base + 0: watch *(buf.byte + 0 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 1, iter 0: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 1, iter 0: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 1, iter 0: base + 1: rwatch *(buf.byte + 0 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 1, iter 0: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 1, iter 0: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 1, iter 1: base + 0: watch *(buf.byte + 1 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 1, iter 1: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 1, iter 1: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 1, iter 1: base + 1: rwatch *(buf.byte + 1 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 1, iter 1: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 1, iter 1: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 1, iter 2: base + 0: watch *(buf.byte + 2 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 1, iter 2: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 1, iter 2: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 1, iter 2: base + 1: rwatch *(buf.byte + 2 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 1, iter 2: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 1, iter 2: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 1, iter 3: base + 0: watch *(buf.byte + 3 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 1, iter 3: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 1, iter 3: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 1, iter 3: base + 1: rwatch *(buf.byte + 3 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 1, iter 3: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 1, iter 3: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 2, iter 0: base + 0: watch *(buf.byte + 0 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 2, iter 0: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 2, iter 0: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 2, iter 0: base + 1: rwatch *(buf.byte + 0 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 2, iter 0: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 2, iter 0: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 2, iter 1: base + 0: watch *(buf.byte + 1 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 2, iter 1: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 2, iter 1: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 2, iter 1: base + 1: rwatch *(buf.byte + 1 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 2, iter 1: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 2, iter 1: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 2, iter 2: base + 0: watch *(buf.byte + 2 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 2, iter 2: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 2, iter 2: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 2, iter 2: base + 1: rwatch *(buf.byte + 2 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 2, iter 2: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 2, iter 2: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 2, iter 3: base + 0: watch *(buf.byte + 3 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 2, iter 3: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 2, iter 3: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 2, iter 3: base + 1: rwatch *(buf.byte + 3 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 2, iter 3: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 2, iter 3: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 3, iter 0: base + 0: watch *(buf.byte + 0 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 3, iter 0: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 3, iter 0: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 3, iter 0: base + 1: rwatch *(buf.byte + 0 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 3, iter 0: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 3, iter 0: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 3, iter 1: base + 0: watch *(buf.byte + 1 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 3, iter 1: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 3, iter 1: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 3, iter 1: base + 1: rwatch *(buf.byte + 1 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 3, iter 1: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 3, iter 1: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 3, iter 2: base + 0: watch *(buf.byte + 2 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 3, iter 2: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 3, iter 2: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 3, iter 2: base + 1: rwatch *(buf.byte + 2 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 3, iter 2: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 3, iter 2: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 3, iter 3: base + 0: watch *(buf.byte + 3 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 3, iter 3: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 3, iter 3: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 3, iter 3: base + 1: rwatch *(buf.byte + 3 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 3, iter 3: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: watch x rwatch: : width 3, iter 3: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 1, iter 0: base + 0: rwatch *(buf.byte + 0 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 1, iter 0: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 1, iter 0: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 1, iter 0: base + 1: watch *(buf.byte + 0 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 1, iter 0: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 1, iter 0: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 1, iter 1: base + 0: rwatch *(buf.byte + 1 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 1, iter 1: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 1, iter 1: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 1, iter 1: base + 1: watch *(buf.byte + 1 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 1, iter 1: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 1, iter 1: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 1, iter 2: base + 0: rwatch *(buf.byte + 2 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 1, iter 2: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 1, iter 2: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 1, iter 2: base + 1: watch *(buf.byte + 2 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 1, iter 2: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 1, iter 2: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 1, iter 3: base + 0: rwatch *(buf.byte + 3 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 1, iter 3: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 1, iter 3: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 1, iter 3: base + 1: watch *(buf.byte + 3 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 1, iter 3: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 1, iter 3: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 2, iter 0: base + 0: rwatch *(buf.byte + 0 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 2, iter 0: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 2, iter 0: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 2, iter 0: base + 1: watch *(buf.byte + 0 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 2, iter 0: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 2, iter 0: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 2, iter 1: base + 0: rwatch *(buf.byte + 1 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 2, iter 1: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 2, iter 1: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 2, iter 1: base + 1: watch *(buf.byte + 1 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 2, iter 1: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 2, iter 1: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 2, iter 2: base + 0: rwatch *(buf.byte + 2 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 2, iter 2: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 2, iter 2: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 2, iter 2: base + 1: watch *(buf.byte + 2 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 2, iter 2: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 2, iter 2: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 2, iter 3: base + 0: rwatch *(buf.byte + 3 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 2, iter 3: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 2, iter 3: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 2, iter 3: base + 1: watch *(buf.byte + 3 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 2, iter 3: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 2, iter 3: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 3, iter 0: base + 0: rwatch *(buf.byte + 0 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 3, iter 0: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 3, iter 0: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 3, iter 0: base + 1: watch *(buf.byte + 0 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 3, iter 0: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 3, iter 0: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 3, iter 1: base + 0: rwatch *(buf.byte + 1 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 3, iter 1: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 3, iter 1: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 3, iter 1: base + 1: watch *(buf.byte + 1 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 3, iter 1: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 3, iter 1: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 3, iter 2: base + 0: rwatch *(buf.byte + 2 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 3, iter 2: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 3, iter 2: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 3, iter 2: base + 1: watch *(buf.byte + 2 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 3, iter 2: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 3, iter 2: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 3, iter 3: base + 0: rwatch *(buf.byte + 3 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 3, iter 3: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 3, iter 3: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 3, iter 3: base + 1: watch *(buf.byte + 3 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 3, iter 3: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x watch: : width 3, iter 3: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 1, iter 0: base + 0: rwatch *(buf.byte + 0 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 1, iter 0: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 1, iter 0: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 1, iter 0: base + 1: rwatch *(buf.byte + 0 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 1, iter 0: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 1, iter 0: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 1, iter 1: base + 0: rwatch *(buf.byte + 1 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 1, iter 1: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 1, iter 1: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 1, iter 1: base + 1: rwatch *(buf.byte + 1 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 1, iter 1: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 1, iter 1: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 1, iter 2: base + 0: rwatch *(buf.byte + 2 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 1, iter 2: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 1, iter 2: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 1, iter 2: base + 1: rwatch *(buf.byte + 2 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 1, iter 2: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 1, iter 2: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 1, iter 3: base + 0: rwatch *(buf.byte + 3 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 1, iter 3: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 1, iter 3: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 1, iter 3: base + 1: rwatch *(buf.byte + 3 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 1, iter 3: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 1, iter 3: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 2, iter 0: base + 0: rwatch *(buf.byte + 0 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 2, iter 0: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 2, iter 0: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 2, iter 0: base + 1: rwatch *(buf.byte + 0 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 2, iter 0: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 2, iter 0: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 2, iter 1: base + 0: rwatch *(buf.byte + 1 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 2, iter 1: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 2, iter 1: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 2, iter 1: base + 1: rwatch *(buf.byte + 1 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 2, iter 1: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 2, iter 1: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 2, iter 2: base + 0: rwatch *(buf.byte + 2 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 2, iter 2: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 2, iter 2: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 2, iter 2: base + 1: rwatch *(buf.byte + 2 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 2, iter 2: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 2, iter 2: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 2, iter 3: base + 0: rwatch *(buf.byte + 3 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 2, iter 3: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 2, iter 3: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 2, iter 3: base + 1: rwatch *(buf.byte + 3 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 2, iter 3: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 2, iter 3: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 3, iter 0: base + 0: rwatch *(buf.byte + 0 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 3, iter 0: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 3, iter 0: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 3, iter 0: base + 1: rwatch *(buf.byte + 0 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 3, iter 0: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 3, iter 0: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 3, iter 1: base + 0: rwatch *(buf.byte + 1 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 3, iter 1: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 3, iter 1: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 3, iter 1: base + 1: rwatch *(buf.byte + 1 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 3, iter 1: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 3, iter 1: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 3, iter 2: base + 0: rwatch *(buf.byte + 2 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 3, iter 2: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 3, iter 2: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 3, iter 2: base + 1: rwatch *(buf.byte + 2 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 3, iter 2: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 3, iter 2: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 3, iter 3: base + 0: rwatch *(buf.byte + 3 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 3, iter 3: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 3, iter 3: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 3, iter 3: base + 1: rwatch *(buf.byte + 3 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 3, iter 3: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted off: rwatch x rwatch: : width 3, iter 3: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: set breakpoint always-inserted on
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 1, iter 0: base + 0: watch *(buf.byte + 0 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 1, iter 0: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 1, iter 0: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 1, iter 0: base + 1: watch *(buf.byte + 0 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 1, iter 0: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 1, iter 0: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 1, iter 1: base + 0: watch *(buf.byte + 1 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 1, iter 1: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 1, iter 1: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 1, iter 1: base + 1: watch *(buf.byte + 1 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 1, iter 1: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 1, iter 1: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 1, iter 2: base + 0: watch *(buf.byte + 2 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 1, iter 2: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 1, iter 2: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 1, iter 2: base + 1: watch *(buf.byte + 2 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 1, iter 2: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 1, iter 2: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 1, iter 3: base + 0: watch *(buf.byte + 3 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 1, iter 3: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 1, iter 3: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 1, iter 3: base + 1: watch *(buf.byte + 3 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 1, iter 3: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 1, iter 3: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 2, iter 0: base + 0: watch *(buf.byte + 0 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 2, iter 0: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 2, iter 0: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 2, iter 0: base + 1: watch *(buf.byte + 0 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 2, iter 0: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 2, iter 0: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 2, iter 1: base + 0: watch *(buf.byte + 1 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 2, iter 1: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 2, iter 1: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 2, iter 1: base + 1: watch *(buf.byte + 1 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 2, iter 1: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 2, iter 1: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 2, iter 2: base + 0: watch *(buf.byte + 2 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 2, iter 2: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 2, iter 2: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 2, iter 2: base + 1: watch *(buf.byte + 2 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 2, iter 2: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 2, iter 2: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 2, iter 3: base + 0: watch *(buf.byte + 3 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 2, iter 3: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 2, iter 3: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 2, iter 3: base + 1: watch *(buf.byte + 3 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 2, iter 3: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 2, iter 3: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 3, iter 0: base + 0: watch *(buf.byte + 0 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 3, iter 0: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 3, iter 0: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 3, iter 0: base + 1: watch *(buf.byte + 0 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 3, iter 0: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 3, iter 0: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 3, iter 1: base + 0: watch *(buf.byte + 1 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 3, iter 1: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 3, iter 1: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 3, iter 1: base + 1: watch *(buf.byte + 1 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 3, iter 1: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 3, iter 1: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 3, iter 2: base + 0: watch *(buf.byte + 2 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 3, iter 2: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 3, iter 2: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 3, iter 2: base + 1: watch *(buf.byte + 2 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 3, iter 2: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 3, iter 2: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 3, iter 3: base + 0: watch *(buf.byte + 3 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 3, iter 3: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 3, iter 3: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 3, iter 3: base + 1: watch *(buf.byte + 3 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 3, iter 3: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x watch: : width 3, iter 3: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 1, iter 0: base + 0: watch *(buf.byte + 0 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 1, iter 0: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 1, iter 0: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 1, iter 0: base + 1: rwatch *(buf.byte + 0 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 1, iter 0: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 1, iter 0: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 1, iter 1: base + 0: watch *(buf.byte + 1 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 1, iter 1: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 1, iter 1: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 1, iter 1: base + 1: rwatch *(buf.byte + 1 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 1, iter 1: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 1, iter 1: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 1, iter 2: base + 0: watch *(buf.byte + 2 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 1, iter 2: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 1, iter 2: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 1, iter 2: base + 1: rwatch *(buf.byte + 2 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 1, iter 2: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 1, iter 2: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 1, iter 3: base + 0: watch *(buf.byte + 3 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 1, iter 3: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 1, iter 3: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 1, iter 3: base + 1: rwatch *(buf.byte + 3 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 1, iter 3: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 1, iter 3: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 2, iter 0: base + 0: watch *(buf.byte + 0 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 2, iter 0: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 2, iter 0: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 2, iter 0: base + 1: rwatch *(buf.byte + 0 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 2, iter 0: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 2, iter 0: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 2, iter 1: base + 0: watch *(buf.byte + 1 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 2, iter 1: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 2, iter 1: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 2, iter 1: base + 1: rwatch *(buf.byte + 1 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 2, iter 1: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 2, iter 1: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 2, iter 2: base + 0: watch *(buf.byte + 2 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 2, iter 2: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 2, iter 2: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 2, iter 2: base + 1: rwatch *(buf.byte + 2 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 2, iter 2: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 2, iter 2: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 2, iter 3: base + 0: watch *(buf.byte + 3 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 2, iter 3: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 2, iter 3: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 2, iter 3: base + 1: rwatch *(buf.byte + 3 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 2, iter 3: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 2, iter 3: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 3, iter 0: base + 0: watch *(buf.byte + 0 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 3, iter 0: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 3, iter 0: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 3, iter 0: base + 1: rwatch *(buf.byte + 0 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 3, iter 0: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 3, iter 0: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 3, iter 1: base + 0: watch *(buf.byte + 1 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 3, iter 1: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 3, iter 1: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 3, iter 1: base + 1: rwatch *(buf.byte + 1 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 3, iter 1: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 3, iter 1: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 3, iter 2: base + 0: watch *(buf.byte + 2 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 3, iter 2: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 3, iter 2: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 3, iter 2: base + 1: rwatch *(buf.byte + 2 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 3, iter 2: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 3, iter 2: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 3, iter 3: base + 0: watch *(buf.byte + 3 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 3, iter 3: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 3, iter 3: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 3, iter 3: base + 1: rwatch *(buf.byte + 3 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 3, iter 3: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: watch x rwatch: : width 3, iter 3: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 1, iter 0: base + 0: rwatch *(buf.byte + 0 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 1, iter 0: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 1, iter 0: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 1, iter 0: base + 1: watch *(buf.byte + 0 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 1, iter 0: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 1, iter 0: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 1, iter 1: base + 0: rwatch *(buf.byte + 1 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 1, iter 1: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 1, iter 1: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 1, iter 1: base + 1: watch *(buf.byte + 1 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 1, iter 1: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 1, iter 1: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 1, iter 2: base + 0: rwatch *(buf.byte + 2 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 1, iter 2: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 1, iter 2: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 1, iter 2: base + 1: watch *(buf.byte + 2 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 1, iter 2: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 1, iter 2: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 1, iter 3: base + 0: rwatch *(buf.byte + 3 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 1, iter 3: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 1, iter 3: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 1, iter 3: base + 1: watch *(buf.byte + 3 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 1, iter 3: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 1, iter 3: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 2, iter 0: base + 0: rwatch *(buf.byte + 0 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 2, iter 0: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 2, iter 0: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 2, iter 0: base + 1: watch *(buf.byte + 0 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 2, iter 0: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 2, iter 0: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 2, iter 1: base + 0: rwatch *(buf.byte + 1 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 2, iter 1: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 2, iter 1: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 2, iter 1: base + 1: watch *(buf.byte + 1 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 2, iter 1: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 2, iter 1: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 2, iter 2: base + 0: rwatch *(buf.byte + 2 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 2, iter 2: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 2, iter 2: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 2, iter 2: base + 1: watch *(buf.byte + 2 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 2, iter 2: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 2, iter 2: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 2, iter 3: base + 0: rwatch *(buf.byte + 3 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 2, iter 3: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 2, iter 3: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 2, iter 3: base + 1: watch *(buf.byte + 3 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 2, iter 3: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 2, iter 3: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 3, iter 0: base + 0: rwatch *(buf.byte + 0 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 3, iter 0: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 3, iter 0: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 3, iter 0: base + 1: watch *(buf.byte + 0 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 3, iter 0: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 3, iter 0: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 3, iter 1: base + 0: rwatch *(buf.byte + 1 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 3, iter 1: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 3, iter 1: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 3, iter 1: base + 1: watch *(buf.byte + 1 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 3, iter 1: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 3, iter 1: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 3, iter 2: base + 0: rwatch *(buf.byte + 2 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 3, iter 2: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 3, iter 2: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 3, iter 2: base + 1: watch *(buf.byte + 2 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 3, iter 2: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 3, iter 2: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 3, iter 3: base + 0: rwatch *(buf.byte + 3 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 3, iter 3: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 3, iter 3: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 3, iter 3: base + 1: watch *(buf.byte + 3 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 3, iter 3: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x watch: : width 3, iter 3: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 1, iter 0: base + 0: rwatch *(buf.byte + 0 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 1, iter 0: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 1, iter 0: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 1, iter 0: base + 1: rwatch *(buf.byte + 0 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 1, iter 0: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 1, iter 0: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 1, iter 1: base + 0: rwatch *(buf.byte + 1 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 1, iter 1: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 1, iter 1: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 1, iter 1: base + 1: rwatch *(buf.byte + 1 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 1, iter 1: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 1, iter 1: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 1, iter 2: base + 0: rwatch *(buf.byte + 2 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 1, iter 2: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 1, iter 2: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 1, iter 2: base + 1: rwatch *(buf.byte + 2 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 1, iter 2: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 1, iter 2: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 1, iter 3: base + 0: rwatch *(buf.byte + 3 + 0)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 1, iter 3: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 1, iter 3: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 1, iter 3: base + 1: rwatch *(buf.byte + 3 + 1)@1
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 1, iter 3: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 1, iter 3: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 2, iter 0: base + 0: rwatch *(buf.byte + 0 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 2, iter 0: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 2, iter 0: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 2, iter 0: base + 1: rwatch *(buf.byte + 0 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 2, iter 0: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 2, iter 0: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 2, iter 1: base + 0: rwatch *(buf.byte + 1 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 2, iter 1: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 2, iter 1: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 2, iter 1: base + 1: rwatch *(buf.byte + 1 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 2, iter 1: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 2, iter 1: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 2, iter 2: base + 0: rwatch *(buf.byte + 2 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 2, iter 2: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 2, iter 2: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 2, iter 2: base + 1: rwatch *(buf.byte + 2 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 2, iter 2: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 2, iter 2: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 2, iter 3: base + 0: rwatch *(buf.byte + 3 + 0)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 2, iter 3: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 2, iter 3: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 2, iter 3: base + 1: rwatch *(buf.byte + 3 + 1)@2
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 2, iter 3: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 2, iter 3: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 3, iter 0: base + 0: rwatch *(buf.byte + 0 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 3, iter 0: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 3, iter 0: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 3, iter 0: base + 1: rwatch *(buf.byte + 0 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 3, iter 0: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 3, iter 0: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 3, iter 1: base + 0: rwatch *(buf.byte + 1 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 3, iter 1: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 3, iter 1: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 3, iter 1: base + 1: rwatch *(buf.byte + 1 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 3, iter 1: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 3, iter 1: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 3, iter 2: base + 0: rwatch *(buf.byte + 2 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 3, iter 2: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 3, iter 2: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 3, iter 2: base + 1: rwatch *(buf.byte + 2 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 3, iter 2: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 3, iter 2: base + 1: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 3, iter 3: base + 0: rwatch *(buf.byte + 3 + 0)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 3, iter 3: base + 0: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 3, iter 3: base + 0: delete $bpnum
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 3, iter 3: base + 1: rwatch *(buf.byte + 3 + 1)@3
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 3, iter 3: base + 1: stepi advanced
PASS: gdb.base/watchpoint-reuse-slot.exp: always-inserted on: rwatch x rwatch: : width 3, iter 3: base + 1: delete $bpnum
Running ../../../gdb/testsuite/gdb.base/catch-gdb-caused-signals.exp ...
PASS: gdb.base/catch-gdb-caused-signals.exp: handle SIGSEGV nostop noprint
PASS: gdb.base/catch-gdb-caused-signals.exp: handle SIGILL nostop noprint
PASS: gdb.base/catch-gdb-caused-signals.exp: print return_one()
Running ../../../gdb/testsuite/gdb.base/async-shell.exp ...
Running ../../../gdb/testsuite/gdb.base/gdb11530.exp ...
PASS: gdb.base/gdb11530.exp: print a.i
PASS: gdb.base/gdb11530.exp: print sizeof (a.i)
PASS: gdb.base/gdb11530.exp: print sizeof (a.i) == sizeof (int)
Running ../../../gdb/testsuite/gdb.base/long_long.exp ...
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (char)" (1)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (short)" (2)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (int)" (4)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (long)" (4)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (long long)" (8)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (void *)" (4)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (double)" (8)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (long double)" (8)
PASS: gdb.base/long_long.exp: continue to breakpoint: Stop here and look
PASS: gdb.base/long_long.exp: hex print p/x
PASS: gdb.base/long_long.exp: decimal print p/x
PASS: gdb.base/long_long.exp: default print val.dec
PASS: gdb.base/long_long.exp: default print val.bin
PASS: gdb.base/long_long.exp: default print val.oct
PASS: gdb.base/long_long.exp: default print hex
PASS: gdb.base/long_long.exp: decimal print p/u
PASS: gdb.base/long_long.exp: binary print
PASS: gdb.base/long_long.exp: octal print
PASS: gdb.base/long_long.exp: print +ve long long
PASS: gdb.base/long_long.exp: decimal print p/d
PASS: gdb.base/long_long.exp: p/d val.oct
PASS: gdb.base/long_long.exp: p/u val.oct
PASS: gdb.base/long_long.exp: p/o val.oct
PASS: gdb.base/long_long.exp: p/t val.oct
PASS: gdb.base/long_long.exp: p/a val.oct
PASS: gdb.base/long_long.exp: p/c val.oct
PASS: gdb.base/long_long.exp: p/f val.oct
PASS: gdb.base/long_long.exp: p/x *(char *)c
PASS: gdb.base/long_long.exp: p/d *(char *)c
PASS: gdb.base/long_long.exp: p/u *(char *)c
PASS: gdb.base/long_long.exp: p/o *(char *)c
PASS: gdb.base/long_long.exp: p/t *(char *)c
PASS: gdb.base/long_long.exp: p/a *(char *)c
PASS: gdb.base/long_long.exp: p/f *(char *)c
PASS: gdb.base/long_long.exp: p/c *(char *)c
PASS: gdb.base/long_long.exp: p/x *(short *)s
PASS: gdb.base/long_long.exp: p/d *(short *)s
PASS: gdb.base/long_long.exp: p/u *(short *)s
PASS: gdb.base/long_long.exp: p/o *(short *)s
PASS: gdb.base/long_long.exp: p/t *(short *)s
PASS: gdb.base/long_long.exp: p/a *(short *)s
PASS: gdb.base/long_long.exp: p/f *(short *)s
PASS: gdb.base/long_long.exp: p/c *(short *)s
PASS: gdb.base/long_long.exp: p/x *(int *)i
PASS: gdb.base/long_long.exp: p/d *(int *)i
PASS: gdb.base/long_long.exp: p/u *(int *)i
PASS: gdb.base/long_long.exp: p/o *(int *)i
PASS: gdb.base/long_long.exp: p/t *(int *)i
PASS: gdb.base/long_long.exp: p/a *(int *)i
PASS: gdb.base/long_long.exp: p/f *(int *)i
PASS: gdb.base/long_long.exp: p/c *(int *)i
PASS: gdb.base/long_long.exp: p/x *(long *)l
PASS: gdb.base/long_long.exp: p/d *(long *)l
PASS: gdb.base/long_long.exp: p/u *(long *)l
PASS: gdb.base/long_long.exp: p/o *(long *)l
PASS: gdb.base/long_long.exp: p/t *(long *)l
PASS: gdb.base/long_long.exp: p/a *(long *)l
PASS: gdb.base/long_long.exp: p/f *(long *)l
PASS: gdb.base/long_long.exp: p/c *(long *)l
PASS: gdb.base/long_long.exp: p/x *(long long *)ll
PASS: gdb.base/long_long.exp: p/d *(long long *)ll
PASS: gdb.base/long_long.exp: p/u *(long long *)ll
PASS: gdb.base/long_long.exp: p/o *(long long *)ll
PASS: gdb.base/long_long.exp: p/t *(long long *)ll
PASS: gdb.base/long_long.exp: p/a *(long long *)ll
PASS: gdb.base/long_long.exp: p/f *(long long *)ll
PASS: gdb.base/long_long.exp: p/c *(long long *)ll
PASS: gdb.base/long_long.exp: set examine size to w
PASS: gdb.base/long_long.exp: x/x w
PASS: gdb.base/long_long.exp: x/d w
PASS: gdb.base/long_long.exp: x/u w
PASS: gdb.base/long_long.exp: x/o w
PASS: gdb.base/long_long.exp: x/t w
PASS: gdb.base/long_long.exp: x/a
PASS: gdb.base/long_long.exp: x/c b
PASS: gdb.base/long_long.exp: x/f &val.oct
PASS: gdb.base/long_long.exp: set examine size to g
PASS: gdb.base/long_long.exp: x/2x g
PASS: gdb.base/long_long.exp: x/2d g
PASS: gdb.base/long_long.exp: x/2u g
PASS: gdb.base/long_long.exp: x/2o g
PASS: gdb.base/long_long.exp: x/2t g
PASS: gdb.base/long_long.exp: x/2a
PASS: gdb.base/long_long.exp: x/2c b
PASS: gdb.base/long_long.exp: x/2f &val.oct
PASS: gdb.base/long_long.exp: x/2bx b
PASS: gdb.base/long_long.exp: x/2bd b
PASS: gdb.base/long_long.exp: x/2bu b
PASS: gdb.base/long_long.exp: x/2bo b
PASS: gdb.base/long_long.exp: x/2bt b
PASS: gdb.base/long_long.exp: x/2ba b
PASS: gdb.base/long_long.exp: x/2bc b
PASS: gdb.base/long_long.exp: x/2bf b
PASS: gdb.base/long_long.exp: x/2hx h
PASS: gdb.base/long_long.exp: x/2hd h
PASS: gdb.base/long_long.exp: x/2hu h
PASS: gdb.base/long_long.exp: x/2ho h
PASS: gdb.base/long_long.exp: x/2ht h
PASS: gdb.base/long_long.exp: x/2ha h
PASS: gdb.base/long_long.exp: x/2hc h
PASS: gdb.base/long_long.exp: x/2hf h
PASS: gdb.base/long_long.exp: x/2wx w
PASS: gdb.base/long_long.exp: x/2wd w
PASS: gdb.base/long_long.exp: x/2wu w
PASS: gdb.base/long_long.exp: x/2wo w
PASS: gdb.base/long_long.exp: x/2wt w
PASS: gdb.base/long_long.exp: x/2wa w
PASS: gdb.base/long_long.exp: x/2wc w
PASS: gdb.base/long_long.exp: x/2wf w
PASS: gdb.base/long_long.exp: x/2gx g
PASS: gdb.base/long_long.exp: x/2gd g
PASS: gdb.base/long_long.exp: x/2gu g
PASS: gdb.base/long_long.exp: x/2go g
PASS: gdb.base/long_long.exp: x/2gt g
PASS: gdb.base/long_long.exp: x/2ga g
PASS: gdb.base/long_long.exp: x/2gc g
PASS: gdb.base/long_long.exp: x/2gf g
Running ../../../gdb/testsuite/gdb.base/valgrind-db-attach.exp ...
Running ../../../gdb/testsuite/gdb.base/constvars.exp ...
PASS: gdb.base/constvars.exp: break marker1
PASS: gdb.base/constvars.exp: continue to marker1
PASS: gdb.base/constvars.exp: up from marker1
PASS: gdb.base/constvars.exp: ptype qux1
PASS: gdb.base/constvars.exp: print lave
PASS: gdb.base/constvars.exp: ptype lave
PASS: gdb.base/constvars.exp: print lavish
PASS: gdb.base/constvars.exp: ptype lavish
PASS: gdb.base/constvars.exp: print lax
PASS: gdb.base/constvars.exp: ptype lax
PASS: gdb.base/constvars.exp: print lecherous
PASS: gdb.base/constvars.exp: ptype lecherous
PASS: gdb.base/constvars.exp: print lechery
PASS: gdb.base/constvars.exp: ptype lechery
PASS: gdb.base/constvars.exp: print lectern
PASS: gdb.base/constvars.exp: ptype lectern
PASS: gdb.base/constvars.exp: print leeway
PASS: gdb.base/constvars.exp: ptype leeway
PASS: gdb.base/constvars.exp: print legacy
PASS: gdb.base/constvars.exp: ptype legacy
PASS: gdb.base/constvars.exp: print laconic
PASS: gdb.base/constvars.exp: ptype laconic
PASS: gdb.base/constvars.exp: print laggard
PASS: gdb.base/constvars.exp: ptype laggard
PASS: gdb.base/constvars.exp: print lagoon
PASS: gdb.base/constvars.exp: ptype lagoon
PASS: gdb.base/constvars.exp: print laity
PASS: gdb.base/constvars.exp: ptype laity
PASS: gdb.base/constvars.exp: print lambent
PASS: gdb.base/constvars.exp: ptype lambent
PASS: gdb.base/constvars.exp: print laminated
PASS: gdb.base/constvars.exp: ptype laminated
PASS: gdb.base/constvars.exp: print lampoon
PASS: gdb.base/constvars.exp: ptype lampoon
PASS: gdb.base/constvars.exp: print languid
PASS: gdb.base/constvars.exp: ptype languid
PASS: gdb.base/constvars.exp: print *legend
PASS: gdb.base/constvars.exp: ptype legend
PASS: gdb.base/constvars.exp: print *legerdemain
PASS: gdb.base/constvars.exp: ptype legerdemain
PASS: gdb.base/constvars.exp: print *leniency
PASS: gdb.base/constvars.exp: ptype leniency
PASS: gdb.base/constvars.exp: print *leonine
PASS: gdb.base/constvars.exp: ptype leonine
PASS: gdb.base/constvars.exp: print *lesion
PASS: gdb.base/constvars.exp: ptype lesion
PASS: gdb.base/constvars.exp: print *lethal
PASS: gdb.base/constvars.exp: ptype lethal
PASS: gdb.base/constvars.exp: print *lethargic
PASS: gdb.base/constvars.exp: ptype lethargic
PASS: gdb.base/constvars.exp: print *levity
PASS: gdb.base/constvars.exp: ptype levity
PASS: gdb.base/constvars.exp: print *lewd
PASS: gdb.base/constvars.exp: ptype lewd
PASS: gdb.base/constvars.exp: print *lexicographer
PASS: gdb.base/constvars.exp: ptype lexicographer
PASS: gdb.base/constvars.exp: print *lexicon
PASS: gdb.base/constvars.exp: ptype lexicon
PASS: gdb.base/constvars.exp: print *liaison
PASS: gdb.base/constvars.exp: ptype liaison
PASS: gdb.base/constvars.exp: print *libation
PASS: gdb.base/constvars.exp: ptype libation
PASS: gdb.base/constvars.exp: print *libelous
PASS: gdb.base/constvars.exp: ptype libelous
PASS: gdb.base/constvars.exp: print *libertine
PASS: gdb.base/constvars.exp: ptype libertine
PASS: gdb.base/constvars.exp: print *libidinous
PASS: gdb.base/constvars.exp: ptype libidinous
PASS: gdb.base/constvars.exp: print *languish
PASS: gdb.base/constvars.exp: ptype languish
PASS: gdb.base/constvars.exp: print *languor
PASS: gdb.base/constvars.exp: ptype languor
PASS: gdb.base/constvars.exp: print *lank
PASS: gdb.base/constvars.exp: ptype lank
PASS: gdb.base/constvars.exp: print *lapidary
PASS: gdb.base/constvars.exp: ptype lapidary
PASS: gdb.base/constvars.exp: print *larceny
PASS: gdb.base/constvars.exp: ptype larceny
PASS: gdb.base/constvars.exp: print *largess
PASS: gdb.base/constvars.exp: ptype largess
PASS: gdb.base/constvars.exp: print *lascivious
PASS: gdb.base/constvars.exp: ptype lascivious
PASS: gdb.base/constvars.exp: print *lassitude
PASS: gdb.base/constvars.exp: ptype lassitude
PASS: gdb.base/constvars.exp: print *lamprey
PASS: gdb.base/constvars.exp: ptype lamprey
PASS: gdb.base/constvars.exp: print *lariat
PASS: gdb.base/constvars.exp: ptype lariat
PASS: gdb.base/constvars.exp: print *laudanum
PASS: gdb.base/constvars.exp: ptype laudanum
PASS: gdb.base/constvars.exp: print *lecithin
PASS: gdb.base/constvars.exp: ptype lecithin
PASS: gdb.base/constvars.exp: print *leviathan
PASS: gdb.base/constvars.exp: ptype leviathan
PASS: gdb.base/constvars.exp: print *libretto
PASS: gdb.base/constvars.exp: ptype libretto
PASS: gdb.base/constvars.exp: print *lissome
PASS: gdb.base/constvars.exp: ptype lissome
PASS: gdb.base/constvars.exp: print *locust
PASS: gdb.base/constvars.exp: ptype locust
PASS: gdb.base/constvars.exp: ptype logical
PASS: gdb.base/constvars.exp: ptype lugged
PASS: gdb.base/constvars.exp: ptype luck
PASS: gdb.base/constvars.exp: ptype lunar
PASS: gdb.base/constvars.exp: ptype lumen
PASS: gdb.base/constvars.exp: ptype lurk
PASS: gdb.base/constvars.exp: ptype lush
PASS: gdb.base/constvars.exp: ptype lynx
PASS: gdb.base/constvars.exp: ptype crass
PASS: gdb.base/constvars.exp: ptype crisp
Running ../../../gdb/testsuite/gdb.base/bp-cmds-execution-x-script.exp ...
PASS: gdb.base/bp-cmds-execution-x-script.exp: run to end
Running ../../../gdb/testsuite/gdb.base/skip.exp ...
PASS: gdb.base/skip.exp: skip file (no default file)
PASS: gdb.base/skip.exp: skip function
PASS: gdb.base/skip.exp: skip (no default function)
PASS: gdb.base/skip.exp: info skip empty
PASS: gdb.base/skip.exp: skip file (skip.c)
PASS: gdb.base/skip.exp: skip (main)
PASS: gdb.base/skip.exp: skip file skip1.c
PASS: gdb.base/skip.exp: skip function baz
PASS: gdb.base/skip.exp: skip enable 999
PASS: gdb.base/skip.exp: skip disable 999
PASS: gdb.base/skip.exp: skip delete 999
PASS: gdb.base/skip.exp: skip enable a
PASS: gdb.base/skip.exp: skip disable a
PASS: gdb.base/skip.exp: skip delete a
PASS: gdb.base/skip.exp: info skip 999
PASS: gdb.base/skip.exp: info skip
PASS: gdb.base/skip.exp: step in the main
PASS: gdb.base/skip.exp: step after all ignored
PASS: gdb.base/skip.exp: skip delete 1
PASS: gdb.base/skip.exp: info skip (delete 1)
PASS: gdb.base/skip.exp: step after deleting 1 (1)
PASS: gdb.base/skip.exp: step after deleting 1 (2)
PASS: gdb.base/skip.exp: step after deleting 1 (3)
PASS: gdb.base/skip.exp: skip disable 3
PASS: gdb.base/skip.exp: info skip shows entry as disabled
PASS: gdb.base/skip.exp: step after disabling 3 (1)
PASS: gdb.base/skip.exp: step after disabling 3 (2)
PASS: gdb.base/skip.exp: step after disabling 3 (3)
PASS: gdb.base/skip.exp: step after disabling 3 (4)
PASS: gdb.base/skip.exp: step after disabling 3 (5)
PASS: gdb.base/skip.exp: skip enable 3
PASS: gdb.base/skip.exp: info skip shows entry as enabled
PASS: gdb.base/skip.exp: step after enable 3 (1)
PASS: gdb.base/skip.exp: step after enable 3 (2)
PASS: gdb.base/skip.exp: step after enable 3 (3)
PASS: gdb.base/skip.exp: skip disable
PASS: gdb.base/skip.exp: info skip after disabling all
PASS: gdb.base/skip.exp: skip enable
PASS: gdb.base/skip.exp: info skip after enabling all
PASS: gdb.base/skip.exp: skip disable 4 2-3
PASS: gdb.base/skip.exp: info skip after disabling 4 2-3
PASS: gdb.base/skip.exp: skip enable 2-3
PASS: gdb.base/skip.exp: info skip after enabling 2-3
PASS: gdb.base/skip.exp: info skip 2-3
PASS: gdb.base/skip.exp: skip delete 2 3
PASS: gdb.base/skip.exp: info skip after deleting 2 3
PASS: gdb.base/skip.exp: skip delete
PASS: gdb.base/skip.exp: info skip after deleting all
Running ../../../gdb/testsuite/gdb.base/comprdebug.exp ...
PASS: gdb.base/comprdebug.exp: file comprdebug0.o
Running ../../../gdb/testsuite/gdb.base/list.exp ...
PASS: gdb.base/list.exp: set width 0
PASS: gdb.base/list.exp: show default list size
PASS: gdb.base/list.exp: list default lines around main
PASS: gdb.base/list.exp: setting listsize to 1 #1
PASS: gdb.base/list.exp: show listsize 1 #1
PASS: gdb.base/list.exp: list line 1 with listsize 1
PASS: gdb.base/list.exp: list line 2 with listsize 1
PASS: gdb.base/list.exp: setting listsize to 2 #2
PASS: gdb.base/list.exp: show listsize 2 #2
PASS: gdb.base/list.exp: list line 1 with listsize 2
PASS: gdb.base/list.exp: list line 2 with listsize 2
PASS: gdb.base/list.exp: list line 3 with listsize 2
PASS: gdb.base/list.exp: setting listsize to 3 #3
PASS: gdb.base/list.exp: show listsize 3 #3
PASS: gdb.base/list.exp: list line 1 with listsize 3
PASS: gdb.base/list.exp: list line 2 with listsize 3
PASS: gdb.base/list.exp: list line 3 with listsize 3
PASS: gdb.base/list.exp: setting listsize to 4 #4
PASS: gdb.base/list.exp: show listsize 4 #4
PASS: gdb.base/list.exp: list line 1 with listsize 4
PASS: gdb.base/list.exp: list line 2 with listsize 4
PASS: gdb.base/list.exp: list line 3 with listsize 4
PASS: gdb.base/list.exp: list line 4 with listsize 4
PASS: gdb.base/list.exp: setting listsize to 100 #5
PASS: gdb.base/list.exp: show listsize 100 #5
PASS: gdb.base/list.exp: list line 1 with listsize 100
PASS: gdb.base/list.exp: list line 10 with listsize 100
PASS: gdb.base/list.exp: setting listsize to 0 #6
PASS: gdb.base/list.exp: show listsize unlimited #6
PASS: gdb.base/list.exp: list line 1 with unlimited listsize
PASS: gdb.base/list.exp: setting listsize to 10 #7
PASS: gdb.base/list.exp: show listsize 10 #7
PASS: gdb.base/list.exp: list line 1 in include file
PASS: gdb.base/list.exp: list message for lines past EOF
PASS: gdb.base/list.exp: list filename:number (4 tests)
PASS: gdb.base/list.exp: list function in source file 1
PASS: gdb.base/list.exp: list function in source file 2
PASS: gdb.base/list.exp: list function in include file
PASS: gdb.base/list.exp: successive list commands to page forward (4 tests)
PASS: gdb.base/list.exp: end of file error after "list" command
PASS: gdb.base/list.exp: 4 successive "list -" commands to page backwards
PASS: gdb.base/list.exp: beginning of file error after "list -" command
PASS: gdb.base/list.exp: repeat list commands to page forward using 'return' (4 tests)
PASS: gdb.base/list.exp: end of file error after using 'return' to repeat the list command
PASS: gdb.base/list.exp: list range; filename:line1,filename:line2
PASS: gdb.base/list.exp: list range; line1,line2
PASS: gdb.base/list.exp: list range; upper bound past EOF
PASS: gdb.base/list.exp: list range; both bounds past EOF
PASS: gdb.base/list.exp: list range, must be same files
PASS: gdb.base/list.exp: list filename:function (5 tests)
PASS: gdb.base/list.exp: list 'list0.c:main'
XFAIL: gdb.base/list.exp: list filename:function; wrong filename rejected
PASS: gdb.base/list.exp: list filename:function; nonexistant file
PASS: gdb.base/list.exp: list filename:function; nonexistant function
PASS: gdb.base/list.exp: set listsize 4
PASS: gdb.base/list.exp: list long_line
PASS: gdb.base/list.exp: search 4321
PASS: gdb.base/list.exp: search 6789
PASS: gdb.base/list.exp: search extremely long line (> 5000 chars)
PASS: gdb.base/list.exp: set listsize 2
PASS: gdb.base/list.exp: list 1
PASS: gdb.base/list.exp: list ,5
PASS: gdb.base/list.exp: first use of "list -INVALID"
PASS: gdb.base/list.exp: second use of "list -INVALID"
PASS: gdb.base/list.exp: first use of "list +INVALID"
PASS: gdb.base/list.exp: second use of "list +INVALID"
PASS: gdb.base/list.exp: list after stop: 1, 10: before next: set listsize 1
PASS: gdb.base/list.exp: list after stop: 1, 10: next
PASS: gdb.base/list.exp: list after stop: 1, 10: after next: set listsize 10
PASS: gdb.base/list.exp: list after stop: 1, 10: list #1
PASS: gdb.base/list.exp: list after stop: 1, 10: list #2
PASS: gdb.base/list.exp: list after stop: 10, 10: before next: set listsize 10
PASS: gdb.base/list.exp: list after stop: 10, 10: next
PASS: gdb.base/list.exp: list after stop: 10, 10: after next: set listsize 10
PASS: gdb.base/list.exp: list after stop: 10, 10: list #1
PASS: gdb.base/list.exp: list after stop: 10, 10: list #2
PASS: gdb.base/list.exp: list after stop: 10, 1: before next: set listsize 10
PASS: gdb.base/list.exp: list after stop: 10, 1: next
PASS: gdb.base/list.exp: list after stop: 10, 1: after next: set listsize 1
PASS: gdb.base/list.exp: list after stop: 10, 1: list #1
PASS: gdb.base/list.exp: list after stop: 10, 1: list #2
PASS: gdb.base/list.exp: list after stop: 10, 2: before next: set listsize 10
PASS: gdb.base/list.exp: list after stop: 10, 2: next
PASS: gdb.base/list.exp: list after stop: 10, 2: after next: set listsize 2
PASS: gdb.base/list.exp: list after stop: 10, 2: list #1
PASS: gdb.base/list.exp: list after stop: 10, 2: list #2
PASS: gdb.base/list.exp: list after stop: 10, 3: before next: set listsize 10
PASS: gdb.base/list.exp: list after stop: 10, 3: next
PASS: gdb.base/list.exp: list after stop: 10, 3: after next: set listsize 3
PASS: gdb.base/list.exp: list after stop: 10, 3: list #1
PASS: gdb.base/list.exp: list after stop: 10, 3: list #2
PASS: gdb.base/list.exp: list - after stop: 10, 10: before next: set listsize 10
PASS: gdb.base/list.exp: list - after stop: 10, 10: next
PASS: gdb.base/list.exp: list - after stop: 10, 10: after next: set listsize 10
PASS: gdb.base/list.exp: list - after stop: 10, 10: list - #1
PASS: gdb.base/list.exp: list - after stop: 10, 10: list - #2
PASS: gdb.base/list.exp: list - after stop: 10, 3: before next: set listsize 10
PASS: gdb.base/list.exp: list - after stop: 10, 3: next
PASS: gdb.base/list.exp: list - after stop: 10, 3: after next: set listsize 3
PASS: gdb.base/list.exp: list - after stop: 10, 3: list - #1
PASS: gdb.base/list.exp: list - after stop: 10, 3: list - #2
PASS: gdb.base/list.exp: list - after stop: 10, 2: before next: set listsize 10
PASS: gdb.base/list.exp: list - after stop: 10, 2: next
PASS: gdb.base/list.exp: list - after stop: 10, 2: after next: set listsize 2
PASS: gdb.base/list.exp: list - after stop: 10, 2: list - #1
PASS: gdb.base/list.exp: list - after stop: 10, 2: list - #2
PASS: gdb.base/list.exp: list - after stop: 10, 1: before next: set listsize 10
PASS: gdb.base/list.exp: list - after stop: 10, 1: next
PASS: gdb.base/list.exp: list - after stop: 10, 1: after next: set listsize 1
PASS: gdb.base/list.exp: list - after stop: 10, 1: list - #1
PASS: gdb.base/list.exp: list - after stop: 10, 1: list - #2
Running ../../../gdb/testsuite/gdb.base/sepsymtab.exp ...
PASS: gdb.base/sepsymtab.exp: info sym main
Running ../../../gdb/testsuite/gdb.base/signest.exp ...
Running ../../../gdb/testsuite/gdb.base/source-execution.exp ...
PASS: gdb.base/source-execution.exp: source source-execution.gdb
Running ../../../gdb/testsuite/gdb.base/gdb1821.exp ...
PASS: gdb.base/gdb1821.exp: print /x bar
Running ../../../gdb/testsuite/gdb.base/gdb1056.exp ...
PASS: gdb.base/gdb1056.exp: print 1/0
PASS: gdb.base/gdb1056.exp: Test unsigned division by zero
Running ../../../gdb/testsuite/gdb.base/nostdlib.exp ...
UNTESTED: gdb.base/nostdlib.exp: nostdlib.exp
Running ../../../gdb/testsuite/gdb.base/watch_thread_num.exp ...
Running ../../../gdb/testsuite/gdb.base/relational.exp ...
PASS: gdb.base/relational.exp: set variable x=14
PASS: gdb.base/relational.exp: set variable y=2
PASS: gdb.base/relational.exp: set variable z=2
PASS: gdb.base/relational.exp: set variable w=3
PASS: gdb.base/relational.exp: print value of x
PASS: gdb.base/relational.exp: print value of y
PASS: gdb.base/relational.exp: print value of z
PASS: gdb.base/relational.exp: print value of w
PASS: gdb.base/relational.exp: print value of x<y
PASS: gdb.base/relational.exp: print value of x<=y
PASS: gdb.base/relational.exp: print value of x>y
PASS: gdb.base/relational.exp: print value of x>=y
PASS: gdb.base/relational.exp: print value of x==y
PASS: gdb.base/relational.exp: print value of x!=y
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable y
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x<y<z
PASS: gdb.base/relational.exp: print value of x<=y<=z
PASS: gdb.base/relational.exp: print value of x>y>z
PASS: gdb.base/relational.exp: print value of x>=y>=z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable y
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x==y==z
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x!=y!=z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable y
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x<y==z
PASS: gdb.base/relational.exp: print value of x<y!=z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable y
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x<y<=z
PASS: gdb.base/relational.exp: print value of x<y>=z
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x<y>z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: print value of x>y>=z
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x>y==z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x>y!=z
PASS: gdb.base/relational.exp: set x to 4
PASS: gdb.base/relational.exp: print value of x>y<=z
PASS: gdb.base/relational.exp: print value of x>=y==z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: print value of x>=y!=z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x>=y<=z
PASS: gdb.base/relational.exp: print value of x<=y==z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: print value of x<=y!=z
PASS: gdb.base/relational.exp: print value of x==y!=z
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x>=(y<z)
PASS: gdb.base/relational.exp: print value of x>=(y!=z)
PASS: gdb.base/relational.exp: print value of x==(y==z)
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of (x==y)<z
Running ../../../gdb/testsuite/gdb.base/term.exp ...
Running ../../../gdb/testsuite/gdb.base/source.exp ...
PASS: gdb.base/source.exp: script contains error
PASS: gdb.base/source.exp: source -v
PASS: gdb.base/source.exp: source after -v
PASS: gdb.base/source.exp: set search directories
PASS: gdb.base/source.exp: source -s
PASS: gdb.base/source.exp: source -s -v
PASS: gdb.base/source.exp: source -v -s
PASS: gdb.base/source.exp: source for-sure-nonexistant-file
PASS: gdb.base/source.exp: source source-nofile.gdb
Running ../../../gdb/testsuite/gdb.base/double-prompt-target-event-error.exp ...
PASS: gdb.base/double-prompt-target-event-error.exp: ctrlc target event: continue: set breakpoint
PASS: gdb.base/double-prompt-target-event-error.exp: ctrlc target event: continue: set height 2
PASS: gdb.base/double-prompt-target-event-error.exp: ctrlc target event: continue: set pagination on
PASS: gdb.base/double-prompt-target-event-error.exp: ctrlc target event: continue: continue to pagination
PASS: gdb.base/double-prompt-target-event-error.exp: ctrlc target event: continue: first prompt
PASS: gdb.base/double-prompt-target-event-error.exp: ctrlc target event: continue: no double prompt
PASS: gdb.base/double-prompt-target-event-error.exp: ctrlc target event: continue: set height unlimited
PASS: gdb.base/double-prompt-target-event-error.exp: ctrlc target event: wrapcont: set breakpoint
PASS: gdb.base/double-prompt-target-event-error.exp: ctrlc target event: wrapcont: set height 2
PASS: gdb.base/double-prompt-target-event-error.exp: ctrlc target event: wrapcont: set pagination on
PASS: gdb.base/double-prompt-target-event-error.exp: ctrlc target event: wrapcont: define user command: wrapcont
PASS: gdb.base/double-prompt-target-event-error.exp: ctrlc target event: wrapcont: continue to pagination
PASS: gdb.base/double-prompt-target-event-error.exp: ctrlc target event: wrapcont: first prompt
PASS: gdb.base/double-prompt-target-event-error.exp: ctrlc target event: wrapcont: no double prompt
PASS: gdb.base/double-prompt-target-event-error.exp: ctrlc target event: wrapcont: set height unlimited
Running ../../../gdb/testsuite/gdb.base/freebpcmd.exp ...
PASS: gdb.base/freebpcmd.exp: set breakpoint
PASS: gdb.base/freebpcmd.exp: send breakpoint commands
PASS: gdb.base/freebpcmd.exp: run program with breakpoint commands
Running ../../../gdb/testsuite/gdb.base/nested-subp2.exp ...
PASS: gdb.base/nested-subp2.exp: breakpoint to the STOP marker
PASS: gdb.base/nested-subp2.exp: continue to the STOP marker
PASS: gdb.base/nested-subp2.exp: print c
PASS: gdb.base/nested-subp2.exp: print count
PASS: gdb.base/nested-subp2.exp: continue to the STOP marker
PASS: gdb.base/nested-subp2.exp: print c
PASS: gdb.base/nested-subp2.exp: print count
Running ../../../gdb/testsuite/gdb.base/disabled-location.exp ...
PASS: gdb.base/disabled-location.exp: setting breakpoint on function
PASS: gdb.base/disabled-location.exp: disable location
PASS: gdb.base/disabled-location.exp: step doesn't trip on disabled location
Running ../../../gdb/testsuite/gdb.base/gdb1555.exp ...
Running ../../../gdb/testsuite/gdb.base/cursal.exp ...
PASS: gdb.base/cursal.exp: set listsize 1
PASS: gdb.base/cursal.exp: list before run
PASS: gdb.base/cursal.exp: list in main
PASS: gdb.base/cursal.exp: list in func2
PASS: gdb.base/cursal.exp: backtrace
PASS: gdb.base/cursal.exp: list after backtrace
PASS: gdb.base/cursal.exp: set listsize 3
PASS: gdb.base/cursal.exp: list size 3
Running ../../../gdb/testsuite/gdb.base/signull.exp ...
Running ../../../gdb/testsuite/gdb.base/hbreak.exp ...
Running ../../../gdb/testsuite/gdb.base/filesym.exp ...
PASS: gdb.base/filesym.exp: complete on "filesy"
PASS: gdb.base/filesym.exp: completion list for "filesym"
PASS: gdb.base/filesym.exp: set breakpoint at filesym
Running ../../../gdb/testsuite/gdb.base/enum_cond.exp ...
PASS: gdb.base/enum_cond.exp: break call_me if param.e == 1
PASS: gdb.base/enum_cond.exp: continue to conditional breakpoint in call_me
Running ../../../gdb/testsuite/gdb.base/hashline1.exp ...
PASS: gdb.base/hashline1.exp: set breakpoint
Running ../../../gdb/testsuite/gdb.base/watch-bitfields.exp ...
PASS: gdb.base/watch-bitfields.exp: -location watch against bitfields: watch -location q.a
PASS: gdb.base/watch-bitfields.exp: -location watch against bitfields: watch -location q.e
PASS: gdb.base/watch-bitfields.exp: -location watch against bitfields: q.a: 0->1: print expression before
PASS: gdb.base/watch-bitfields.exp: -location watch against bitfields: q.a: 0->1: continue
PASS: gdb.base/watch-bitfields.exp: -location watch against bitfields: q.a: 0->1: print expression after
PASS: gdb.base/watch-bitfields.exp: -location watch against bitfields: q.e: 0->5: print expression before
PASS: gdb.base/watch-bitfields.exp: -location watch against bitfields: q.e: 0->5: continue
PASS: gdb.base/watch-bitfields.exp: -location watch against bitfields: q.e: 0->5: print expression after
PASS: gdb.base/watch-bitfields.exp: -location watch against bitfields: q.a: 1->0: print expression before
PASS: gdb.base/watch-bitfields.exp: -location watch against bitfields: q.a: 1->0: continue
PASS: gdb.base/watch-bitfields.exp: -location watch against bitfields: q.a: 1->0: print expression after
PASS: gdb.base/watch-bitfields.exp: -location watch against bitfields: q.e: 5->4: print expression before
PASS: gdb.base/watch-bitfields.exp: -location watch against bitfields: q.e: 5->4: continue
PASS: gdb.base/watch-bitfields.exp: -location watch against bitfields: q.e: 5->4: print expression after
PASS: gdb.base/watch-bitfields.exp: -location watch against bitfields: continue until exit
PASS: gdb.base/watch-bitfields.exp: regular watch against bitfields: watch q.d + q.f + q.g
PASS: gdb.base/watch-bitfields.exp: regular watch against bitfields: q.d + q.f + q.g: 0->4: print expression before
PASS: gdb.base/watch-bitfields.exp: regular watch against bitfields: q.d + q.f + q.g: 0->4: continue
PASS: gdb.base/watch-bitfields.exp: regular watch against bitfields: q.d + q.f + q.g: 0->4: print expression after
PASS: gdb.base/watch-bitfields.exp: regular watch against bitfields: q.d + q.f + q.g: 4->10: print expression before
PASS: gdb.base/watch-bitfields.exp: regular watch against bitfields: q.d + q.f + q.g: 4->10: continue
PASS: gdb.base/watch-bitfields.exp: regular watch against bitfields: q.d + q.f + q.g: 4->10: print expression after
PASS: gdb.base/watch-bitfields.exp: regular watch against bitfields: q.d + q.f + q.g: 10->3: print expression before
PASS: gdb.base/watch-bitfields.exp: regular watch against bitfields: q.d + q.f + q.g: 10->3: continue
PASS: gdb.base/watch-bitfields.exp: regular watch against bitfields: q.d + q.f + q.g: 10->3: print expression after
PASS: gdb.base/watch-bitfields.exp: regular watch against bitfields: q.d + q.f + q.g: 3->2: print expression before
PASS: gdb.base/watch-bitfields.exp: regular watch against bitfields: q.d + q.f + q.g: 3->2: continue
PASS: gdb.base/watch-bitfields.exp: regular watch against bitfields: q.d + q.f + q.g: 3->2: print expression after
PASS: gdb.base/watch-bitfields.exp: regular watch against bitfields: q.d + q.f + q.g: 2->1: print expression before
PASS: gdb.base/watch-bitfields.exp: regular watch against bitfields: q.d + q.f + q.g: 2->1: continue
PASS: gdb.base/watch-bitfields.exp: regular watch against bitfields: q.d + q.f + q.g: 2->1: print expression after
PASS: gdb.base/watch-bitfields.exp: regular watch against bitfields: q.d + q.f + q.g: 1->0: print expression before
PASS: gdb.base/watch-bitfields.exp: regular watch against bitfields: q.d + q.f + q.g: 1->0: continue
PASS: gdb.base/watch-bitfields.exp: regular watch against bitfields: q.d + q.f + q.g: 1->0: print expression after
PASS: gdb.base/watch-bitfields.exp: regular watch against bitfields: continue until exit
Running ../../../gdb/testsuite/gdb.base/jit-simple.exp ...
UNTESTED: gdb.base/jit-simple.exp: jit-simple.exp
Running ../../../gdb/testsuite/gdb.base/foll-exec.exp ...
Running ../../../gdb/testsuite/gdb.base/gcore-buffer-overflow.exp ...
PASS: gdb.base/gcore-buffer-overflow.exp: Set buffer exceeding arguments
UNSUPPORTED: gdb.base/gcore-buffer-overflow.exp: save a corefile
Running ../../../gdb/testsuite/gdb.base/relativedebug.exp ...
Running ../../../gdb/testsuite/gdb.base/frame-args.exp ...
PASS: gdb.base/frame-args.exp: set print frame-arguments all
PASS: gdb.base/frame-args.exp: frame 1 with print frame-arguments set to all
PASS: gdb.base/frame-args.exp: set print frame-arguments scalars
PASS: gdb.base/frame-args.exp: frame 1 with print frame-arguments set to scalars
PASS: gdb.base/frame-args.exp: set print frame-arguments none
PASS: gdb.base/frame-args.exp: frame 1 with print frame-arguments set to none
Running ../../../gdb/testsuite/gdb.base/gdb11531.exp ...
PASS: gdb.base/gdb11531.exp: Set watchpoint
PASS: gdb.base/gdb11531.exp: watchpoint variable triggers at next
PASS: gdb.base/gdb11531.exp: watchpoint variable triggers at continue
Running ../../../gdb/testsuite/gdb.base/dso2dso.exp ...
Running ../../../gdb/testsuite/gdb.base/assign.exp ...
PASS: gdb.base/assign.exp: continuing after dummy()
PASS: gdb.base/assign.exp: v_int=57
PASS: gdb.base/assign.exp: set v_int to 6
PASS: gdb.base/assign.exp: v_int+=57
PASS: gdb.base/assign.exp: set v_int to 6 (2)
PASS: gdb.base/assign.exp: v_int-=57
PASS: gdb.base/assign.exp: set v_int to 6 (3)
PASS: gdb.base/assign.exp: v_int*=5
PASS: gdb.base/assign.exp: set v_int to 6 (4)
PASS: gdb.base/assign.exp: v_int/=4
PASS: gdb.base/assign.exp: set v_int to 6 (5)
PASS: gdb.base/assign.exp: v_int%=4
PASS: gdb.base/assign.exp: set v_int to 6 (6)
PASS: gdb.base/assign.exp: v_int+=char
PASS: gdb.base/assign.exp: set v_int to 6 (7)
PASS: gdb.base/assign.exp: v_int+=signed_char
PASS: gdb.base/assign.exp: set v_int to 6 (8)
PASS: gdb.base/assign.exp: v_int+=unsigned_char
PASS: gdb.base/assign.exp: set v_int to 6 (9)
PASS: gdb.base/assign.exp: v_int+=short
PASS: gdb.base/assign.exp: set v_int to 6 (10)
PASS: gdb.base/assign.exp: v_int+=signed_short
PASS: gdb.base/assign.exp: set v_int to 6 (11)
PASS: gdb.base/assign.exp: v_int=+unsigned_short
PASS: gdb.base/assign.exp: set v_int to 6 (12)
PASS: gdb.base/assign.exp: v_int+=signed_int
PASS: gdb.base/assign.exp: set v_int to 6 (13)
PASS: gdb.base/assign.exp: v_int+=unsigned_int
PASS: gdb.base/assign.exp: set v_int to 6 (14)
PASS: gdb.base/assign.exp: v_int+=long
PASS: gdb.base/assign.exp: set v_int to 6 (15)
PASS: gdb.base/assign.exp: v_int+=signed_long
PASS: gdb.base/assign.exp: set v_int to 6 (16)
PASS: gdb.base/assign.exp: v_int+=unsigned_long
PASS: gdb.base/assign.exp: set v_int to 6 (17)
PASS: gdb.base/assign.exp: v_int+=v_float
PASS: gdb.base/assign.exp: set v_int to 6 (18)
PASS: gdb.base/assign.exp: v_int+=double
Running ../../../gdb/testsuite/gdb.base/ending-run.exp ...
PASS: gdb.base/ending-run.exp: bpt at line before routine
PASS: gdb.base/ending-run.exp: b ending-run.c:11, one
PASS: gdb.base/ending-run.exp: b ending-run.c:30
PASS: gdb.base/ending-run.exp: run
PASS: gdb.base/ending-run.exp: clear worked
PASS: gdb.base/ending-run.exp: cleared bp at line before routine
PASS: gdb.base/ending-run.exp: b ending-run.c:1
PASS: gdb.base/ending-run.exp: b ending-run.c:11, two
PASS: gdb.base/ending-run.exp: Cleared 2 by line
PASS: gdb.base/ending-run.exp: b ending-run.c:11
PASS: gdb.base/ending-run.exp: Breakpoint 7 at *ending-run.c:11
PASS: gdb.base/ending-run.exp: Clear 2 by default
PASS: gdb.base/ending-run.exp: all set to continue
PASS: gdb.base/ending-run.exp: cont
PASS: gdb.base/ending-run.exp: step out of main
Running ../../../gdb/testsuite/gdb.base/async.exp ...
PASS: gdb.base/async.exp: set exec-done-display on
PASS: gdb.base/async.exp: next&
PASS: gdb.base/async.exp: step& #1
PASS: gdb.base/async.exp: step& #2
PASS: gdb.base/async.exp: stepi&
PASS: gdb.base/async.exp: get next insn
PASS: gdb.base/async.exp: nexti&
PASS: gdb.base/async.exp: finish&
PASS: gdb.base/async.exp: jump&
PASS: gdb.base/async.exp: until&
PASS: gdb.base/async.exp: set exec-done-display off
Running ../../../gdb/testsuite/gdb.base/wchar.exp ...
PASS: gdb.base/wchar.exp: print narrow
PASS: gdb.base/wchar.exp: print single
PASS: gdb.base/wchar.exp: print simple
PASS: gdb.base/wchar.exp: print difficile
PASS: gdb.base/wchar.exp: print simple[2]
PASS: gdb.base/wchar.exp: print difficile[2]
PASS: gdb.base/wchar.exp: show host-charset
PASS: gdb.base/wchar.exp: print repeat
PASS: gdb.base/wchar.exp: print repeat_p
PASS: gdb.base/wchar.exp: set print null on
PASS: gdb.base/wchar.exp: print repeat (print null on)
PASS: gdb.base/wchar.exp: set print elements 3
PASS: gdb.base/wchar.exp: print repeat (print elements 3)
PASS: gdb.base/wchar.exp: print repeat_p (print elements 3)
Running ../../../gdb/testsuite/gdb.base/longest-types.exp ...
UNTESTED: gdb.base/longest-types.exp: longest-types.exp
Running ../../../gdb/testsuite/gdb.base/until-nodebug.exp ...
PASS: gdb.base/until-nodebug.exp: until 1
PASS: gdb.base/until-nodebug.exp: until 2
Running ../../../gdb/testsuite/gdb.base/fixsection.exp ...
Running ../../../gdb/testsuite/gdb.base/vla-ptr.exp ...
PASS: gdb.base/vla-ptr.exp: get integer valueof "sizeof (int)" (4)
PASS: gdb.base/vla-ptr.exp: continue to breakpoint: foo_bp
PASS: gdb.base/vla-ptr.exp: print vla_ptr (foo)
PASS: gdb.base/vla-ptr.exp: print *vla_ptr (foo)
PASS: gdb.base/vla-ptr.exp: continue to breakpoint: bar_bp
PASS: gdb.base/vla-ptr.exp: print vla_ptr (bar)
PASS: gdb.base/vla-ptr.exp: print *vla_ptr (bar)
PASS: gdb.base/vla-ptr.exp: continue to breakpoint: vla_func_bp
PASS: gdb.base/vla-ptr.exp: print td_vla
Running ../../../gdb/testsuite/gdb.base/solib-display.exp ...
Running ../../../gdb/testsuite/gdb.base/save-bp.exp ...
PASS: gdb.base/save-bp.exp: add breakpoint commands
PASS: gdb.base/save-bp.exp: dprintf save-bp.c:33,"At foo entry\n"
PASS: gdb.base/save-bp.exp: disable $bpnum
PASS: gdb.base/save-bp.exp: save breakpoint bps
PASS: gdb.base/save-bp.exp: source bps
PASS: gdb.base/save-bp.exp: info break
Running ../../../gdb/testsuite/gdb.base/dprintf-bp-same-addr.exp ...
PASS: gdb.base/dprintf-bp-same-addr.exp: gdb: set dprintf-style gdb
PASS: gdb.base/dprintf-bp-same-addr.exp: gdb: set breakpoint always-inserted on
PASS: gdb.base/dprintf-bp-same-addr.exp: gdb: set dprintf
PASS: gdb.base/dprintf-bp-same-addr.exp: gdb: set breakpoint
PASS: gdb.base/dprintf-bp-same-addr.exp: gdb: continue
PASS: gdb.base/dprintf-bp-same-addr.exp: agent: set dprintf-style agent
PASS: gdb.base/dprintf-bp-same-addr.exp: agent: set breakpoint always-inserted on
UNSUPPORTED: gdb.base/dprintf-bp-same-addr.exp: agent: set dprintf
PASS: gdb.base/dprintf-bp-same-addr.exp: agent: set breakpoint
PASS: gdb.base/dprintf-bp-same-addr.exp: agent: continue
Running ../../../gdb/testsuite/gdb.base/watchpoint-solib.exp ...
Running ../../../gdb/testsuite/gdb.base/attach-wait-input.exp ...
Running ../../../gdb/testsuite/gdb.base/inferior-died.exp ...
UNSUPPORTED: gdb.base/inferior-died.exp: inferior-died.exp
Running ../../../gdb/testsuite/gdb.base/watchpoint-hw-hit-once.exp ...
Running ../../../gdb/testsuite/gdb.base/nested-subp1.exp ...
PASS: gdb.base/nested-subp1.exp: breakpoint to the STOP marker
PASS: gdb.base/nested-subp1.exp: continue to the STOP marker
PASS: gdb.base/nested-subp1.exp: print i1
PASS: gdb.base/nested-subp1.exp: print i2
Running ../../../gdb/testsuite/gdb.base/range-stepping.exp ...
PASS: gdb.base/range-stepping.exp: probe range-stepping support
UNSUPPORTED: gdb.base/range-stepping.exp: range stepping not supported by the target
Running ../../../gdb/testsuite/gdb.base/attach-twice.exp ...
Running ../../../gdb/testsuite/gdb.base/langs.exp ...
PASS: gdb.base/langs.exp: break on nonexistent function in langs.exp
PASS: gdb.base/langs.exp: show language at csub in langs.exp
PASS: gdb.base/langs.exp: backtrace in langs.exp
PASS: gdb.base/langs.exp: up to foo in langs.exp
PASS: gdb.base/langs.exp: show language at foo in langs.exp
PASS: gdb.base/langs.exp: up to cppsub_ in langs.exp
PASS: gdb.base/langs.exp: show language at cppsub_ in langs.exp
PASS: gdb.base/langs.exp: up to fsub in langs.exp
PASS: gdb.base/langs.exp: show language at fsub in langs.exp
PASS: gdb.base/langs.exp: up to langs0__2do in langs.exp
PASS: gdb.base/langs.exp: show language at langs0__2do in langs.exp
PASS: gdb.base/langs.exp: up to main in langs.exp
PASS: gdb.base/langs.exp: show language at main in langs.exp
PASS: gdb.base/langs.exp: continue until exit at langs.exp
PASS: gdb.base/langs.exp: set lang to minimal
PASS: gdb.base/langs.exp: print parameter value
Running ../../../gdb/testsuite/gdb.base/code_elim.exp ...
PASS: gdb.base/code_elim.exp: symbol-file code_elim1
FAIL: gdb.base/code_elim.exp: single psymtabs: test eliminated var my_global_symbol
FAIL: gdb.base/code_elim.exp: single psymtabs: test eliminated var my_static_symbol
FAIL: gdb.base/code_elim.exp: single psymtabs: test eliminated var my_global_func
PASS: gdb.base/code_elim.exp: single psymtabs: get address of main
FAIL: gdb.base/code_elim.exp: single symtabs: test eliminated var my_global_symbol
FAIL: gdb.base/code_elim.exp: single symtabs: test eliminated var my_static_symbol
FAIL: gdb.base/code_elim.exp: single symtabs: test eliminated var my_global_func
PASS: gdb.base/code_elim.exp: single symtabs: get address of main
PASS: gdb.base/code_elim.exp: order1: add-symbol-file code_elim1 0x100000
PASS: gdb.base/code_elim.exp: order1: add-symbol-file code_elim2 0x200000
FAIL: gdb.base/code_elim.exp: order1: get address of my_global_symbol
FAIL: gdb.base/code_elim.exp: order1: get address of my_static_symbol
FAIL: gdb.base/code_elim.exp: order1: get address of my_global_func
PASS: gdb.base/code_elim.exp: order1: get address of main
PASS: gdb.base/code_elim.exp: order2: add-symbol-file code_elim2 0x200000
PASS: gdb.base/code_elim.exp: order2: add-symbol-file code_elim1 0x100000
PASS: gdb.base/code_elim.exp: order2: get address of my_global_symbol
PASS: gdb.base/code_elim.exp: order2: get address of my_static_symbol
PASS: gdb.base/code_elim.exp: order2: get address of my_global_func
PASS: gdb.base/code_elim.exp: order2: get address of main
Running ../../../gdb/testsuite/gdb.base/exe-lock.exp ...
PASS: gdb.base/exe-lock.exp: continue until exit
Running ../../../gdb/testsuite/gdb.base/radix.exp ...
PASS: gdb.base/radix.exp: initialize radix, input radix 2
PASS: gdb.base/radix.exp: set input-radix 2
PASS: gdb.base/radix.exp: show radix, input radix 2
PASS: gdb.base/radix.exp: print 010; expect 8; input radix 2
PASS: gdb.base/radix.exp: print 20.; expect 20; input radix 2
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; input radix 2
PASS: gdb.base/radix.exp: print 0xf; expect 15; input radix 2
PASS: gdb.base/radix.exp: print 0; expect 0; input radix 2
PASS: gdb.base/radix.exp: print 1; expect 1; input radix 2
PASS: gdb.base/radix.exp: print -1; expect -1; input radix 2
PASS: gdb.base/radix.exp: print 10; expect 2; input radix 2
PASS: gdb.base/radix.exp: print 11; expect 3; input radix 2
PASS: gdb.base/radix.exp: print -10; expect -2; input radix 2
PASS: gdb.base/radix.exp: print -11; expect -3; input radix 2
PASS: gdb.base/radix.exp: print 100; expect 4; input radix 2
PASS: gdb.base/radix.exp: print 101; expect 5; input radix 2
PASS: gdb.base/radix.exp: print -100; expect -4; input radix 2
PASS: gdb.base/radix.exp: print -101; expect -5; input radix 2
PASS: gdb.base/radix.exp: print 10101; expect 21; input radix 2
PASS: gdb.base/radix.exp: print 4; expect Invalid number "4"\.; input radix 2
PASS: gdb.base/radix.exp: print -2; expect Invalid number "2"\.; input radix 2
PASS: gdb.base/radix.exp: initialize radix, input radix 3
PASS: gdb.base/radix.exp: set input-radix 3
PASS: gdb.base/radix.exp: show radix, input radix 3
PASS: gdb.base/radix.exp: print 010; expect 8; input radix 3
PASS: gdb.base/radix.exp: print 20.; expect 20; input radix 3
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; input radix 3
PASS: gdb.base/radix.exp: print 0xf; expect 15; input radix 3
PASS: gdb.base/radix.exp: print 0; expect 0; input radix 3
PASS: gdb.base/radix.exp: print 1; expect 1; input radix 3
PASS: gdb.base/radix.exp: print -1; expect -1; input radix 3
PASS: gdb.base/radix.exp: print 10; expect 3; input radix 3
PASS: gdb.base/radix.exp: print 11; expect 4; input radix 3
PASS: gdb.base/radix.exp: print -10; expect -3; input radix 3
PASS: gdb.base/radix.exp: print -11; expect -4; input radix 3
PASS: gdb.base/radix.exp: print 100; expect 9; input radix 3
PASS: gdb.base/radix.exp: print 101; expect 10; input radix 3
PASS: gdb.base/radix.exp: print -100; expect -9; input radix 3
PASS: gdb.base/radix.exp: print -101; expect -10; input radix 3
PASS: gdb.base/radix.exp: print 10101; expect 91; input radix 3
PASS: gdb.base/radix.exp: print 2; expect 2; input radix 3
PASS: gdb.base/radix.exp: print 20; expect 6; input radix 3
PASS: gdb.base/radix.exp: print 3; expect Invalid number "3"\.; input radix 3
PASS: gdb.base/radix.exp: print 30; expect Invalid number "30"\.; input radix 2
PASS: gdb.base/radix.exp: initialize radix, input radix 8
PASS: gdb.base/radix.exp: set input-radix 8
PASS: gdb.base/radix.exp: show radix, input radix 8
PASS: gdb.base/radix.exp: print 010; expect 8; input radix 8
PASS: gdb.base/radix.exp: print 20.; expect 20; input radix 8
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; input radix 8
PASS: gdb.base/radix.exp: print 0xf; expect 15; input radix 8
PASS: gdb.base/radix.exp: print 0; expect 0; input radix 8
PASS: gdb.base/radix.exp: print 1; expect 1; input radix 8
PASS: gdb.base/radix.exp: print -1; expect -1; input radix 8
PASS: gdb.base/radix.exp: print 10; expect 8; input radix 8
PASS: gdb.base/radix.exp: print 11; expect 9; input radix 8
PASS: gdb.base/radix.exp: print -10; expect -8; input radix 8
PASS: gdb.base/radix.exp: print -11; expect -9; input radix 8
PASS: gdb.base/radix.exp: print 100; expect 64; input radix 8
PASS: gdb.base/radix.exp: print 101; expect 65; input radix 8
PASS: gdb.base/radix.exp: print -100; expect -64; input radix 8
PASS: gdb.base/radix.exp: print -101; expect -65; input radix 8
PASS: gdb.base/radix.exp: print 10101; expect 4161; input radix 8
PASS: gdb.base/radix.exp: print 20; expect 16; input radix 8
PASS: gdb.base/radix.exp: print -20; expect -16; input radix 8
PASS: gdb.base/radix.exp: print 8; expect Invalid number "8".; input radix 8
PASS: gdb.base/radix.exp: print -9; expect Invalid number "9".; input radix 8
PASS: gdb.base/radix.exp: initialize radix, input radix 10
PASS: gdb.base/radix.exp: set input-radix 10
PASS: gdb.base/radix.exp: show radix, input radix 10
PASS: gdb.base/radix.exp: print 010; expect 8; input radix 10
PASS: gdb.base/radix.exp: print 20.; expect 20; input radix 10
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; input radix 10
PASS: gdb.base/radix.exp: print 0xf; expect 15; input radix 10
PASS: gdb.base/radix.exp: print 0; expect 0; input radix 10
PASS: gdb.base/radix.exp: print 1; expect 1; input radix 10
PASS: gdb.base/radix.exp: print -1; expect -1; input radix 10
PASS: gdb.base/radix.exp: print 10; expect 10; input radix 10
PASS: gdb.base/radix.exp: print 11; expect 11; input radix 10
PASS: gdb.base/radix.exp: print -10; expect -10; input radix 10
PASS: gdb.base/radix.exp: print -11; expect -11; input radix 10
PASS: gdb.base/radix.exp: print 100; expect 100; input radix 10
PASS: gdb.base/radix.exp: print 101; expect 101; input radix 10
PASS: gdb.base/radix.exp: print -100; expect -100; input radix 10
PASS: gdb.base/radix.exp: print -101; expect -101; input radix 10
PASS: gdb.base/radix.exp: print 10101; expect 10101; input radix 10
PASS: gdb.base/radix.exp: print -12; expect -12; input radix 10
PASS: gdb.base/radix.exp: initialize radix, input radix 16
PASS: gdb.base/radix.exp: set input-radix 16
PASS: gdb.base/radix.exp: show radix, input radix 16
PASS: gdb.base/radix.exp: print 010; expect 8; input radix 16
PASS: gdb.base/radix.exp: print 20.; expect 20; input radix 16
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; input radix 16
PASS: gdb.base/radix.exp: print 0xf; expect 15; input radix 16
PASS: gdb.base/radix.exp: print 0; expect 0; input radix 16
PASS: gdb.base/radix.exp: print 1; expect 1; input radix 16
PASS: gdb.base/radix.exp: print -1; expect -1; input radix 16
PASS: gdb.base/radix.exp: print 10; expect 16; input radix 16
PASS: gdb.base/radix.exp: print 11; expect 17; input radix 16
PASS: gdb.base/radix.exp: print -10; expect -16; input radix 16
PASS: gdb.base/radix.exp: print -11; expect -17; input radix 16
PASS: gdb.base/radix.exp: print 100; expect 256; input radix 16
PASS: gdb.base/radix.exp: print 101; expect 257; input radix 16
PASS: gdb.base/radix.exp: print -100; expect -256; input radix 16
PASS: gdb.base/radix.exp: print -101; expect -257; input radix 16
PASS: gdb.base/radix.exp: print 10101; expect 65793; input radix 16
PASS: gdb.base/radix.exp: initialize radix, output radix 8
PASS: gdb.base/radix.exp: set output-radix 8
PASS: gdb.base/radix.exp: show radix, output radix 8
PASS: gdb.base/radix.exp: print 010; expect 010; output radix 8
PASS: gdb.base/radix.exp: print 0xf; expect 17; output radix 8
PASS: gdb.base/radix.exp: print 10; expect 12; output radix 8
PASS: gdb.base/radix.exp: print 100; expect 144; output radix 8
KFAIL: gdb.base/radix.exp: print 20.; expect 24; output radix 8 (PRMS: gdb/1715)
PASS: gdb.base/radix.exp: print (int) 20.; expect 24; output radix 8
PASS: gdb.base/radix.exp: initialize radix, output radix 10
PASS: gdb.base/radix.exp: set output-radix 10
PASS: gdb.base/radix.exp: show radix, output radix 10
PASS: gdb.base/radix.exp: print 010; expect 8; output radix 10
PASS: gdb.base/radix.exp: print 0xf; expect 15; output radix 10
PASS: gdb.base/radix.exp: print 10; expect 10; output radix 10
PASS: gdb.base/radix.exp: print 100; expect 100; output radix 10
PASS: gdb.base/radix.exp: print 20.; expect 20; output radix 10
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; output radix 10
PASS: gdb.base/radix.exp: initialize radix, output radix 16
PASS: gdb.base/radix.exp: set output-radix 16
PASS: gdb.base/radix.exp: show radix, output radix 16
PASS: gdb.base/radix.exp: print 010; expect 8; output radix 16
PASS: gdb.base/radix.exp: print 0xf; expect f; output radix 16
PASS: gdb.base/radix.exp: print 10; expect a; output radix 16
PASS: gdb.base/radix.exp: print 100; expect 64; output radix 16
KFAIL: gdb.base/radix.exp: print 20.; expect 14; output radix 16 (PRMS: gdb/1715)
PASS: gdb.base/radix.exp: print (int) 20.; expect 14; output radix 16
PASS: gdb.base/radix.exp: Reset radices
PASS: gdb.base/radix.exp: Reject input-radix 0
PASS: gdb.base/radix.exp: Input radix unchanged after rejecting 0
PASS: gdb.base/radix.exp: Reject input-radix 1
PASS: gdb.base/radix.exp: Input radix unchanged after rejecting 1
PASS: gdb.base/radix.exp: Reject output-radix 0
PASS: gdb.base/radix.exp: Output radix unchanged after rejecting 0
PASS: gdb.base/radix.exp: Reject output-radix 1
PASS: gdb.base/radix.exp: Output radix unchanged after rejecting 1
PASS: gdb.base/radix.exp: set radix 7 rejected
PASS: gdb.base/radix.exp: Output radix unchanged after rejection through set radix command
Running ../../../gdb/testsuite/gdb.base/hashline3.exp ...
PASS: gdb.base/hashline3.exp: set breakpoint
Running ../../../gdb/testsuite/gdb.base/nofield.exp ...
PASS: gdb.base/nofield.exp: ptype struct not_empty
PASS: gdb.base/nofield.exp: ptype struct empty
PASS: gdb.base/nofield.exp: ptype union empty_union
Running ../../../gdb/testsuite/gdb.base/fileio.exp ...
Running ../../../gdb/testsuite/gdb.base/remote.exp ...
PASS: gdb.base/remote.exp: write-packet default
PASS: gdb.base/remote.exp: set write-packet - NULL
PASS: gdb.base/remote.exp: set remote memory-write-packet-size 20
PASS: gdb.base/remote.exp: set write-packet - small
PASS: gdb.base/remote.exp: set remote memory-write-packet-size 1
PASS: gdb.base/remote.exp: set write-packet - very-small
PASS: gdb.base/remote.exp: timed download `remote' - limit, 398 - set packet size
PASS: gdb.base/remote.exp: timed download `remote' - limit, 398
PASS: gdb.base/remote.exp: timed download `remote' - limit, 400 - set packet size
PASS: gdb.base/remote.exp: timed download `remote' - limit, 400
PASS: gdb.base/remote.exp: timed download `remote' - fixed, 0 - set packet size
PASS: gdb.base/remote.exp: timed download `remote' - fixed, 0 - set write size class
PASS: gdb.base/remote.exp: timed download `remote' - fixed, 16385 - set packet size
PASS: gdb.base/remote.exp: timed download `remote' - limit, 0 - set packet size
PASS: gdb.base/remote.exp: timed download `remote' - limit, 0
PASS: gdb.base/remote.exp: get integer valueof "sizeof (random_data)" (49152)
PASS: gdb.base/remote.exp: x/8ub random_data
PASS: gdb.base/remote.exp: x/8ub random_data + 400 - 4
PASS: gdb.base/remote.exp: x/8ub random_data + 16384 - 4
PASS: gdb.base/remote.exp: set remote memory-read-packet-size 16
PASS: gdb.base/remote.exp: show remote memory-read-packet-size
PASS: gdb.base/remote.exp: x/17ub random_data
PASS: gdb.base/remote.exp: set remote hardware-watchpoint-limit -1
PASS: gdb.base/remote.exp: set remote hardware-breakpoint-limit -1
PASS: gdb.base/remote.exp: set remote hardware-watchpoint-limit 2147483647
PASS: gdb.base/remote.exp: set remote hardware-breakpoint-limit 2147483647
Running ../../../gdb/testsuite/gdb.base/complex.exp ...
PASS: gdb.base/complex.exp: print complex packed value in C
PASS: gdb.base/complex.exp: print complex value in C
Running ../../../gdb/testsuite/gdb.base/paginate-after-ctrl-c-running.exp ...
PASS: gdb.base/paginate-after-ctrl-c-running.exp: ctrlc target running: set breakpoint
PASS: gdb.base/paginate-after-ctrl-c-running.exp: ctrlc target running: set height 2
PASS: gdb.base/paginate-after-ctrl-c-running.exp: ctrlc target running: set pagination on
PASS: gdb.base/paginate-after-ctrl-c-running.exp: ctrlc target running: continue
PASS: gdb.base/paginate-after-ctrl-c-running.exp: ctrlc target running: got prompt
PASS: gdb.base/paginate-after-ctrl-c-running.exp: ctrlc target running: GDB accepts further input
PASS: gdb.base/paginate-after-ctrl-c-running.exp: ctrlc target running: set height unlimited
Running ../../../gdb/testsuite/gdb.base/compare-sections.exp ...
PASS: gdb.base/compare-sections.exp: after file: compare-sections
PASS: gdb.base/compare-sections.exp: after file: compare-sections -r
PASS: gdb.base/compare-sections.exp: after reload: compare-sections
PASS: gdb.base/compare-sections.exp: after reload: compare-sections -r
PASS: gdb.base/compare-sections.exp: compare-sections .text
PASS: gdb.base/compare-sections.exp: after run to main: compare-sections
PASS: gdb.base/compare-sections.exp: after run to main: compare-sections -r
PASS: gdb.base/compare-sections.exp: read-only: list read-only sections
PASS: gdb.base/compare-sections.exp: read-only: get value of read-only section
PASS: gdb.base/compare-sections.exp: read-only: corrupt read-only section
PASS: gdb.base/compare-sections.exp: read-only: compare-sections -r
Running ../../../gdb/testsuite/gdb.base/infoline.exp ...
PASS: gdb.base/infoline.exp: info line infoline.c:18
Running ../../../gdb/testsuite/gdb.base/hook-stop.exp ...
PASS: gdb.base/hook-stop.exp: hook-stop runs before frame print: breakpoint line number
PASS: gdb.base/hook-stop.exp: hook-stop runs before frame print: define hook-stop command
PASS: gdb.base/hook-stop.exp: hook-stop runs before frame print: run hook-stop
PASS: gdb.base/hook-stop.exp: hook-stop kills inferior: breakpoint line number
PASS: gdb.base/hook-stop.exp: hook-stop kills inferior: define hook-stop command
PASS: gdb.base/hook-stop.exp: hook-stop kills inferior: set confirm off
PASS: gdb.base/hook-stop.exp: hook-stop kills inferior: run hook-stop
PASS: gdb.base/hook-stop.exp: hook-stop kills inferior: info threads
PASS: gdb.base/hook-stop.exp: hook-stop runs continue: breakpoint line number
PASS: gdb.base/hook-stop.exp: hook-stop runs continue: define hook-stop command
PASS: gdb.base/hook-stop.exp: hook-stop runs continue: print $do_continue = 1
PASS: gdb.base/hook-stop.exp: hook-stop runs continue: next triggering hook-stop
PASS: gdb.base/hook-stop.exp: hook-stop runs continue: next no hook-stop
PASS: gdb.base/hook-stop.exp: hook-stop runs continue&: breakpoint line number
PASS: gdb.base/hook-stop.exp: hook-stop runs continue&: define hook-stop command
PASS: gdb.base/hook-stop.exp: hook-stop runs continue&: print $do_continue = 1
PASS: gdb.base/hook-stop.exp: hook-stop runs continue&: run hook-stop
PASS: gdb.base/hook-stop.exp: hook-stop runs continue&: inferior exits normally
PASS: gdb.base/hook-stop.exp: hook-stop runs continue&: info threads
PASS: gdb.base/hook-stop.exp: hook-stop runs next: breakpoint line number
PASS: gdb.base/hook-stop.exp: hook-stop runs next: define hook-stop command
PASS: gdb.base/hook-stop.exp: hook-stop runs next: run hook-stop
Running ../../../gdb/testsuite/gdb.base/completion.exp ...
PASS: gdb.base/completion.exp: set max-completions unlimited
PASS: gdb.base/completion.exp: field completion with invalid field
PASS: gdb.base/completion.exp: test non-deprecated completion
PASS: gdb.base/completion.exp: test deprecated completion
PASS: gdb.base/completion.exp: complete ptype struct some_
PASS: gdb.base/completion.exp: complete ptype enum some_
PASS: gdb.base/completion.exp: complete ptype union some_
PASS: gdb.base/completion.exp: complete set gnutarget aut
PASS: gdb.base/completion.exp: complete set cp-abi aut
PASS: gdb.base/completion.exp: complete target core
PASS: gdb.base/completion.exp: complete target tfile
PASS: gdb.base/completion.exp: complete target exec
PASS: gdb.base/completion.exp: complete set height
PASS: gdb.base/completion.exp: complete set height u
PASS: gdb.base/completion.exp: complete set listsize
PASS: gdb.base/completion.exp: complete set listsize unl
PASS: gdb.base/completion.exp: complete set trace-buffer-size
PASS: gdb.base/completion.exp: complete set trace-buffer-size unl
PASS: gdb.base/completion.exp: complete 'info registers '
PASS: gdb.base/completion.exp: complete 'hfgfh'
PASS: gdb.base/completion.exp: complete 'show output'
PASS: gdb.base/completion.exp: complete 'show output-'
PASS: gdb.base/completion.exp: complete 'p'
PASS: gdb.base/completion.exp: complete 'p '
PASS: gdb.base/completion.exp: complete 'info t foo'
PASS: gdb.base/completion.exp: complete 'info t'
PASS: gdb.base/completion.exp: complete 'info t '
PASS: gdb.base/completion.exp: complete 'info asdfgh'
PASS: gdb.base/completion.exp: complete 'info asdfgh '
PASS: gdb.base/completion.exp: complete 'info'
PASS: gdb.base/completion.exp: complete 'info '
PASS: gdb.base/completion.exp: complete (2) 'info '
PASS: gdb.base/completion.exp: complete 'help info wat'
PASS: gdb.base/completion.exp: complete 'p "break1'
XFAIL: gdb.base/completion.exp: complete 'p "break1.'
PASS: gdb.base/completion.exp: complete 'p 'arg'
PASS: gdb.base/completion.exp: complete (2) 'p 'arg'
PASS: gdb.base/completion.exp: complete 'handle signal'
PASS: gdb.base/completion.exp: complete 'handle keyword'
PASS: gdb.base/completion.exp: complete help aliases
PASS: gdb.base/completion.exp: complete 'p no_var_named_this-arg'
PASS: gdb.base/completion.exp: complete (2) 'p no_var_named_this-arg'
PASS: gdb.base/completion.exp: complete (2) 'p no_var_named_this-' (eat prompt)
PASS: gdb.base/completion.exp: complete (2) 'p no_var_named_this-'
PASS: gdb.base/completion.exp: complete 'p values[0].a'
PASS: gdb.base/completion.exp: complete 'p values[0] . a'
PASS: gdb.base/completion.exp: complete 'p &values[0] -> a'
PASS: gdb.base/completion.exp: completion of field in anonymous union
PASS: gdb.base/completion.exp: ptype completion of field in anonymous union
PASS: gdb.base/completion.exp: whatis completion of field in anonymous union
PASS: gdb.base/completion.exp: cd to ${srcdir}
PASS: gdb.base/completion.exp: directory completion
PASS: gdb.base/completion.exp: directory completion 2
PASS: gdb.base/completion.exp: Glob remaining of directory test
PASS: gdb.base/completion.exp: complete-command 'file ./gdb.base/compl'
PASS: gdb.base/completion.exp: complete 'file ./gdb.base/complet'
PASS: gdb.base/completion.exp: complete 'info func marke'
PASS: gdb.base/completion.exp: complete 'set follow-fork-mode'
PASS: gdb.base/completion.exp: set breakpoint pending off
PASS: gdb.base/completion.exp: tab complete break break
PASS: gdb.base/completion.exp: complete break break
PASS: gdb.base/completion.exp: tab complete break need
PASS: gdb.base/completion.exp: delete breakpoint for tab complete break need
PASS: gdb.base/completion.exp: complete break need
PASS: gdb.base/completion.exp: set max-completions 10
PASS: gdb.base/completion.exp: tab complete break break.c:ma
PASS: gdb.base/completion.exp: delete breakpoint for tab complete break break.c:ma
PASS: gdb.base/completion.exp: complete break break.c:ma
PASS: gdb.base/completion.exp: set max-completions 5
PASS: gdb.base/completion.exp: command-name completion limiting using tab character
PASS: gdb.base/completion.exp: command-name completion limiting using complete command
PASS: gdb.base/completion.exp: set max-completions 3
PASS: gdb.base/completion.exp: symbol-name completion limiting using tab character
PASS: gdb.base/completion.exp: symbol-name completion limiting using complete command
PASS: gdb.base/completion.exp: set max-completions unlimited
PASS: gdb.base/completion.exp: test completion of layout names
PASS: gdb.base/completion.exp: quit command input after testing layout completion
PASS: gdb.base/completion.exp: focus command: test completion
PASS: gdb.base/completion.exp: focus command: quit command input after testing completion
Running ../../../gdb/testsuite/gdb.base/a2-run.exp ...
Running ../../../gdb/testsuite/gdb.base/gdb-sigterm-2.exp ...
PASS: gdb.base/gdb-sigterm-2.exp: expect eof
Running ../../../gdb/testsuite/gdb.base/checkpoint.exp ...
Running ../../../gdb/testsuite/gdb.base/gnu-debugdata.exp ...
PASS: gdb.base/gnu-debugdata.exp: nm -D - invoke k1-nm
PASS: gdb.base/gnu-debugdata.exp: nm -D - invoke awk
PASS: gdb.base/gnu-debugdata.exp: nm -D - invoke sort
PASS: gdb.base/gnu-debugdata.exp: nm - invoke k1-nm
PASS: gdb.base/gnu-debugdata.exp: nm - invoke awk
PASS: gdb.base/gnu-debugdata.exp: nm - invoke sort
PASS: gdb.base/gnu-debugdata.exp: comm
PASS: gdb.base/gnu-debugdata.exp: strip
PASS: gdb.base/gnu-debugdata.exp: copydebug
PASS: gdb.base/gnu-debugdata.exp: objcopy 1
PASS: gdb.base/gnu-debugdata.exp: addlink
PASS: gdb.base/gnu-debugdata.exp: xz
PASS: gdb.base/gnu-debugdata.exp: objcopy 2
PASS: gdb.base/gnu-debugdata.exp: no symtab
PASS: gdb.base/gnu-debugdata.exp: have symtab
PASS: gdb.base/gnu-debugdata.exp: unload MiniDebugInfo
Running ../../../gdb/testsuite/gdb.base/solib-nodir.exp ...
Running ../../../gdb/testsuite/gdb.base/disasm-optim.exp ...
Running ../../../gdb/testsuite/gdb.base/catch-signal.exp ...
Running ../../../gdb/testsuite/gdb.base/solib-search.exp ...
UNTESTED: gdb.base/solib-search.exp: solib-search.exp
Running ../../../gdb/testsuite/gdb.base/statistics.exp ...
PASS: gdb.base/statistics.exp: startup time and space
Running ../../../gdb/testsuite/gdb.base/vla-sideeffect.exp ...
PASS: gdb.base/vla-sideeffect.exp: continue to breakpoint: vla-filled
PASS: gdb.base/vla-sideeffect.exp: get integer valueof "sizeof (int)" (4)
PASS: gdb.base/vla-sideeffect.exp: print sizeof (vla1[i++])
PASS: gdb.base/vla-sideeffect.exp: print i - sizeof no side effects
PASS: gdb.base/vla-sideeffect.exp: print sizeof (++vla1[0])
PASS: gdb.base/vla-sideeffect.exp: print vla1[0] - sizeof no side effects
PASS: gdb.base/vla-sideeffect.exp: ptype ++vla1[0]
PASS: gdb.base/vla-sideeffect.exp: print vla1[0] - ptype no side effects
PASS: gdb.base/vla-sideeffect.exp: whatis ++vla1[0]
PASS: gdb.base/vla-sideeffect.exp: print vla1[0] - whatis no side effects
PASS: gdb.base/vla-sideeffect.exp: print sizeof (vla2[i++])
PASS: gdb.base/vla-sideeffect.exp: print i - sizeof with side effects (1)
PASS: gdb.base/vla-sideeffect.exp: print sizeof (vla2[i++ + sizeof(j++)])
PASS: gdb.base/vla-sideeffect.exp: print i - sizeof with side effects (2)
PASS: gdb.base/vla-sideeffect.exp: print j - sizeof with no side effects
PASS: gdb.base/vla-sideeffect.exp: ptype vla2[i++]
PASS: gdb.base/vla-sideeffect.exp: print i - ptype with side effects (1)
PASS: gdb.base/vla-sideeffect.exp: ptype vla2[i++ + sizeof(j++)]
PASS: gdb.base/vla-sideeffect.exp: print i - ptype with side effects (2)
PASS: gdb.base/vla-sideeffect.exp: print j - ptype with no side effects
PASS: gdb.base/vla-sideeffect.exp: whatis vla2[i++]
PASS: gdb.base/vla-sideeffect.exp: print i - whatis with side effects (1)
PASS: gdb.base/vla-sideeffect.exp: whatis vla2[i++ + sizeof(j++)]
PASS: gdb.base/vla-sideeffect.exp: print i - whatis with side effects (2)
PASS: gdb.base/vla-sideeffect.exp: print j - whatis with no side effects
Running ../../../gdb/testsuite/gdb.base/prelink.exp ...
Running ../../../gdb/testsuite/gdb.base/bitfields.exp ...
PASS: gdb.base/bitfields.exp: set print sevenbit-strings
PASS: gdb.base/bitfields.exp: print flags
PASS: gdb.base/bitfields.exp: continuing to break1 #1
PASS: gdb.base/bitfields.exp: bitfield uniqueness (s1)
PASS: gdb.base/bitfields.exp: continuing to break1 #2
PASS: gdb.base/bitfields.exp: bitfield uniqueness (u1)
PASS: gdb.base/bitfields.exp: continuing to break1 #3
PASS: gdb.base/bitfields.exp: bitfield uniqueness (s2)
PASS: gdb.base/bitfields.exp: continuing to break1 #4
PASS: gdb.base/bitfields.exp: bitfield uniqueness (u2)
PASS: gdb.base/bitfields.exp: continuing to break1 #5
PASS: gdb.base/bitfields.exp: bitfield uniqueness (s3)
PASS: gdb.base/bitfields.exp: continuing to break1 #6
PASS: gdb.base/bitfields.exp: bitfield uniqueness (u3)
PASS: gdb.base/bitfields.exp: continuing to break1 #7
PASS: gdb.base/bitfields.exp: bitfield uniqueness (s9)
PASS: gdb.base/bitfields.exp: continuing to break1 #8
PASS: gdb.base/bitfields.exp: bitfield uniqueness (u9)
PASS: gdb.base/bitfields.exp: continuing to break1 #9
PASS: gdb.base/bitfields.exp: bitfield uniqueness (sc)
PASS: gdb.base/bitfields.exp: bitfield containment #1
PASS: gdb.base/bitfields.exp: continuing to break2
PASS: gdb.base/bitfields.exp: bitfield containment #2
PASS: gdb.base/bitfields.exp: unsigned bitfield ranges
PASS: gdb.base/bitfields.exp: signed bitfields, max positive values
PASS: gdb.base/bitfields.exp: continuing to break4 #1
PASS: gdb.base/bitfields.exp: determining signed-ness of bitfields
PASS: gdb.base/bitfields.exp: signed bitfields, max negative values
PASS: gdb.base/bitfields.exp: continuing to break4 #2
PASS: gdb.base/bitfields.exp: signed bitfields with -1
PASS: gdb.base/bitfields.exp: continuing to break5
PASS: gdb.base/bitfields.exp: distinct bitfields in container
PASS: gdb.base/bitfields.exp: print container.one.u3
PASS: gdb.base/bitfields.exp: print container.two.u3
PASS: gdb.base/bitfields.exp: set internal var
PASS: gdb.base/bitfields.exp: set $myvar.a = 0
PASS: gdb.base/bitfields.exp: set $myvar.inner.b = 1
PASS: gdb.base/bitfields.exp: set $myvar.inner.deep.c = 0
PASS: gdb.base/bitfields.exp: set $myvar.inner.deep.d = -1
PASS: gdb.base/bitfields.exp: set $myvar.inner.e = 1
PASS: gdb.base/bitfields.exp: set $myvar.f = 1
PASS: gdb.base/bitfields.exp: print $myvar.a
PASS: gdb.base/bitfields.exp: print $myvar.inner.b
PASS: gdb.base/bitfields.exp: print $myvar.inner.deep.c
PASS: gdb.base/bitfields.exp: print $myvar.inner.deep.d
PASS: gdb.base/bitfields.exp: print $myvar.inner.e
PASS: gdb.base/bitfields.exp: print $myvar.f
Running ../../../gdb/testsuite/gdb.base/func-ptrs.exp ...
PASS: gdb.base/func-ptrs.exp: breakpoint at sentinel
PASS: gdb.base/func-ptrs.exp: breakpoint at incr
PASS: gdb.base/func-ptrs.exp: breakpoint at decr
PASS: gdb.base/func-ptrs.exp: continue to incr, first time
PASS: gdb.base/func-ptrs.exp: go back to main from incr, first time
PASS: gdb.base/func-ptrs.exp: set calc to decr
PASS: gdb.base/func-ptrs.exp: continue to decr
PASS: gdb.base/func-ptrs.exp: stop in sentinel
PASS: gdb.base/func-ptrs.exp: move up to decr
PASS: gdb.base/func-ptrs.exp: go back to main from decr
PASS: gdb.base/func-ptrs.exp: set calc to incr
PASS: gdb.base/func-ptrs.exp: continue to incr, second time
PASS: gdb.base/func-ptrs.exp: go back to main from incr, second time
Running ../../../gdb/testsuite/gdb.base/sss-bp-on-user-bp.exp ...
PASS: gdb.base/sss-bp-on-user-bp.exp: continue to breakpoint: first breakpoint
PASS: gdb.base/sss-bp-on-user-bp.exp: disassemble main
PASS: gdb.base/sss-bp-on-user-bp.exp: b *0x00001008
PASS: gdb.base/sss-bp-on-user-bp.exp: set breakpoint always-inserted on
PASS: gdb.base/sss-bp-on-user-bp.exp: si
PASS: gdb.base/sss-bp-on-user-bp.exp: jump *$pc
Running ../../../gdb/testsuite/gdb.base/ldbl_e308.exp ...
PASS: gdb.base/ldbl_e308.exp: set variable ldbl_308 = 1.6e+308l
PASS: gdb.base/ldbl_e308.exp: print ldbl_308
Running ../../../gdb/testsuite/gdb.base/nodebug.exp ...
PASS: gdb.base/nodebug.exp: p top
PASS: gdb.base/nodebug.exp: whatis top
PASS: gdb.base/nodebug.exp: ptype top
PASS: gdb.base/nodebug.exp: p middle
PASS: gdb.base/nodebug.exp: whatis middle
PASS: gdb.base/nodebug.exp: ptype middle
PASS: gdb.base/nodebug.exp: p dataglobal
PASS: gdb.base/nodebug.exp: whatis dataglobal
PASS: gdb.base/nodebug.exp: ptype dataglobal
PASS: gdb.base/nodebug.exp: p datalocal
PASS: gdb.base/nodebug.exp: whatis datalocal
PASS: gdb.base/nodebug.exp: ptype datalocal
PASS: gdb.base/nodebug.exp: p bssglobal
PASS: gdb.base/nodebug.exp: whatis bssglobal
PASS: gdb.base/nodebug.exp: ptype bssglobal
PASS: gdb.base/nodebug.exp: p bsslocal
PASS: gdb.base/nodebug.exp: whatis bsslocal
PASS: gdb.base/nodebug.exp: ptype bsslocal
FAIL: gdb.base/nodebug.exp: backtrace from inner in nodebug.exp
PASS: gdb.base/nodebug.exp: p/c array_index("abcdef",2)
FAIL: gdb.base/nodebug.exp: backtrace from middle in nodebug.exp
Running ../../../gdb/testsuite/gdb.base/setshow.exp ...
PASS: gdb.base/setshow.exp: default annotation_level is zero
PASS: gdb.base/setshow.exp: set annotate 2
PASS: gdb.base/setshow.exp: show annotate 2
PASS: gdb.base/setshow.exp: annotation_level 2
PASS: gdb.base/setshow.exp: set annotate 1
PASS: gdb.base/setshow.exp: show annotate (1)
PASS: gdb.base/setshow.exp: annotation_level 1
PASS: gdb.base/setshow.exp: set annotate 0
PASS: gdb.base/setshow.exp: show annotate (0)
PASS: gdb.base/setshow.exp: annotation_level 0
PASS: gdb.base/setshow.exp: set args ~
PASS: gdb.base/setshow.exp: show args ~
PASS: gdb.base/setshow.exp: set args
PASS: gdb.base/setshow.exp: show args
PASS: gdb.base/setshow.exp: set check range on
PASS: gdb.base/setshow.exp: show check range (on)
PASS: gdb.base/setshow.exp: set check range off
PASS: gdb.base/setshow.exp: show check range (off)
PASS: gdb.base/setshow.exp: set check range auto
PASS: gdb.base/setshow.exp: show check range (auto)
PASS: gdb.base/setshow.exp: set check type on
PASS: gdb.base/setshow.exp: show check type (on)
PASS: gdb.base/setshow.exp: set check type off
PASS: gdb.base/setshow.exp: show check type (off)
PASS: gdb.base/setshow.exp: set complaints 100
PASS: gdb.base/setshow.exp: show complaints (100)
PASS: gdb.base/setshow.exp: set complaints 0
PASS: gdb.base/setshow.exp: show complaints (0)
PASS: gdb.base/setshow.exp: set confirm off
PASS: gdb.base/setshow.exp: show confirm (off)
PASS: gdb.base/setshow.exp: set confirm on
PASS: gdb.base/setshow.exp: show confirm (on)
PASS: gdb.base/setshow.exp: set editing off
PASS: gdb.base/setshow.exp: show editing (off)
PASS: gdb.base/setshow.exp: set environment FOOBARBAZ
PASS: gdb.base/setshow.exp: show environment FOOBARBAZ
PASS: gdb.base/setshow.exp: set height 100
PASS: gdb.base/setshow.exp: show height
PASS: gdb.base/setshow.exp: set height unlimited
PASS: gdb.base/setshow.exp: set history expansion on
PASS: gdb.base/setshow.exp: show history expansion
PASS: gdb.base/setshow.exp: show environment HOME
PASS: gdb.base/setshow.exp: set history filename ~/foobar.baz
PASS: gdb.base/setshow.exp: show history filename (~/foobar.baz)
PASS: gdb.base/setshow.exp: show working directory
PASS: gdb.base/setshow.exp: set history filename foobar.baz
PASS: gdb.base/setshow.exp: show history filename (current_directory/foobar.baz)
PASS: gdb.base/setshow.exp: set history save on
PASS: gdb.base/setshow.exp: show history save (on)
PASS: gdb.base/setshow.exp: set history save off
PASS: gdb.base/setshow.exp: set history size 100
PASS: gdb.base/setshow.exp: show history size (100)
PASS: gdb.base/setshow.exp: set language asm
PASS: gdb.base/setshow.exp: show language (asm)
PASS: gdb.base/setshow.exp: set language java
PASS: gdb.base/setshow.exp: show language (java)
PASS: gdb.base/setshow.exp: complete set language minimal
PASS: gdb.base/setshow.exp: set language auto
PASS: gdb.base/setshow.exp: show language (auto)
PASS: gdb.base/setshow.exp: set listsize 100
PASS: gdb.base/setshow.exp: show listsize (100)
PASS: gdb.base/setshow.exp: set prompt FooBarBaz
PASS: gdb.base/setshow.exp: show prompt FooBarBaz
PASS: gdb.base/setshow.exp: set prompt gdb
PASS: gdb.base/setshow.exp: set radix 11
PASS: gdb.base/setshow.exp: set radix 16
PASS: gdb.base/setshow.exp: show radix (16)
PASS: gdb.base/setshow.exp: set radix 10
PASS: gdb.base/setshow.exp: show radix (10)
PASS: gdb.base/setshow.exp: set width 90
PASS: gdb.base/setshow.exp: show width (90)
PASS: gdb.base/setshow.exp: set write on
PASS: gdb.base/setshow.exp: show write (on)
PASS: gdb.base/setshow.exp: show user
PASS: gdb.base/setshow.exp: set verbose on
PASS: gdb.base/setshow.exp: show verbose (on)
PASS: gdb.base/setshow.exp: set verbose off
PASS: gdb.base/setshow.exp: show verbose (off)
PASS: gdb.base/setshow.exp: history file is not set to /home/
PASS: gdb.base/setshow.exp: history file is not set to .
PASS: gdb.base/setshow.exp: history file is not set to ~/home
PASS: gdb.base/setshow.exp: history file is not set to =home
PASS: gdb.base/setshow.exp: solib-search-path is not set to /home/
PASS: gdb.base/setshow.exp: solib-search-path is not set to .
PASS: gdb.base/setshow.exp: solib-search-path is not set to ~/home
PASS: gdb.base/setshow.exp: solib-search-path is not set to =home
PASS: gdb.base/setshow.exp: data-directory is not set to /home/
PASS: gdb.base/setshow.exp: data-directory is not set to .
PASS: gdb.base/setshow.exp: data-directory is not set to ~/home
PASS: gdb.base/setshow.exp: data-directory is not set to =home
Running ../../../gdb/testsuite/gdb.base/solib-overlap.exp ...
Running ../../../gdb/testsuite/gdb.base/chng-syms.exp ...
PASS: gdb.base/chng-syms.exp: setting conditional breakpoint on function
PASS: gdb.base/chng-syms.exp: running to stop_here first time
PASS: gdb.base/chng-syms.exp: continue until exit at breakpoint first time through
PASS: gdb.base/chng-syms.exp: running with invalidated bpt condition after executable changes
Running ../../../gdb/testsuite/gdb.base/anon.exp ...
PASS: gdb.base/anon.exp: set breakpoint in anon.c
PASS: gdb.base/anon.exp: continue to breakpoint: continue to breakpoint in anon.c
PASS: gdb.base/anon.exp: print val.data.six
Running ../../../gdb/testsuite/gdb.base/setvar.exp ...
PASS: gdb.base/setvar.exp: set print sevenbit-strings
PASS: gdb.base/setvar.exp: set variable char=0
PASS: gdb.base/setvar.exp: set variable char=1
PASS: gdb.base/setvar.exp: set variable char=7 (Bel)
PASS: gdb.base/setvar.exp: set variable char=32 (SPC)
PASS: gdb.base/setvar.exp: set variable char=65 ('A')
PASS: gdb.base/setvar.exp: set variable char=97 ('a')
PASS: gdb.base/setvar.exp: set variable char=126 ('~')
PASS: gdb.base/setvar.exp: set variable char=127 (8-bit)
PASS: gdb.base/setvar.exp: set variable signed char=0
PASS: gdb.base/setvar.exp: set variable signed char=1
PASS: gdb.base/setvar.exp: set variable signed char=7 (Bel)
PASS: gdb.base/setvar.exp: set variable signed char=32 (SPC)
PASS: gdb.base/setvar.exp: set variable signed char=65 ('A')
PASS: gdb.base/setvar.exp: set variable signed char=97 ('a')
PASS: gdb.base/setvar.exp: set variable signed char=126 ('~')
PASS: gdb.base/setvar.exp: set variable signed char=127 (8-bit)
PASS: gdb.base/setvar.exp: set variable v_signed_char=-1
PASS: gdb.base/setvar.exp: set variable signed char=-1 (-1)
PASS: gdb.base/setvar.exp: set variable v_signed_char=0xFF
PASS: gdb.base/setvar.exp: set variable signed char=0xFF (0xFF)
PASS: gdb.base/setvar.exp: set variable unsigned char=0
PASS: gdb.base/setvar.exp: set variable unsigned char=1
PASS: gdb.base/setvar.exp: set variable unsigned char=7 (Bel)
PASS: gdb.base/setvar.exp: set variable unsigned char=32 (SPC)
PASS: gdb.base/setvar.exp: set variable unsigned char=65 ('A')
PASS: gdb.base/setvar.exp: set variable unsigned char=97 ('a')
PASS: gdb.base/setvar.exp: set variable unsigned char=126 ('~')
PASS: gdb.base/setvar.exp: set variable unsigned char=255 (8-bit)
PASS: gdb.base/setvar.exp: set variable short=0
PASS: gdb.base/setvar.exp: set variable short=1
PASS: gdb.base/setvar.exp: set variable short=-1 (minus)
PASS: gdb.base/setvar.exp: set variable signed short=0
PASS: gdb.base/setvar.exp: set variable signed short=1
PASS: gdb.base/setvar.exp: set variable signed short=-1 (minus)
PASS: gdb.base/setvar.exp: set variable unsigned short=0
PASS: gdb.base/setvar.exp: set variable unsigned short=1
PASS: gdb.base/setvar.exp: set variable unsigned short=~0 (minus)
PASS: gdb.base/setvar.exp: set variable int=0
PASS: gdb.base/setvar.exp: set variable int=1
PASS: gdb.base/setvar.exp: set variable int=-1 (minus)
PASS: gdb.base/setvar.exp: set variable signed int=0
PASS: gdb.base/setvar.exp: set variable signed int=1
PASS: gdb.base/setvar.exp: set variable signed int=-1 (minus)
PASS: gdb.base/setvar.exp: set variable unsigned int=0
PASS: gdb.base/setvar.exp: set variable unsigned int=1
PASS: gdb.base/setvar.exp: set variable unsigned int=~0 (minus)
PASS: gdb.base/setvar.exp: set variable long=0
PASS: gdb.base/setvar.exp: set variable long=1
PASS: gdb.base/setvar.exp: set variable long=-1 (minus)
PASS: gdb.base/setvar.exp: set variable signed long=0
PASS: gdb.base/setvar.exp: set variable signed long=1
PASS: gdb.base/setvar.exp: set variable signed long=-1 (minus)
PASS: gdb.base/setvar.exp: set variable unsigned long=0
PASS: gdb.base/setvar.exp: set variable unsigned long=1
PASS: gdb.base/setvar.exp: set variable unsigned long=~0 (minus)
PASS: gdb.base/setvar.exp: set variable float=0
PASS: gdb.base/setvar.exp: set variable float=1
PASS: gdb.base/setvar.exp: set variable float=-1 (minus)
PASS: gdb.base/setvar.exp: set variable double=0
PASS: gdb.base/setvar.exp: set variable double=1
PASS: gdb.base/setvar.exp: set variable double=-1 (minus)
PASS: gdb.base/setvar.exp: set variable char array="hi" (string)
PASS: gdb.base/setvar.exp: set variable signed char array="hi" (string)
PASS: gdb.base/setvar.exp: set variable unsigned char array="hi" (string)
PASS: gdb.base/setvar.exp: set variable short array
PASS: gdb.base/setvar.exp: set variable signed short array
PASS: gdb.base/setvar.exp: set variable unsigned short array
PASS: gdb.base/setvar.exp: set variable int array
PASS: gdb.base/setvar.exp: set variable signed int array
PASS: gdb.base/setvar.exp: set variable unsigned int array
PASS: gdb.base/setvar.exp: set variable long array
PASS: gdb.base/setvar.exp: set variable signed long array
PASS: gdb.base/setvar.exp: set variable unsigned long array
PASS: gdb.base/setvar.exp: set variable float array
PASS: gdb.base/setvar.exp: set variable double array
PASS: gdb.base/setvar.exp: set variable char pointer="hi" (string)
PASS: gdb.base/setvar.exp: set variable char pointer="hi" (string) (#2)
PASS: gdb.base/setvar.exp: set variable signed char pointer="hi" (string)
PASS: gdb.base/setvar.exp: set variable signed char pointer="hi" (string) (#2)
PASS: gdb.base/setvar.exp: set variable unsigned char pointer="hi" (string)
PASS: gdb.base/setvar.exp: set variable unsigned char pointer="hi" (string) (#2)
PASS: gdb.base/setvar.exp: set variable short pointer
PASS: gdb.base/setvar.exp: set variable short pointer (#2)
PASS: gdb.base/setvar.exp: set v_signed_short_pointer=v_signed_short_array
PASS: gdb.base/setvar.exp: set variable *(v_signed_short_pointer)=123
PASS: gdb.base/setvar.exp: set variable *(v_signed_short_pointer+1)=-456
PASS: gdb.base/setvar.exp: set variable signed short pointer
PASS: gdb.base/setvar.exp: print *(v_signed_short_pointer+1)
PASS: gdb.base/setvar.exp: set v_unsigned_short_pointer=v_unsigned_short_array
PASS: gdb.base/setvar.exp: set variable *(v_unsigned_short_pointer)=123
PASS: gdb.base/setvar.exp: set variable *(v_unsigned_short_pointer+1)=-456
PASS: gdb.base/setvar.exp: set variable unsigned short pointer
PASS: gdb.base/setvar.exp: print *(v_unsigned_short_pointer+1)
PASS: gdb.base/setvar.exp: set variable int pointer
PASS: gdb.base/setvar.exp: set variable int pointer (#2)
PASS: gdb.base/setvar.exp: set variable signed int pointer
PASS: gdb.base/setvar.exp: set variable signed int pointer (#2)
PASS: gdb.base/setvar.exp: set variable unsigned int pointer
PASS: gdb.base/setvar.exp: print variable unsigned int pointer+1
PASS: gdb.base/setvar.exp: set variable long pointer
PASS: gdb.base/setvar.exp: set variable long pointer (#2)
PASS: gdb.base/setvar.exp: set variable signed long pointer
PASS: gdb.base/setvar.exp: set variable signed long pointer (#2)
PASS: gdb.base/setvar.exp: set variable unsigned long pointer
PASS: gdb.base/setvar.exp: set variable unsigned long pointer (#2)
PASS: gdb.base/setvar.exp: set variable float pointer
PASS: gdb.base/setvar.exp: set variable float pointer (#2)
PASS: gdb.base/setvar.exp: set variable double pointer
PASS: gdb.base/setvar.exp: set variable double pointer (#2)
PASS: gdb.base/setvar.exp: set variable structure char member
PASS: gdb.base/setvar.exp: set variable structure short member
PASS: gdb.base/setvar.exp: set variable structure int member
PASS: gdb.base/setvar.exp: set variable structure long member
PASS: gdb.base/setvar.exp: set variable structure float member
PASS: gdb.base/setvar.exp: set variable structure double member
PASS: gdb.base/setvar.exp: set print structure #1
PASS: gdb.base/setvar.exp: set print structure #2
PASS: gdb.base/setvar.exp: set print structure #3
PASS: gdb.base/setvar.exp: set print structure #4
PASS: gdb.base/setvar.exp: print sef.field=sm1
PASS: gdb.base/setvar.exp: print sef.field (sm1)
PASS: gdb.base/setvar.exp: print sef.field=s1
PASS: gdb.base/setvar.exp: print sef.field (s1)
PASS: gdb.base/setvar.exp: print uef.field=u2
PASS: gdb.base/setvar.exp: print uef.field (u2)
PASS: gdb.base/setvar.exp: print uef.field=u1
PASS: gdb.base/setvar.exp: print uef.field (u1)
PASS: gdb.base/setvar.exp: print sef.field=7
PASS: gdb.base/setvar.exp: print uef.field=6
Running ../../../gdb/testsuite/gdb.base/info-shared.exp ...
Running ../../../gdb/testsuite/gdb.base/stap-probe.exp ...
UNSUPPORTED: gdb.base/stap-probe.exp: stap-probe.exp
Running ../../../gdb/testsuite/gdb.base/watchpoints.exp ...
PASS: gdb.base/watchpoints.exp: before inferior start: create watchpoint
PASS: gdb.base/watchpoints.exp: before inferior start: create access watchpoint
PASS: gdb.base/watchpoints.exp: before inferior start: create read watchpoint
PASS: gdb.base/watchpoints.exp: watchpoint hit, first time
PASS: gdb.base/watchpoints.exp: watchpoint hit, first time
PASS: gdb.base/watchpoints.exp: Watchpoint hit count is 1
PASS: gdb.base/watchpoints.exp: watchpoint ival1 hit, second time
PASS: gdb.base/watchpoints.exp: Watchpoint ival1 hit count is 2
PASS: gdb.base/watchpoints.exp: watchpoint hit, second time
PASS: gdb.base/watchpoints.exp: Watchpoint hit count is 2
PASS: gdb.base/watchpoints.exp: watchpoint ival1 hit, third time
PASS: gdb.base/watchpoints.exp: Watchpoint ival1 hit count is 3
PASS: gdb.base/watchpoints.exp: watchpoint hit, third time
PASS: gdb.base/watchpoints.exp: Watchpoint hit count is 3
PASS: gdb.base/watchpoints.exp: watchpoint hit, fourth time
PASS: gdb.base/watchpoints.exp: Watchpoint hit count is 4
PASS: gdb.base/watchpoints.exp: watchpoint hit, fifth time
PASS: gdb.base/watchpoints.exp: Watchpoint hit count is 5
Running ../../../gdb/testsuite/gdb.base/break-main-file-remove-fail.exp ...
UNSUPPORTED: gdb.base/break-main-file-remove-fail.exp: break-main-file-remove-fail.exp
Running ../../../gdb/testsuite/gdb.base/longjmp.exp ...
PASS: gdb.base/longjmp.exp: breakpoint at pattern 1 start
PASS: gdb.base/longjmp.exp: continue to breakpoint at pattern 1 start
PASS: gdb.base/longjmp.exp: breakpoint at miss_step_1
PASS: gdb.base/longjmp.exp: next over setjmp (1)
PASS: gdb.base/longjmp.exp: next to longjmp (1)
PASS: gdb.base/longjmp.exp: next over longjmp(1)
PASS: gdb.base/longjmp.exp: next into else block (1)
PASS: gdb.base/longjmp.exp: next into safety net (1)
PASS: gdb.base/longjmp.exp: breakpoint at pattern 2 start
PASS: gdb.base/longjmp.exp: continue to breakpoint at pattern 2 start
PASS: gdb.base/longjmp.exp: breakpoint at miss_step_2
PASS: gdb.base/longjmp.exp: next over setjmp (2)
PASS: gdb.base/longjmp.exp: next over call_longjmp (2)
PASS: gdb.base/longjmp.exp: next into else block (2)
PASS: gdb.base/longjmp.exp: next into safety net (2)
PASS: gdb.base/longjmp.exp: breakpoint at pattern 3 start
PASS: gdb.base/longjmp.exp: continue to breakpoint at pattern 3 start
PASS: gdb.base/longjmp.exp: next over patt3
Running ../../../gdb/testsuite/gdb.base/info-proc.exp ...
PASS: gdb.base/info-proc.exp: help info proc
UNSUPPORTED: gdb.base/info-proc.exp: gdb does not support info proc on this target
Running ../../../gdb/testsuite/gdb.base/recpar.exp ...
PASS: gdb.base/recpar.exp: break recpar.c:26 if n == 3
PASS: gdb.base/recpar.exp: continue
PASS: gdb.base/recpar.exp: backtrace
PASS: gdb.base/recpar.exp: frame 2
PASS: gdb.base/recpar.exp: print foo::val
Running ../../../gdb/testsuite/gdb.base/restore.exp ...
PASS: gdb.base/restore.exp: tbreak caller1
PASS: gdb.base/restore.exp: run to caller1
PASS: gdb.base/restore.exp: caller1 calls callee1; tbreak callee
PASS: gdb.base/restore.exp: caller1 calls callee1; continue to callee
PASS: gdb.base/restore.exp: caller1 calls callee1; return callee now
PASS: gdb.base/restore.exp: caller1 calls callee1; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller1 calls callee2; tbreak callee
PASS: gdb.base/restore.exp: caller1 calls callee2; continue to callee
PASS: gdb.base/restore.exp: caller1 calls callee2; return callee now
PASS: gdb.base/restore.exp: caller1 calls callee2; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller1 calls callee3; tbreak callee
PASS: gdb.base/restore.exp: caller1 calls callee3; continue to callee
PASS: gdb.base/restore.exp: caller1 calls callee3; return callee now
PASS: gdb.base/restore.exp: caller1 calls callee3; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller1 calls callee4; tbreak callee
PASS: gdb.base/restore.exp: caller1 calls callee4; continue to callee
PASS: gdb.base/restore.exp: caller1 calls callee4; return callee now
PASS: gdb.base/restore.exp: caller1 calls callee4; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller1 calls callee5; tbreak callee
PASS: gdb.base/restore.exp: caller1 calls callee5; continue to callee
PASS: gdb.base/restore.exp: caller1 calls callee5; return callee now
PASS: gdb.base/restore.exp: caller1 calls callee5; return restored l1 to 32492
PASS: gdb.base/restore.exp: tbreak caller2
PASS: gdb.base/restore.exp: run to caller2
PASS: gdb.base/restore.exp: caller2 calls callee1; tbreak callee
PASS: gdb.base/restore.exp: caller2 calls callee1; continue to callee
PASS: gdb.base/restore.exp: caller2 calls callee1; return callee now
PASS: gdb.base/restore.exp: caller2 calls callee1; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller2 calls callee1; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller2 calls callee2; tbreak callee
PASS: gdb.base/restore.exp: caller2 calls callee2; continue to callee
PASS: gdb.base/restore.exp: caller2 calls callee2; return callee now
PASS: gdb.base/restore.exp: caller2 calls callee2; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller2 calls callee2; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller2 calls callee3; tbreak callee
PASS: gdb.base/restore.exp: caller2 calls callee3; continue to callee
PASS: gdb.base/restore.exp: caller2 calls callee3; return callee now
PASS: gdb.base/restore.exp: caller2 calls callee3; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller2 calls callee3; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller2 calls callee4; tbreak callee
PASS: gdb.base/restore.exp: caller2 calls callee4; continue to callee
PASS: gdb.base/restore.exp: caller2 calls callee4; return callee now
PASS: gdb.base/restore.exp: caller2 calls callee4; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller2 calls callee4; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller2 calls callee5; tbreak callee
PASS: gdb.base/restore.exp: caller2 calls callee5; continue to callee
PASS: gdb.base/restore.exp: caller2 calls callee5; return callee now
PASS: gdb.base/restore.exp: caller2 calls callee5; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller2 calls callee5; return restored l2 to 32493
PASS: gdb.base/restore.exp: tbreak caller3
PASS: gdb.base/restore.exp: run to caller3
PASS: gdb.base/restore.exp: caller3 calls callee1; tbreak callee
PASS: gdb.base/restore.exp: caller3 calls callee1; continue to callee
PASS: gdb.base/restore.exp: caller3 calls callee1; return callee now
PASS: gdb.base/restore.exp: caller3 calls callee1; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller3 calls callee1; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller3 calls callee1; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller3 calls callee2; tbreak callee
PASS: gdb.base/restore.exp: caller3 calls callee2; continue to callee
PASS: gdb.base/restore.exp: caller3 calls callee2; return callee now
PASS: gdb.base/restore.exp: caller3 calls callee2; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller3 calls callee2; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller3 calls callee2; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller3 calls callee3; tbreak callee
PASS: gdb.base/restore.exp: caller3 calls callee3; continue to callee
PASS: gdb.base/restore.exp: caller3 calls callee3; return callee now
PASS: gdb.base/restore.exp: caller3 calls callee3; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller3 calls callee3; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller3 calls callee3; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller3 calls callee4; tbreak callee
PASS: gdb.base/restore.exp: caller3 calls callee4; continue to callee
PASS: gdb.base/restore.exp: caller3 calls callee4; return callee now
PASS: gdb.base/restore.exp: caller3 calls callee4; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller3 calls callee4; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller3 calls callee4; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller3 calls callee5; tbreak callee
PASS: gdb.base/restore.exp: caller3 calls callee5; continue to callee
PASS: gdb.base/restore.exp: caller3 calls callee5; return callee now
PASS: gdb.base/restore.exp: caller3 calls callee5; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller3 calls callee5; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller3 calls callee5; return restored l3 to 32494
PASS: gdb.base/restore.exp: tbreak caller4
PASS: gdb.base/restore.exp: run to caller4
PASS: gdb.base/restore.exp: caller4 calls callee1; tbreak callee
PASS: gdb.base/restore.exp: caller4 calls callee1; continue to callee
PASS: gdb.base/restore.exp: caller4 calls callee1; return callee now
PASS: gdb.base/restore.exp: caller4 calls callee1; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller4 calls callee1; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller4 calls callee1; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller4 calls callee1; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller4 calls callee2; tbreak callee
PASS: gdb.base/restore.exp: caller4 calls callee2; continue to callee
PASS: gdb.base/restore.exp: caller4 calls callee2; return callee now
PASS: gdb.base/restore.exp: caller4 calls callee2; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller4 calls callee2; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller4 calls callee2; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller4 calls callee2; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller4 calls callee3; tbreak callee
PASS: gdb.base/restore.exp: caller4 calls callee3; continue to callee
PASS: gdb.base/restore.exp: caller4 calls callee3; return callee now
PASS: gdb.base/restore.exp: caller4 calls callee3; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller4 calls callee3; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller4 calls callee3; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller4 calls callee3; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller4 calls callee4; tbreak callee
PASS: gdb.base/restore.exp: caller4 calls callee4; continue to callee
PASS: gdb.base/restore.exp: caller4 calls callee4; return callee now
PASS: gdb.base/restore.exp: caller4 calls callee4; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller4 calls callee4; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller4 calls callee4; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller4 calls callee4; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller4 calls callee5; tbreak callee
PASS: gdb.base/restore.exp: caller4 calls callee5; continue to callee
PASS: gdb.base/restore.exp: caller4 calls callee5; return callee now
PASS: gdb.base/restore.exp: caller4 calls callee5; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller4 calls callee5; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller4 calls callee5; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller4 calls callee5; return restored l4 to 32495
PASS: gdb.base/restore.exp: tbreak caller5
PASS: gdb.base/restore.exp: run to caller5
PASS: gdb.base/restore.exp: caller5 calls callee1; tbreak callee
PASS: gdb.base/restore.exp: caller5 calls callee1; continue to callee
PASS: gdb.base/restore.exp: caller5 calls callee1; return callee now
PASS: gdb.base/restore.exp: caller5 calls callee1; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller5 calls callee1; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller5 calls callee1; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller5 calls callee1; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller5 calls callee1; return restored l5 to 32496
PASS: gdb.base/restore.exp: caller5 calls callee2; tbreak callee
PASS: gdb.base/restore.exp: caller5 calls callee2; continue to callee
PASS: gdb.base/restore.exp: caller5 calls callee2; return callee now
PASS: gdb.base/restore.exp: caller5 calls callee2; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller5 calls callee2; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller5 calls callee2; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller5 calls callee2; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller5 calls callee2; return restored l5 to 32496
PASS: gdb.base/restore.exp: caller5 calls callee3; tbreak callee
PASS: gdb.base/restore.exp: caller5 calls callee3; continue to callee
PASS: gdb.base/restore.exp: caller5 calls callee3; return callee now
PASS: gdb.base/restore.exp: caller5 calls callee3; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller5 calls callee3; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller5 calls callee3; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller5 calls callee3; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller5 calls callee3; return restored l5 to 32496
PASS: gdb.base/restore.exp: caller5 calls callee4; tbreak callee
PASS: gdb.base/restore.exp: caller5 calls callee4; continue to callee
PASS: gdb.base/restore.exp: caller5 calls callee4; return callee now
PASS: gdb.base/restore.exp: caller5 calls callee4; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller5 calls callee4; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller5 calls callee4; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller5 calls callee4; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller5 calls callee4; return restored l5 to 32496
PASS: gdb.base/restore.exp: caller5 calls callee5; tbreak callee
PASS: gdb.base/restore.exp: caller5 calls callee5; continue to callee
PASS: gdb.base/restore.exp: caller5 calls callee5; return callee now
PASS: gdb.base/restore.exp: caller5 calls callee5; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller5 calls callee5; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller5 calls callee5; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller5 calls callee5; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller5 calls callee5; return restored l5 to 32496
PASS: gdb.base/restore.exp: continue until exit
Running ../../../gdb/testsuite/gdb.base/jit-so.exp ...
UNTESTED: gdb.base/jit-so.exp: jit-so.exp
Running ../../../gdb/testsuite/gdb.base/nested-addr.exp ...
PASS: gdb.base/nested-addr.exp: continue to breakpoint: BREAK
PASS: gdb.base/nested-addr.exp: print &foo_array[1].a
PASS: gdb.base/nested-addr.exp: print 1 && &foo_array[1].a
Running ../../../gdb/testsuite/gdb.base/expand-psymtabs.exp ...
PASS: gdb.base/expand-psymtabs.exp: Expand psymtabs
Running ../../../gdb/testsuite/gdb.base/catch-signal-siginfo-cond.exp ...
Running ../../../gdb/testsuite/gdb.base/multi-line-starts-subshell.exp ...
PASS: gdb.base/multi-line-starts-subshell.exp: spawn subshell from multi-line
PASS: gdb.base/multi-line-starts-subshell.exp: shell input works
PASS: gdb.base/multi-line-starts-subshell.exp: exit shell
PASS: gdb.base/multi-line-starts-subshell.exp: gdb input still works
Running ../../../gdb/testsuite/gdb.base/mips_pro.exp ...
PASS: gdb.base/mips_pro.exp: backtrace
Running ../../../gdb/testsuite/gdb.base/source-dir.exp ...
PASS: gdb.base/source-dir.exp: directory /nOtExStInG/a /nOtExStInG/b /nOtExStInG/c
PASS: gdb.base/source-dir.exp: directory /nOtExStInG/b /nOtExStInG/d /nOtExStInG/c
Running ../../../gdb/testsuite/gdb.base/skip-solib.exp ...
Running ../../../gdb/testsuite/gdb.base/varargs.exp ...
PASS: gdb.base/varargs.exp: set print sevenbit-strings
PASS: gdb.base/varargs.exp: set print address off
PASS: gdb.base/varargs.exp: set width 0
Running ../../../gdb/testsuite/gdb.base/auto-load.exp ...
PASS: gdb.base/auto-load.exp: set auto-load scripts-directory
PASS: gdb.base/auto-load.exp: set auto-load safe-path
PASS: gdb.base/auto-load.exp: print $script_loaded
Running ../../../gdb/testsuite/gdb.base/kill-detach-inferiors-cmd.exp ...
Running ../../../gdb/testsuite/gdb.base/ptr-typedef.exp ...
PASS: gdb.base/ptr-typedef.exp: print foo_ptr
PASS: gdb.base/ptr-typedef.exp: print foz_ptr
Running ../../../gdb/testsuite/gdb.base/sym-file.exp ...
Running ../../../gdb/testsuite/gdb.base/remotetimeout.exp ...
PASS: gdb.base/remotetimeout.exp: correct remotetimeout printed
Running ../../../gdb/testsuite/gdb.base/paginate-bg-execution.exp ...
PASS: gdb.base/paginate-bg-execution.exp: paginate: b after_sleep
PASS: gdb.base/paginate-bg-execution.exp: paginate: set height 2
PASS: gdb.base/paginate-bg-execution.exp: paginate: set pagination on
PASS: gdb.base/paginate-bg-execution.exp: paginate: continue&
PASS: gdb.base/paginate-bg-execution.exp: paginate: pagination handled, breakpoint hit
PASS: gdb.base/paginate-bg-execution.exp: paginate: GDB accepts further input
PASS: gdb.base/paginate-bg-execution.exp: paginate: set height unlimited
PASS: gdb.base/paginate-bg-execution.exp: cancel with ctrl-c: b after_sleep
PASS: gdb.base/paginate-bg-execution.exp: cancel with ctrl-c: set height 2
PASS: gdb.base/paginate-bg-execution.exp: cancel with ctrl-c: set pagination on
PASS: gdb.base/paginate-bg-execution.exp: cancel with ctrl-c: continue&
PASS: gdb.base/paginate-bg-execution.exp: cancel with ctrl-c: continue& paginates
PASS: gdb.base/paginate-bg-execution.exp: cancel with ctrl-c: cancel pagination
PASS: gdb.base/paginate-bg-execution.exp: cancel with ctrl-c: GDB accepts further input
PASS: gdb.base/paginate-bg-execution.exp: cancel with ctrl-c: set height unlimited
PASS: gdb.base/paginate-bg-execution.exp: cancel with quit: b after_sleep
PASS: gdb.base/paginate-bg-execution.exp: cancel with quit: set height 2
PASS: gdb.base/paginate-bg-execution.exp: cancel with quit: set pagination on
PASS: gdb.base/paginate-bg-execution.exp: cancel with quit: continue&
PASS: gdb.base/paginate-bg-execution.exp: cancel with quit: continue& paginates
PASS: gdb.base/paginate-bg-execution.exp: cancel with quit: cancel pagination
PASS: gdb.base/paginate-bg-execution.exp: cancel with quit: GDB accepts further input
PASS: gdb.base/paginate-bg-execution.exp: cancel with quit: set height unlimited
Running ../../../gdb/testsuite/gdb.base/batch-preserve-term-settings.exp ...
PASS: gdb.base/batch-preserve-term-settings.exp: batch run: spawn shell
PASS: gdb.base/batch-preserve-term-settings.exp: batch run: stty before
PASS: gdb.base/batch-preserve-term-settings.exp: batch run: gdb -batch -ex run
PASS: gdb.base/batch-preserve-term-settings.exp: batch run: echo test_echo
PASS: gdb.base/batch-preserve-term-settings.exp: batch run: stty after
PASS: gdb.base/batch-preserve-term-settings.exp: batch run: terminal settings preserved
PASS: gdb.base/batch-preserve-term-settings.exp: batch run: exit shell
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit: spawn shell
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit: stty before
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit: start gdb
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit: quit gdb
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit: stty after
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit: terminal settings preserved
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit: exit shell
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after start cmd: spawn shell
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after start cmd: stty before
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after start cmd: start gdb
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after start cmd: run command start
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after start cmd: quit gdb
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after start cmd: stty after
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after start cmd: terminal settings preserved
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after start cmd: exit shell
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after run cmd: spawn shell
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after run cmd: stty before
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after run cmd: start gdb
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after run cmd: run command run
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after run cmd: quit gdb
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after run cmd: stty after
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after run cmd: terminal settings preserved
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after run cmd: exit shell
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after SIGTERM: spawn shell
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after SIGTERM: stty before
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after SIGTERM: start gdb
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after SIGTERM: run shell echo $PPID
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after SIGTERM: kill gdb with SIGTERM
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after SIGTERM: stty after
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after SIGTERM: terminal settings preserved
PASS: gdb.base/batch-preserve-term-settings.exp: cli exit after SIGTERM: exit shell
Running ../../../gdb/testsuite/gdb.base/print-file-var.exp ...
Running ../../../gdb/testsuite/gdb.base/siginfo-thread.exp ...
Running ../../../gdb/testsuite/gdb.base/reread.exp ...
PASS: gdb.base/reread.exp: breakpoint foo in first file
PASS: gdb.base/reread.exp: run to foo()
UNSUPPORTED: gdb.base/reread.exp: run to foo() second time
UNSUPPORTED: gdb.base/reread.exp: second pass: GDB should check for changes before running
Running ../../../gdb/testsuite/gdb.base/watch-cond-infcall.exp ...
PASS: gdb.base/watch-cond-infcall.exp: hw: watch var if return_1 ()
PASS: gdb.base/watch-cond-infcall.exp: hw: continue
PASS: gdb.base/watch-cond-infcall.exp: sw: watch var if return_1 ()
PASS: gdb.base/watch-cond-infcall.exp: sw: continue
Running ../../../gdb/testsuite/gdb.base/gcore.exp ...
PASS: gdb.base/gcore.exp: set breakpoint at terminal_func
PASS: gdb.base/gcore.exp: continue to terminal_func
UNSUPPORTED: gdb.base/gcore.exp: save a corefile
Running ../../../gdb/testsuite/gdb.base/line-symtabs.exp ...
PASS: gdb.base/line-symtabs.exp: continue to breakpoint: continue to breakpoint in header
PASS: gdb.base/line-symtabs.exp: disas /m
Running ../../../gdb/testsuite/gdb.base/step-sw-breakpoint-adjust-pc.exp ...
UNSUPPORTED: gdb.base/step-sw-breakpoint-adjust-pc.exp: step-sw-breakpoint-adjust-pc.exp
Running ../../../gdb/testsuite/gdb.base/call-ar-st.exp ...
PASS: gdb.base/call-ar-st.exp: set print sevenbit-strings
PASS: gdb.base/call-ar-st.exp: set print address off
PASS: gdb.base/call-ar-st.exp: set width 0
PASS: gdb.base/call-ar-st.exp: tbreakpoint at tbreak1
PASS: gdb.base/call-ar-st.exp: run until breakpoint set at a line
PASS: gdb.base/call-ar-st.exp: tbreakpoint at tbreak2
PASS: gdb.base/call-ar-st.exp: tbreakpoint at tbreak3
PASS: gdb.base/call-ar-st.exp: step inside print_all_arrays
PASS: gdb.base/call-ar-st.exp: tbreakpoint at tbreak4
PASS: gdb.base/call-ar-st.exp: tbreakpoint at tbreak5
PASS: gdb.base/call-ar-st.exp: continue to tbreak5
PASS: gdb.base/call-ar-st.exp: set breakpoint in sum_array_print
PASS: gdb.base/call-ar-st.exp: set print frame-arguments all
PASS: gdb.base/call-ar-st.exp: check args of sum_array_print
PASS: gdb.base/call-ar-st.exp: tbreakpoint at tbreak6
PASS: gdb.base/call-ar-st.exp: print compute_with_small_structs(20)
PASS: gdb.base/call-ar-st.exp: tbreakpoint at tbreak7
PASS: gdb.base/call-ar-st.exp: continue to tbreak7
PASS: gdb.base/call-ar-st.exp: tbreak in print_long_arg_list after stepping into memcpy
PASS: gdb.base/call-ar-st.exp: step into print_long_arg_list
PASS: gdb.base/call-ar-st.exp: tbreakpoint at tbreak8
PASS: gdb.base/call-ar-st.exp: step into init_bit_flags_combo
PASS: gdb.base/call-ar-st.exp: tbreakpoint at tbreak9
PASS: gdb.base/call-ar-st.exp: continue to tbreak9
PASS: gdb.base/call-ar-st.exp: tbreakpoint at tbreak10
PASS: gdb.base/call-ar-st.exp: continue to tbreak10
Running ../../../gdb/testsuite/gdb.base/sigrepeat.exp ...
Running ../../../gdb/testsuite/gdb.base/condbreak-call-false.exp ...
PASS: gdb.base/condbreak-call-false.exp: break foo if zero()
PASS: gdb.base/condbreak-call-false.exp: break bar
PASS: gdb.base/condbreak-call-false.exp: c
Running ../../../gdb/testsuite/gdb.base/alias.exp ...
PASS: gdb.base/alias.exp: alias -a set2=set
PASS: gdb.base/alias.exp: set2 print elements 42
PASS: gdb.base/alias.exp: verify set2
PASS: gdb.base/alias.exp: abbrev set2 not present in help command list
PASS: gdb.base/alias.exp: alias -a set3= set
PASS: gdb.base/alias.exp: set3 print elements 43
PASS: gdb.base/alias.exp: verify set3
PASS: gdb.base/alias.exp: abbrev set3 not present in help command list
PASS: gdb.base/alias.exp: alias -a set4 =set
PASS: gdb.base/alias.exp: set4 print elements 44
PASS: gdb.base/alias.exp: verify set4
PASS: gdb.base/alias.exp: abbrev set4 not present in help command list
PASS: gdb.base/alias.exp: alias -a set5 = set
PASS: gdb.base/alias.exp: set5 print elements 45
PASS: gdb.base/alias.exp: verify set5
PASS: gdb.base/alias.exp: abbrev set5 not present in help command list
PASS: gdb.base/alias.exp: alias -a -- set6 = set
PASS: gdb.base/alias.exp: set6 print elements 46
PASS: gdb.base/alias.exp: verify set6
PASS: gdb.base/alias.exp: abbrev set6 not present in help command list
PASS: gdb.base/alias.exp: alias -a -- -a = set
PASS: gdb.base/alias.exp: -a print elements 47
PASS: gdb.base/alias.exp: verify -a
PASS: gdb.base/alias.exp: abbrev -a not present in help command list
PASS: gdb.base/alias.exp: alias set2=set
PASS: gdb.base/alias.exp: alias foo=bar
PASS: gdb.base/alias.exp: alias spe = set p elem
PASS: gdb.base/alias.exp: spe 50
PASS: gdb.base/alias.exp: verify spe
PASS: gdb.base/alias.exp: alias set pr elms = set p elem
PASS: gdb.base/alias.exp: set pr elms 51
PASS: gdb.base/alias.exp: verify set pr elms
PASS: gdb.base/alias.exp: help set print
Running ../../../gdb/testsuite/gdb.base/bg-execution-repeat.exp ...
PASS: gdb.base/bg-execution-repeat.exp: c&: c&
PASS: gdb.base/bg-execution-repeat.exp: c&: breakpoint hit 1
PASS: gdb.base/bg-execution-repeat.exp: c&: repeat bg command
PASS: gdb.base/bg-execution-repeat.exp: c&: input still accepted
PASS: gdb.base/bg-execution-repeat.exp: c&: breakpoint hit 2
PASS: gdb.base/bg-execution-repeat.exp: c 1&: c 1&
PASS: gdb.base/bg-execution-repeat.exp: c 1&: breakpoint hit 1
PASS: gdb.base/bg-execution-repeat.exp: c 1&: repeat bg command
PASS: gdb.base/bg-execution-repeat.exp: c 1&: input still accepted
PASS: gdb.base/bg-execution-repeat.exp: c 1&: breakpoint hit 2
Running ../../../gdb/testsuite/gdb.base/enumval.exp ...
PASS: gdb.base/enumval.exp: print e
PASS: gdb.base/enumval.exp: print f
PASS: gdb.base/enumval.exp: print J
PASS: gdb.base/enumval.exp: print K
PASS: gdb.base/enumval.exp: p ZERO
Running ../../../gdb/testsuite/gdb.base/dprintf-next.exp ...
PASS: gdb.base/dprintf-next.exp: dprintf 24, "%d\n", x
PASS: gdb.base/dprintf-next.exp: next 1
PASS: gdb.base/dprintf-next.exp: next 2
Running ../../../gdb/testsuite/gdb.base/page.exp ...
PASS: gdb.base/page.exp: set pagination off
PASS: gdb.base/page.exp: pagination is off
PASS: gdb.base/page.exp: unpaged help
PASS: gdb.base/page.exp: set pagination on
PASS: gdb.base/page.exp: pagination is on
PASS: gdb.base/page.exp: set height 10
PASS: gdb.base/page.exp: paged help
PASS: gdb.base/page.exp: q
Running ../../../gdb/testsuite/gdb.base/cond-eval-mode.exp ...
PASS: gdb.base/cond-eval-mode.exp: set breakpoint condition-evaluation host
PASS: gdb.base/cond-eval-mode.exp: set breakpoint condition-evaluation auto
UNSUPPORTED: gdb.base/cond-eval-mode.exp: set breakpoint condition-evaluation target
Running ../../../gdb/testsuite/gdb.base/interp.exp ...
PASS: gdb.base/interp.exp: interpreter-exec mi "-var-update *"
PASS: gdb.base/interp.exp: interpreter-exec console "show version"
PASS: gdb.base/interp.exp: interpreter-exec mi "-var-update *"
PASS: gdb.base/interp.exp: interpreter-exec mi "-stack-info-frame"
PASS: gdb.base/interp.exp: interpreter-exec mi1 "-break-insert main"
PASS: gdb.base/interp.exp: interpreter-exec mi2 "-break-insert main"
PASS: gdb.base/interp.exp: interpreter-exec mi3 "-break-insert main"
PASS: gdb.base/interp.exp: can list sources
Running ../../../gdb/testsuite/gdb.base/bp-permanent.exp ...
UNSUPPORTED: gdb.base/bp-permanent.exp: bp-permanent.exp
Running ../../../gdb/testsuite/gdb.base/step-over-no-symbols.exp ...
UNSUPPORTED: gdb.base/step-over-no-symbols.exp: step-over-no-symbols.exp
Running ../../../gdb/testsuite/gdb.base/logical.exp ...
PASS: gdb.base/logical.exp: evaluate x; variables x = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x; variables x = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !!x; variables x = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x; variables x = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x; variables x = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !!x; variables x = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x && y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x && !y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x && !y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || !y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x < y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x <= y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x == y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x != y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x >= y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x > y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !x && y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && !y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !x && !y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || !y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x < y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x <= y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x == y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x != y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x >= y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x > y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x && y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x && !y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x && !y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || !y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || !y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x < y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x <= y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x == y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x != y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x >= y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x > y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x && y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x && !y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !x && !y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || !y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x < y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x <= y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x == y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x != y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x >= y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x > y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 0, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 0, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 0, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 0, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 0, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 0, y = 0, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 0, y = 0, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 0, y = 0, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 0, y = 0, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 0, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 0, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 0, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 0, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 0, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 0, y = 1, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 0, y = 1, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 0, y = 1, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 0, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 0, y = 1, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 0, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 0, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 0, y = 1, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 0, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 0, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 0, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 0, y = 1, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 0, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 0, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 1, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 1, y = 0, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 1, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 1, y = 0, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 1, y = 0, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 1, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 1, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 1, y = 0, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 1, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 1, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 1, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 1, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 1, y = 0, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 1, y = 0, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 1, y = 1, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 1, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 1, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 1, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 1, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 1, y = 1, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 1, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 1, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 1, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 1, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 1, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 1, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 1, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 1, y = 1, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x > y || w == z; variables x = 1, y = 2, w = 3, z = 3; expecting 1
PASS: gdb.base/logical.exp: evaluate x >= y && w != z; variables x = 1, y = 2, w = 3, z = 3; expecting 0
PASS: gdb.base/logical.exp: evaluate ! x > y || w + z; variables x = 1, y = 2, w = 3, z = 3; expecting 1
PASS: gdb.base/logical.exp: evaluate x > y || w == z; variables x = 1, y = 2, w = 1, z = 3; expecting 0
PASS: gdb.base/logical.exp: evaluate x >= y && w != z; variables x = 1, y = 2, w = 1, z = 3; expecting 0
PASS: gdb.base/logical.exp: evaluate ! x > y || w + z; variables x = 1, y = 2, w = 1, z = 3; expecting 1
PASS: gdb.base/logical.exp: evaluate x > y || w == z; variables x = 2, y = 2, w = 2, z = 3; expecting 0
PASS: gdb.base/logical.exp: evaluate x >= y && w != z; variables x = 2, y = 2, w = 2, z = 3; expecting 1
PASS: gdb.base/logical.exp: evaluate ! x > y || w + z; variables x = 2, y = 2, w = 2, z = 3; expecting 1
Running ../../../gdb/testsuite/gdb.base/arrayidx.exp ...
PASS: gdb.base/arrayidx.exp: Set print array-indexes to off
PASS: gdb.base/arrayidx.exp: Print array with array-indexes off
PASS: gdb.base/arrayidx.exp: Set print array-indexes to on
PASS: gdb.base/arrayidx.exp: Print array with array-indexes on
Running ../../../gdb/testsuite/gdb.base/cond-expr.exp ...
PASS: gdb.base/cond-expr.exp: print value of cond expr (const true)
PASS: gdb.base/cond-expr.exp: print value of cond expr (const false)
PASS: gdb.base/cond-expr.exp: set variable x=14
PASS: gdb.base/cond-expr.exp: set variable y=2
PASS: gdb.base/cond-expr.exp: set variable z=3
PASS: gdb.base/cond-expr.exp: print value of cond expr (var true)
PASS: gdb.base/cond-expr.exp: set variable x=0
PASS: gdb.base/cond-expr.exp: print value of cond expr (var false)
PASS: gdb.base/cond-expr.exp: print whatis of cond expr
Running ../../../gdb/testsuite/gdb.base/noreturn-finish.exp ...
PASS: gdb.base/noreturn-finish.exp: continue to breakpoint: noreturn_func
PASS: gdb.base/noreturn-finish.exp: cancel finish from noreturn_func
Running ../../../gdb/testsuite/gdb.base/bitops.exp ...
PASS: gdb.base/bitops.exp: print value of !1
PASS: gdb.base/bitops.exp: print value of !0
PASS: gdb.base/bitops.exp: print value of !100
PASS: gdb.base/bitops.exp: print value of !1000
PASS: gdb.base/bitops.exp: print value of !10
PASS: gdb.base/bitops.exp: print value of !2
PASS: gdb.base/bitops.exp: print value of 10 | 5
PASS: gdb.base/bitops.exp: print value of 10 & 5
PASS: gdb.base/bitops.exp: print value of 10 ^ 5
PASS: gdb.base/bitops.exp: print value of -!0
PASS: gdb.base/bitops.exp: print value of ~-!0
PASS: gdb.base/bitops.exp: print value of 3 * 2 / 4.0 * 2.0
PASS: gdb.base/bitops.exp: print value of 8 << 2 >> 4
PASS: gdb.base/bitops.exp: print value of -1 < 0 > 1
PASS: gdb.base/bitops.exp: print value of 15 ^ 10 ^ 5 ^ 7
PASS: gdb.base/bitops.exp: print value of 3.5 < 4.0
PASS: gdb.base/bitops.exp: print value of 3.5 < -4.0
PASS: gdb.base/bitops.exp: print value of 2 > -3
PASS: gdb.base/bitops.exp: print value of -3>4
PASS: gdb.base/bitops.exp: print value of (-3 > 4)
PASS: gdb.base/bitops.exp: print value of 3>=2.5
PASS: gdb.base/bitops.exp: print value of 3>=4.5
PASS: gdb.base/bitops.exp: print value of 3==3.0
PASS: gdb.base/bitops.exp: print value of 3==4.0
PASS: gdb.base/bitops.exp: print value of 3!=3.0
PASS: gdb.base/bitops.exp: print value of 3!=5.0
PASS: gdb.base/bitops.exp: print value of 0 || 1 && 0 | 0 ^ 0 == 8 > 128 >>1 +2 *2
PASS: gdb.base/bitops.exp: print value of 1.0 || 0
PASS: gdb.base/bitops.exp: print value of 0.0 || 1.0
PASS: gdb.base/bitops.exp: print value of 0.0 || 0
PASS: gdb.base/bitops.exp: print value of 0 || 1 && 0 | 0 ^ 0 == 8
PASS: gdb.base/bitops.exp: print value of 0 == 8 > 128 >> 1 + 2 * 2
Running ../../../gdb/testsuite/gdb.base/bigcore.exp ...
UNTESTED: gdb.base/bigcore.exp: Remote system
Running ../../../gdb/testsuite/gdb.base/float.exp ...
PASS: gdb.base/float.exp: info float (unknown target)
PASS: gdb.base/float.exp: step
PASS: gdb.base/float.exp: finish
Running ../../../gdb/testsuite/gdb.base/code-expr.exp ...
PASS: gdb.base/code-expr.exp: set print sevenbit-strings
PASS: gdb.base/code-expr.exp: set print address off
PASS: gdb.base/code-expr.exp: set width 0
PASS: gdb.base/code-expr.exp: (@code char)
PASS: gdb.base/code-expr.exp: (@code signed char)
PASS: gdb.base/code-expr.exp: (@code unsigned char)
PASS: gdb.base/code-expr.exp: (@code short)
PASS: gdb.base/code-expr.exp: (@code signed short)
PASS: gdb.base/code-expr.exp: (@code unsigned short)
PASS: gdb.base/code-expr.exp: (@code int)
PASS: gdb.base/code-expr.exp: (@code signed int)
PASS: gdb.base/code-expr.exp: (@code unsigned int)
PASS: gdb.base/code-expr.exp: (@code long)
PASS: gdb.base/code-expr.exp: (@code signed long)
PASS: gdb.base/code-expr.exp: (@code unsigned long)
PASS: gdb.base/code-expr.exp: (@code long long)
PASS: gdb.base/code-expr.exp: (@code signed long long)
PASS: gdb.base/code-expr.exp: (@code unsigned long long)
PASS: gdb.base/code-expr.exp: (@code float)
PASS: gdb.base/code-expr.exp: (@code double)
PASS: gdb.base/code-expr.exp: (@data char)
PASS: gdb.base/code-expr.exp: (@data signed char)
PASS: gdb.base/code-expr.exp: (@data unsigned char)
PASS: gdb.base/code-expr.exp: (@data short)
PASS: gdb.base/code-expr.exp: (@data signed short)
PASS: gdb.base/code-expr.exp: (@data unsigned short)
PASS: gdb.base/code-expr.exp: (@data int)
PASS: gdb.base/code-expr.exp: (@data signed int)
PASS: gdb.base/code-expr.exp: (@data unsigned int)
PASS: gdb.base/code-expr.exp: (@data long)
PASS: gdb.base/code-expr.exp: (@data signed long)
PASS: gdb.base/code-expr.exp: (@data unsigned long)
PASS: gdb.base/code-expr.exp: (@data long long)
PASS: gdb.base/code-expr.exp: (@data signed long long)
PASS: gdb.base/code-expr.exp: (@data unsigned long long)
PASS: gdb.base/code-expr.exp: (@data float)
PASS: gdb.base/code-expr.exp: (@data double)
PASS: gdb.base/code-expr.exp: (char @code)
PASS: gdb.base/code-expr.exp: (signed char @code)
PASS: gdb.base/code-expr.exp: (unsigned char @code)
PASS: gdb.base/code-expr.exp: (short @code)
PASS: gdb.base/code-expr.exp: (signed short @code)
PASS: gdb.base/code-expr.exp: (unsigned short @code)
PASS: gdb.base/code-expr.exp: (int @code)
PASS: gdb.base/code-expr.exp: (signed int @code)
PASS: gdb.base/code-expr.exp: (unsigned int @code)
PASS: gdb.base/code-expr.exp: (long @code)
PASS: gdb.base/code-expr.exp: (signed long @code)
PASS: gdb.base/code-expr.exp: (unsigned long @code)
PASS: gdb.base/code-expr.exp: (long long @code)
PASS: gdb.base/code-expr.exp: (signed long long @code)
PASS: gdb.base/code-expr.exp: (unsigned long long @code)
PASS: gdb.base/code-expr.exp: (float @code)
PASS: gdb.base/code-expr.exp: (double @code)
PASS: gdb.base/code-expr.exp: (char @data)
PASS: gdb.base/code-expr.exp: (signed char @data)
PASS: gdb.base/code-expr.exp: (unsigned char @data)
PASS: gdb.base/code-expr.exp: (short @data)
PASS: gdb.base/code-expr.exp: (signed short @data)
PASS: gdb.base/code-expr.exp: (unsigned short @data)
PASS: gdb.base/code-expr.exp: (int @data)
PASS: gdb.base/code-expr.exp: (signed int @data)
PASS: gdb.base/code-expr.exp: (unsigned int @data)
PASS: gdb.base/code-expr.exp: (long @data)
PASS: gdb.base/code-expr.exp: (signed long @data)
PASS: gdb.base/code-expr.exp: (unsigned long @data)
PASS: gdb.base/code-expr.exp: (long long @data)
PASS: gdb.base/code-expr.exp: (signed long long @data)
PASS: gdb.base/code-expr.exp: (unsigned long long @data)
PASS: gdb.base/code-expr.exp: (float @data)
PASS: gdb.base/code-expr.exp: (double @data)
PASS: gdb.base/code-expr.exp: (@code enum misordered)
PASS: gdb.base/code-expr.exp: (enum misordered @code)
PASS: gdb.base/code-expr.exp: (@data enum misordered)
PASS: gdb.base/code-expr.exp: (enum misordered @data)
PASS: gdb.base/code-expr.exp: (@code int *)
PASS: gdb.base/code-expr.exp: (int @code *)
PASS: gdb.base/code-expr.exp: (int * @code)
PASS: gdb.base/code-expr.exp: (@code int * @code)
PASS: gdb.base/code-expr.exp: (int @code * @code)
PASS: gdb.base/code-expr.exp: (@code int **)
PASS: gdb.base/code-expr.exp: (int @code **)
PASS: gdb.base/code-expr.exp: (int ** @code)
PASS: gdb.base/code-expr.exp: (@code int * @code *)
PASS: gdb.base/code-expr.exp: (int @code * @code *)
PASS: gdb.base/code-expr.exp: (@code int * @code * @code)
PASS: gdb.base/code-expr.exp: (int @code * @code * @code)
PASS: gdb.base/code-expr.exp: (@code struct t_struct)
PASS: gdb.base/code-expr.exp: (@code union t_union)
PASS: gdb.base/code-expr.exp: (struct t_struct @code)
PASS: gdb.base/code-expr.exp: (union t_union @code)
PASS: gdb.base/code-expr.exp: (@code struct t_struct *)
PASS: gdb.base/code-expr.exp: (@code union t_union *)
PASS: gdb.base/code-expr.exp: (struct t_struct @code *)
PASS: gdb.base/code-expr.exp: (union t_union @code *)
PASS: gdb.base/code-expr.exp: (struct t_struct * @code)
PASS: gdb.base/code-expr.exp: (union t_union * @code)
PASS: gdb.base/code-expr.exp: (@code struct t_struct * @code)
PASS: gdb.base/code-expr.exp: (@code union t_union * @code)
PASS: gdb.base/code-expr.exp: (struct t_struct @code * @code)
PASS: gdb.base/code-expr.exp: (union t_union @code * @code)
Running ../../../gdb/testsuite/gdb.base/watch-cond.exp ...
PASS: gdb.base/watch-cond.exp: set write watchpoint on global variable, local condition
PASS: gdb.base/watch-cond.exp: watchpoint with global expression, local condition evaluates in correct frame
PASS: gdb.base/watch-cond.exp: set write watchpoint on local variable, local condition
PASS: gdb.base/watch-cond.exp: watchpoint with local expression, local condition evaluates in correct frame
PASS: gdb.base/watch-cond.exp: set write watchpoint on global2 variable
PASS: gdb.base/watch-cond.exp: watchpoint on global2 variable triggers
PASS: gdb.base/watch-cond.exp: condition of watchpoint 2 changes
PASS: gdb.base/watch-cond.exp: watchpoint stops with untestable local expression
Running ../../../gdb/testsuite/gdb.base/bitfields2.exp ...
PASS: gdb.base/bitfields2.exp: set print sevenbit-strings
PASS: gdb.base/bitfields2.exp: break tester prior to break1
PASS: gdb.base/bitfields2.exp: continuing to tester prior to break1
PASS: gdb.base/bitfields2.exp: continuing to break1 #0
PASS: gdb.base/bitfields2.exp: bitfield uniqueness; flags.s1 = 1
PASS: gdb.base/bitfields2.exp: continuing to break1 #1
PASS: gdb.base/bitfields2.exp: bitfield uniqueness; flags.u1 = 1
PASS: gdb.base/bitfields2.exp: continuing to break1 #2
PASS: gdb.base/bitfields2.exp: bitfield uniqueness; flags.s2 = 1
PASS: gdb.base/bitfields2.exp: continuing to break1 #3
PASS: gdb.base/bitfields2.exp: bitfield uniqueness; flags.u2 = 1
PASS: gdb.base/bitfields2.exp: continuing to break1 #4
PASS: gdb.base/bitfields2.exp: bitfield uniqueness; flags.s3 = 1
PASS: gdb.base/bitfields2.exp: continuing to break1 #5
PASS: gdb.base/bitfields2.exp: bitfield uniqueness; flags.u3 = 1
PASS: gdb.base/bitfields2.exp: break tester prior to break2
PASS: gdb.base/bitfields2.exp: continuing to tester prior to break2
PASS: gdb.base/bitfields2.exp: continuing to break2 #0
PASS: gdb.base/bitfields2.exp: bitfield containment; flags.u1, flags.u3, and flags.s3 to all 1s
PASS: gdb.base/bitfields2.exp: continuing to break2 #1
PASS: gdb.base/bitfields2.exp: bitfield containment; flags.u2, flags.s1, flags.s2 to all 1s
PASS: gdb.base/bitfields2.exp: break tester prior to break3
PASS: gdb.base/bitfields2.exp: continuing to tester prior to break3
PASS: gdb.base/bitfields2.exp: continuing to break3 #0
PASS: gdb.base/bitfields2.exp: maximum unsigned bitfield values
PASS: gdb.base/bitfields2.exp: break tester prior to break4
PASS: gdb.base/bitfields2.exp: continuing to tester prior to break4
PASS: gdb.base/bitfields2.exp: continuing to break4 #0
PASS: gdb.base/bitfields2.exp: maximum signed bitfield values
PASS: gdb.base/bitfields2.exp: continuing to break4 #1
PASS: gdb.base/bitfields2.exp: determining signed-ness of bitfields
PASS: gdb.base/bitfields2.exp: most negative signed bitfield values
PASS: gdb.base/bitfields2.exp: continuing to break4 #2
PASS: gdb.base/bitfields2.exp: signed bitfields containing -1
PASS: gdb.base/bitfields2.exp: break tester prior to break5
PASS: gdb.base/bitfields2.exp: continuing to tester prior to break5
PASS: gdb.base/bitfields2.exp: continuing to break5 #0
PASS: gdb.base/bitfields2.exp: set long long unsigned bitfield
PASS: gdb.base/bitfields2.exp: set long long signed bitfield positive
PASS: gdb.base/bitfields2.exp: long long bitfield values after set
PASS: gdb.base/bitfields2.exp: set long long signed bitfield negative
PASS: gdb.base/bitfields2.exp: long long bitfield values after set negative
Running ../../../gdb/testsuite/gdb.base/structs.exp ...
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: continue to breakpoint: chartest-done
PASS: gdb.base/structs.exp: p chartest
PASS: gdb.base/structs.exp: ptype foo1; structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 1 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 5 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 6 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 6 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 6 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 7 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 7 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 7 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 8 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 8 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 8 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 9 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 9 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 9 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 10 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 10 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 10 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 11 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 11 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 11 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 12 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 12 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 12 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 13 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 13 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 13 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 14 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 14 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 14 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 15 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 15 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 15 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 16 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 16 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 16 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 17 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 17 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 17 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 1 structs-tc
PASS: gdb.base/structs.exp: return foo<n>; return 1 structs-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 1 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 1 structs-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 1 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tc
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 3 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 3 structs-tc
PASS: gdb.base/structs.exp: return foo<n>; return 3 structs-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 3 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 3 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 3 structs-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 3 structs-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 3 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 3 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 4 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 4 structs-tc
PASS: gdb.base/structs.exp: return foo<n>; return 4 structs-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 4 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 4 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 4 structs-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 4 structs-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 4 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 4 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 5 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 5 structs-tc
PASS: gdb.base/structs.exp: return foo<n>; return 5 structs-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 5 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 5 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 5 structs-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 5 structs-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 5 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 5 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 6 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 6 structs-tc
PASS: gdb.base/structs.exp: return foo<n>; return 6 structs-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 6 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 6 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 6 structs-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 6 structs-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 6 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 6 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 7 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 7 structs-tc
PASS: gdb.base/structs.exp: return foo<n>; return 7 structs-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 7 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 7 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 7 structs-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 7 structs-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 7 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 7 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 8 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 8 structs-tc
PASS: gdb.base/structs.exp: return foo<n>; return 8 structs-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 8 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 8 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 8 structs-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 8 structs-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 8 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 8 structs-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo1; structs-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 1 structs-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 5 structs-ts
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-ts
PASS: gdb.base/structs.exp: zed L<n> for return; return 1 structs-ts
PASS: gdb.base/structs.exp: return foo<n>; return 1 structs-ts
PASS: gdb.base/structs.exp: value foo<n> returned; return 1 structs-ts
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-ts
PASS: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-ts
PASS: gdb.base/structs.exp: finish foo<n>; return 1 structs-ts
PASS: gdb.base/structs.exp: value foo<n> finished; return 1 structs-ts
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-ts
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-ts
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-ts
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-ts
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-ts
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-ts
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-ts
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-ts
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-ts
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-ts
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 3 structs-ts
PASS: gdb.base/structs.exp: zed L<n> for return; return 3 structs-ts
PASS: gdb.base/structs.exp: return foo<n>; return 3 structs-ts
PASS: gdb.base/structs.exp: value foo<n> returned; return 3 structs-ts
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 3 structs-ts
PASS: gdb.base/structs.exp: zed L<n> for finish; return 3 structs-ts
PASS: gdb.base/structs.exp: finish foo<n>; return 3 structs-ts
PASS: gdb.base/structs.exp: value foo<n> finished; return 3 structs-ts
PASS: gdb.base/structs.exp: return value known implies finish value known; return 3 structs-ts
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 4 structs-ts
PASS: gdb.base/structs.exp: zed L<n> for return; return 4 structs-ts
PASS: gdb.base/structs.exp: return foo<n>; return 4 structs-ts
PASS: gdb.base/structs.exp: value foo<n> returned; return 4 structs-ts
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 4 structs-ts
PASS: gdb.base/structs.exp: zed L<n> for finish; return 4 structs-ts
PASS: gdb.base/structs.exp: finish foo<n>; return 4 structs-ts
PASS: gdb.base/structs.exp: value foo<n> finished; return 4 structs-ts
PASS: gdb.base/structs.exp: return value known implies finish value known; return 4 structs-ts
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo1; structs-ti
PASS: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-ti
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-ti
PASS: gdb.base/structs.exp: p/c L<n>; call 1 structs-ti
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-ti
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-ti
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-ti
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-ti
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-ti
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-ti
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-ti
PASS: gdb.base/structs.exp: zed L<n> for return; return 1 structs-ti
PASS: gdb.base/structs.exp: return foo<n>; return 1 structs-ti
PASS: gdb.base/structs.exp: value foo<n> returned; return 1 structs-ti
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-ti
PASS: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-ti
PASS: gdb.base/structs.exp: finish foo<n>; return 1 structs-ti
PASS: gdb.base/structs.exp: value foo<n> finished; return 1 structs-ti
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-ti
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-ti
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-ti
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-ti
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-ti
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-ti
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-ti
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-ti
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-ti
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-ti
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo1; structs-tl
PASS: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-tl
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-tl
PASS: gdb.base/structs.exp: p/c L<n>; call 1 structs-tl
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tl
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tl
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tl
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tl
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tl
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tl
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-tl
PASS: gdb.base/structs.exp: zed L<n> for return; return 1 structs-tl
PASS: gdb.base/structs.exp: return foo<n>; return 1 structs-tl
PASS: gdb.base/structs.exp: value foo<n> returned; return 1 structs-tl
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-tl
PASS: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-tl
PASS: gdb.base/structs.exp: finish foo<n>; return 1 structs-tl
PASS: gdb.base/structs.exp: value foo<n> finished; return 1 structs-tl
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-tl
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tl
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tl
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tl
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tl
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tl
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tl
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tl
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tl
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tl
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo1; structs-tll
PASS: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-tll
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-tll
PASS: gdb.base/structs.exp: p/c L<n>; call 1 structs-tll
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tll
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tll
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tll
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-tll
PASS: gdb.base/structs.exp: zed L<n> for return; return 1 structs-tll
PASS: gdb.base/structs.exp: return foo<n>; return 1 structs-tll
PASS: gdb.base/structs.exp: value foo<n> returned; return 1 structs-tll
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-tll
PASS: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-tll
PASS: gdb.base/structs.exp: finish foo<n>; return 1 structs-tll
PASS: gdb.base/structs.exp: value foo<n> finished; return 1 structs-tll
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-tll
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo1; structs-tf
PASS: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-tf
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-tf
PASS: gdb.base/structs.exp: p/c L<n>; call 1 structs-tf
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tf
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tf
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tf
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tf
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tf
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tf
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-tf
PASS: gdb.base/structs.exp: zed L<n> for return; return 1 structs-tf
PASS: gdb.base/structs.exp: return foo<n>; return 1 structs-tf
PASS: gdb.base/structs.exp: value foo<n> returned; return 1 structs-tf
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-tf
PASS: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-tf
PASS: gdb.base/structs.exp: finish foo<n>; return 1 structs-tf
PASS: gdb.base/structs.exp: value foo<n> finished; return 1 structs-tf
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-tf
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tf
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tf
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tf
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tf
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tf
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tf
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tf
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tf
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tf
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo1; structs-td
PASS: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-td
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-td
PASS: gdb.base/structs.exp: p/c L<n>; call 1 structs-td
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-td
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-td
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-td
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-td
PASS: gdb.base/structs.exp: zed L<n> for return; return 1 structs-td
PASS: gdb.base/structs.exp: return foo<n>; return 1 structs-td
PASS: gdb.base/structs.exp: value foo<n> returned; return 1 structs-td
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-td
PASS: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-td
PASS: gdb.base/structs.exp: finish foo<n>; return 1 structs-td
PASS: gdb.base/structs.exp: value foo<n> finished; return 1 structs-td
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-td
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo1; structs-tld
PASS: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-tld
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-tld
PASS: gdb.base/structs.exp: p/c L<n>; call 1 structs-tld
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tld
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tld
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tld
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-tld
PASS: gdb.base/structs.exp: zed L<n> for return; return 1 structs-tld
PASS: gdb.base/structs.exp: return foo<n>; return 1 structs-tld
PASS: gdb.base/structs.exp: value foo<n> returned; return 1 structs-tld
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-tld
PASS: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-tld
PASS: gdb.base/structs.exp: finish foo<n>; return 1 structs-tld
PASS: gdb.base/structs.exp: value foo<n> finished; return 1 structs-tld
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-tld
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-ts-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-ts-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-ts-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-ts-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-ts-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-ts-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-ts-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-ts-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-ts-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-ts-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-ts-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-ts-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 5 structs-ts-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 6 structs-ts-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 6 structs-ts-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 6 structs-ts-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 7 structs-ts-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 7 structs-ts-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 7 structs-ts-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 8 structs-ts-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 8 structs-ts-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 8 structs-ts-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-ti-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-ti-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-ti-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-ti-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-ti-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-ti-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-ti-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-ti-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-ti-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-ti-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-ti-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-ti-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 5 structs-ti-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 6 structs-ti-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 6 structs-ti-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 6 structs-ti-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tl-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tl-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tl-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tl-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tl-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tl-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tl-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tl-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tl-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-tl-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-tl-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-tl-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 5 structs-tl-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 6 structs-tl-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 6 structs-tl-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 6 structs-tl-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tll-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tll-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tll-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tll-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tf-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tf-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tf-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tf-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tf-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tf-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tf-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tf-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tf-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-tf-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-tf-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-tf-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 5 structs-tf-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 6 structs-tf-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 6 structs-tf-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 6 structs-tf-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-td-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-td-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-td-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-td-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tld-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tld-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tld-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tld-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tc-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tc-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tc-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tc-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tc-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tc-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-tc-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-tc-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-tc-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 5 structs-tc-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 6 structs-tc-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 6 structs-tc-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 6 structs-tc-ts
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tc-ti
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-ti
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-ti
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-ti
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tc-ti
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tc-ti
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tc-ti
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tc-ti
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tc-ti
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-tc-ti
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tc-tl
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-tl
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-tl
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-tl
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tc-tl
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tc-tl
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tc-tl
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tc-tl
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tc-tl
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-tc-tl
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tc-tll
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-tll
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-tll
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-tll
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tc-tf
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-tf
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-tf
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-tf
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tc-tf
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tc-tf
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tc-tf
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tc-tf
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tc-tf
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-tc-tf
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tc-td
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-td
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-td
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-td
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tc-tld
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-tld
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-tld
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-tld
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-td-tf
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-td-tf
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-td-tf
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-td-tf
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-td-tf
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-td-tf
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-td-tf
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-td-tf
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-td-tf
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-td-tf
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-td-tf
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-td-tf
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-td-tf
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tf-td
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tf-td
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tf-td
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tf-td
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tf-td
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tf-td
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tf-td
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tf-td
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tf-td
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tf-td
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tf-td
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tf-td
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tf-td
Running ../../../gdb/testsuite/gdb.base/sigstep.exp ...
Running ../../../gdb/testsuite/gdb.base/stack-checking.exp ...
UNSUPPORTED: gdb.base/stack-checking.exp: stack-checking.exp
Running ../../../gdb/testsuite/gdb.base/maint.exp ...
PASS: gdb.base/maint.exp: set height 0
PASS: gdb.base/maint.exp: maint print registers
PASS: gdb.base/maint.exp: mt set per on for expand-symtabs
PASS: gdb.base/maint.exp: mt expand-symtabs
PASS: gdb.base/maint.exp: mt set per off for expand-symtabs
PASS: gdb.base/maint.exp: maint check-psymtabs
PASS: gdb.base/maint.exp: maint check-symtabs
PASS: gdb.base/maint.exp: maint set per-command on
PASS: gdb.base/maint.exp: pwd
PASS: gdb.base/maint.exp: maint set per-command off
PASS: gdb.base/maint.exp: maint print statistics
PASS: gdb.base/maint.exp: maint print dummy-frames
PASS: gdb.base/maint.exp: maint print objfiles: header
PASS: gdb.base/maint.exp: maint print objfiles: psymtabs
PASS: gdb.base/maint.exp: maint print objfiles: symtabs
PASS: gdb.base/maint.exp: maint print psymbols w/o args
PASS: gdb.base/maint.exp: maint print psymbols 1
PASS: gdb.base/maint.exp: shell rm -f psymbols_output
PASS: gdb.base/maint.exp: maint print msymbols w/o args
PASS: gdb.base/maint.exp: maint print msymbols
PASS: gdb.base/maint.exp: shell rm -f msymbols_output
PASS: gdb.base/maint.exp: cd to objdir
PASS: gdb.base/maint.exp: maint print msymbols
PASS: gdb.base/maint.exp: shell rm -f msymbols_output2
PASS: gdb.base/maint.exp: cd to mydir
PASS: gdb.base/maint.exp: maint print symbols w/o args
PASS: gdb.base/maint.exp: maint print symbols
PASS: gdb.base/maint.exp: shell rm -f symbols_output
PASS: gdb.base/maint.exp: maint print type
PASS: gdb.base/maint.exp: maint info sections
PASS: gdb.base/maint.exp: maint info sections .text
PASS: gdb.base/maint.exp: maint info sections CODE
PASS: gdb.base/maint.exp: maint info sections DATA
PASS: gdb.base/maint.exp: maint info breakpoints
PASS: gdb.base/maint.exp: maint print w/o args
PASS: gdb.base/maint.exp: maint info w/o args
PASS: gdb.base/maint.exp: maint w/o args
PASS: gdb.base/maint.exp: help maint
PASS: gdb.base/maint.exp: help maint info
PASS: gdb.base/maint.exp: help maint print
PASS: gdb.base/maint.exp: help maint
PASS: gdb.base/maint.exp: maint dump-me
PASS: gdb.base/maint.exp: maint internal-error
PASS: gdb.base/maint.exp: internal-error resync
Running ../../../gdb/testsuite/gdb.base/symbol-without-target_section.exp ...
PASS: gdb.base/symbol-without-target_section.exp: add-symbol-file
PASS: gdb.base/symbol-without-target_section.exp: list main
PASS: gdb.base/symbol-without-target_section.exp: print symbol_without_target_section
Running ../../../gdb/testsuite/gdb.base/global-var-nested-by-dso.exp ...
Running ../../../gdb/testsuite/gdb.base/savedregs.exp ...
Running ../../../gdb/testsuite/gdb.base/multi-forks.exp ...
Running ../../../gdb/testsuite/gdb.base/readline.exp ...
PASS: gdb.base/readline.exp: Simple operate-and-get-next - send p 1
PASS: gdb.base/readline.exp: Simple operate-and-get-next - send p 2
PASS: gdb.base/readline.exp: Simple operate-and-get-next - send p 3
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-p to p 3
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-p to p 2
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-p to p 1
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-o for p 1
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-o for p 2
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-o for p 3
PASS: gdb.base/readline.exp: Simple operate-and-get-next - final prompt
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - send if 1 > 0
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - send p 5
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - send end
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - C-p to end
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - C-p to p 5
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - C-p to if 1 > 0
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - C-o for if 1 > 0
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - C-o for p 5
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - C-o for end
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - final prompt
PASS: gdb.base/readline.exp: print 42
PASS: gdb.base/readline.exp: arrow keys with secondary prompt
PASS: gdb.base/readline.exp: Simple operate-and-get-next - send p 7
PASS: gdb.base/readline.exp: Simple operate-and-get-next - send p 8
PASS: gdb.base/readline.exp: Simple operate-and-get-next - send p 9
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-p to p 9
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-p to p 8
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-p to p 7
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-o for p 7
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-o for p 8
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-o for p 9
PASS: gdb.base/readline.exp: Simple operate-and-get-next - final prompt
Running ../../../gdb/testsuite/gdb.base/fork-running-state.exp ...
UNSUPPORTED: gdb.base/fork-running-state.exp: fork-running-state.exp
Running ../../../gdb/testsuite/gdb.base/step-test.exp ...
PASS: gdb.base/step-test.exp: next 1
PASS: gdb.base/step-test.exp: step 1
PASS: gdb.base/step-test.exp: next 2
PASS: gdb.base/step-test.exp: step 3
PASS: gdb.base/step-test.exp: next 3
PASS: gdb.base/step-test.exp: next over
PASS: gdb.base/step-test.exp: step into
PASS: gdb.base/step-test.exp: step out
PASS: gdb.base/step-test.exp: stepi to next line
PASS: gdb.base/step-test.exp: stepi into function
PASS: gdb.base/step-test.exp: stepi into function's first source line
PASS: gdb.base/step-test.exp: stepi: finish call
PASS: gdb.base/step-test.exp: nexti over function
PASS: gdb.base/step-test.exp: set breakpoint at call to large_struct_by_value
PASS: gdb.base/step-test.exp: run to pass large struct
PASS: gdb.base/step-test.exp: large struct by value
PASS: gdb.base/step-test.exp: continue until exit at step-test.exp
Running ../../../gdb/testsuite/gdb.base/ena-dis-br.exp ...
PASS: gdb.base/ena-dis-br.exp: break marker1
PASS: gdb.base/ena-dis-br.exp: enable break marker1
PASS: gdb.base/ena-dis-br.exp: info break marker1
PASS: gdb.base/ena-dis-br.exp: continue to break marker1
PASS: gdb.base/ena-dis-br.exp: delete break marker1
PASS: gdb.base/ena-dis-br.exp: break marker2
PASS: gdb.base/ena-dis-br.exp: enable once break marker2
PASS: gdb.base/ena-dis-br.exp: info auto-disabled break marker2
PASS: gdb.base/ena-dis-br.exp: continue to auto-disabled break marker2
PASS: gdb.base/ena-dis-br.exp: info auto-disabled break marker2
PASS: gdb.base/ena-dis-br.exp: continue until exit at no stop
PASS: gdb.base/ena-dis-br.exp: rerun to main
PASS: gdb.base/ena-dis-br.exp: continue until exit at no stop at auto-disabled break marker2
PASS: gdb.base/ena-dis-br.exp: break marker3
PASS: gdb.base/ena-dis-br.exp: enable del break marker3
PASS: gdb.base/ena-dis-br.exp: info auto-deleted break marker2
PASS: gdb.base/ena-dis-br.exp: continue to auto-deleted break marker3
PASS: gdb.base/ena-dis-br.exp: info auto-deleted break marker3
PASS: gdb.base/ena-dis-br.exp: break marker4
PASS: gdb.base/ena-dis-br.exp: disable break marker4
PASS: gdb.base/ena-dis-br.exp: info break marker4
PASS: gdb.base/ena-dis-br.exp: break 63
PASS: gdb.base/ena-dis-br.exp: break marker1
PASS: gdb.base/ena-dis-br.exp: enable count missing arguments
PASS: gdb.base/ena-dis-br.exp: enable count missing breakpoint number
PASS: gdb.base/ena-dis-br.exp: disable break with count
PASS: gdb.base/ena-dis-br.exp: continue from enable count, first time
PASS: gdb.base/ena-dis-br.exp: continue from enable count, second time
PASS: gdb.base/ena-dis-br.exp: continue through enable count, now disabled
PASS: gdb.base/ena-dis-br.exp: break marker1
PASS: gdb.base/ena-dis-br.exp: ignore non-existent break
PASS: gdb.base/ena-dis-br.exp: ignore break with missing ignore count
PASS: gdb.base/ena-dis-br.exp: ignore break marker1 -1
PASS: gdb.base/ena-dis-br.exp: ignore break marker1 0
PASS: gdb.base/ena-dis-br.exp: ignore break marker1
PASS: gdb.base/ena-dis-br.exp: info ignored break marker1
PASS: gdb.base/ena-dis-br.exp: continue until exit at no stop at ignored break marker1
PASS: gdb.base/ena-dis-br.exp: rerun to main
PASS: gdb.base/ena-dis-br.exp: continue to break marker1, 2nd time
PASS: gdb.base/ena-dis-br.exp: break marker1
PASS: gdb.base/ena-dis-br.exp: ignore break marker1
PASS: gdb.base/ena-dis-br.exp: enable del break marker1
PASS: gdb.base/ena-dis-br.exp: info break marker1
PASS: gdb.base/ena-dis-br.exp: continue until exit at no stop at ignored & auto-deleted break marker1
PASS: gdb.base/ena-dis-br.exp: rerun to main
PASS: gdb.base/ena-dis-br.exp: continue to ignored & auto-deleted break marker1
PASS: gdb.base/ena-dis-br.exp: break marker1
PASS: gdb.base/ena-dis-br.exp: ignore break marker1
PASS: gdb.base/ena-dis-br.exp: disable break marker1
PASS: gdb.base/ena-dis-br.exp: continue until exit at no stop at ignored & disabled break marker1
PASS: gdb.base/ena-dis-br.exp: rerun to main
PASS: gdb.base/ena-dis-br.exp: info ignored & disabled break marker1
PASS: gdb.base/ena-dis-br.exp: prepare to continue with ignore count
PASS: gdb.base/ena-dis-br.exp: continue with ignore count
PASS: gdb.base/ena-dis-br.exp: step after continue with ignore count
PASS: gdb.base/ena-dis-br.exp: continue with ignore count, not stopped at bpt
PASS: gdb.base/ena-dis-br.exp: break main
PASS: gdb.base/ena-dis-br.exp: break main
PASS: gdb.base/ena-dis-br.exp: break main
PASS: gdb.base/ena-dis-br.exp: break main
PASS: gdb.base/ena-dis-br.exp: disable $b1.1 $b2.1
PASS: gdb.base/ena-dis-br.exp: disabled $b1.1 and $b2.1
PASS: gdb.base/ena-dis-br.exp: disable $b1 fooo.1
PASS: gdb.base/ena-dis-br.exp: disabled $b1
PASS: gdb.base/ena-dis-br.exp: enable $b3
PASS: gdb.base/ena-dis-br.exp: disable $b4 $b3.1
PASS: gdb.base/ena-dis-br.exp: disabled $b4 and $b3.1,remain enabled $b3
PASS: gdb.base/ena-dis-br.exp: disable $b4.1 fooobar
PASS: gdb.base/ena-dis-br.exp: disabled $b4.1
PASS: gdb.base/ena-dis-br.exp: enable $b1.1 $b2.1
PASS: gdb.base/ena-dis-br.exp: enabled $b1.1 and $b2.1
PASS: gdb.base/ena-dis-br.exp: enable $b1 fooo.1
PASS: gdb.base/ena-dis-br.exp: enabled $b1
PASS: gdb.base/ena-dis-br.exp: disable $b3
PASS: gdb.base/ena-dis-br.exp: enable $b4 $b3.1
PASS: gdb.base/ena-dis-br.exp: enabled $b4 and $b3.1,remain disabled $b3
PASS: gdb.base/ena-dis-br.exp: enable $b4.1 fooobar
PASS: gdb.base/ena-dis-br.exp: enabled $b4.1
Running ../../../gdb/testsuite/gdb.base/breakpoint-in-ro-region.exp ...
UNSUPPORTED: gdb.base/breakpoint-in-ro-region.exp: breakpoint-in-ro-region.exp
Running ../../../gdb/testsuite/gdb.base/return2.exp ...
PASS: gdb.base/return2.exp: set break on void_func
PASS: gdb.base/return2.exp: continue to void_func
PASS: gdb.base/return2.exp: return from void_func
PASS: gdb.base/return2.exp: void function returned successfully
PASS: gdb.base/return2.exp: set break on char_func
PASS: gdb.base/return2.exp: continue to char_func
PASS: gdb.base/return2.exp: return from char_func
PASS: gdb.base/return2.exp: char value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
PASS: gdb.base/return2.exp: set break on short_func
PASS: gdb.base/return2.exp: continue to short_func
PASS: gdb.base/return2.exp: return from short_func
PASS: gdb.base/return2.exp: short value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
PASS: gdb.base/return2.exp: set break on int_func
PASS: gdb.base/return2.exp: continue to int_func
PASS: gdb.base/return2.exp: return from int_func
PASS: gdb.base/return2.exp: int value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
PASS: gdb.base/return2.exp: set break on long_func
PASS: gdb.base/return2.exp: continue to long_func
PASS: gdb.base/return2.exp: return from long_func
PASS: gdb.base/return2.exp: long value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
PASS: gdb.base/return2.exp: set break on long_long_func
PASS: gdb.base/return2.exp: continue to long_long_func
PASS: gdb.base/return2.exp: return from long_long_func
PASS: gdb.base/return2.exp: long_long value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
PASS: gdb.base/return2.exp: set break on float_func
PASS: gdb.base/return2.exp: continue to float_func
PASS: gdb.base/return2.exp: return from float_func
PASS: gdb.base/return2.exp: float value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
PASS: gdb.base/return2.exp: set break on double_func
PASS: gdb.base/return2.exp: continue to double_func
PASS: gdb.base/return2.exp: return from double_func
PASS: gdb.base/return2.exp: double value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
Running ../../../gdb/testsuite/gdb.base/info-fun.exp ...
Running ../../../gdb/testsuite/gdb.base/sizeof.exp ...
PASS: gdb.base/sizeof.exp: next
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (char)" (1)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (short)" (2)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (int)" (4)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (long)" (4)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (long long)" (8)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (void *)" (4)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (void (*)(void))" (4)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (float)" (4)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (double)" (8)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (long double)" (8)
PASS: gdb.base/sizeof.exp: check sizeof "char"
PASS: gdb.base/sizeof.exp: check sizeof "short"
PASS: gdb.base/sizeof.exp: check sizeof "int"
PASS: gdb.base/sizeof.exp: check sizeof "long"
PASS: gdb.base/sizeof.exp: check sizeof "long long"
PASS: gdb.base/sizeof.exp: check sizeof "void *"
PASS: gdb.base/sizeof.exp: check sizeof "void (*)(void)"
PASS: gdb.base/sizeof.exp: check sizeof "float"
PASS: gdb.base/sizeof.exp: check sizeof "double"
PASS: gdb.base/sizeof.exp: check sizeof "long double"
PASS: gdb.base/sizeof.exp: get integer valueof "'\377'" (-1)
PASS: gdb.base/sizeof.exp: get integer valueof "(int) (char) -1" (-1)
PASS: gdb.base/sizeof.exp: get integer valueof "(int) (signed char) -1" (-1)
PASS: gdb.base/sizeof.exp: get integer valueof "(int) (unsigned char) -1" (255)
PASS: gdb.base/sizeof.exp: check valueof "'\377'"
PASS: gdb.base/sizeof.exp: check valueof "(int) (char) -1"
PASS: gdb.base/sizeof.exp: check valueof "(int) (signed char) -1"
PASS: gdb.base/sizeof.exp: check valueof "(int) (unsigned char) -1"
PASS: gdb.base/sizeof.exp: set padding_char.v = 1
PASS: gdb.base/sizeof.exp: print padding_char.p1
PASS: gdb.base/sizeof.exp: print/d padding_char.v
PASS: gdb.base/sizeof.exp: print padding_char.p2
PASS: gdb.base/sizeof.exp: set padding_short.v = 2
PASS: gdb.base/sizeof.exp: print padding_short.p1
PASS: gdb.base/sizeof.exp: print/d padding_short.v
PASS: gdb.base/sizeof.exp: print padding_short.p2
PASS: gdb.base/sizeof.exp: set padding_int.v = 4
PASS: gdb.base/sizeof.exp: print padding_int.p1
PASS: gdb.base/sizeof.exp: print/d padding_int.v
PASS: gdb.base/sizeof.exp: print padding_int.p2
PASS: gdb.base/sizeof.exp: set padding_long.v = 4
PASS: gdb.base/sizeof.exp: print padding_long.p1
PASS: gdb.base/sizeof.exp: print/d padding_long.v
PASS: gdb.base/sizeof.exp: print padding_long.p2
PASS: gdb.base/sizeof.exp: set padding_long_long.v = 8
PASS: gdb.base/sizeof.exp: print padding_long_long.p1
PASS: gdb.base/sizeof.exp: print/d padding_long_long.v
PASS: gdb.base/sizeof.exp: print padding_long_long.p2
PASS: gdb.base/sizeof.exp: set padding_float.v = 1
PASS: gdb.base/sizeof.exp: print padding_float.p1
PASS: gdb.base/sizeof.exp: print/f padding_float.v
PASS: gdb.base/sizeof.exp: print padding_float.p2
PASS: gdb.base/sizeof.exp: set padding_double.v = 2
PASS: gdb.base/sizeof.exp: print padding_double.p1
PASS: gdb.base/sizeof.exp: print/f padding_double.v
PASS: gdb.base/sizeof.exp: print padding_double.p2
PASS: gdb.base/sizeof.exp: set padding_long_double.v = 4
PASS: gdb.base/sizeof.exp: print padding_long_double.p1
PASS: gdb.base/sizeof.exp: print/f padding_long_double.v
PASS: gdb.base/sizeof.exp: print padding_long_double.p2
PASS: gdb.base/sizeof.exp: maint print arch
Running ../../../gdb/testsuite/gdb.base/pie-execl.exp ...
Running ../../../gdb/testsuite/gdb.base/eval.exp ...
PASS: gdb.base/eval.exp: Initialize $a.
PASS: gdb.base/eval.exp: First eval.
PASS: gdb.base/eval.exp: Second eval.
Running ../../../gdb/testsuite/gdb.base/watch-vfork.exp ...
UNSUPPORTED: gdb.base/watch-vfork.exp: watch-vfork.exp
Running ../../../gdb/testsuite/gdb.base/sigaltstack.exp ...
Running ../../../gdb/testsuite/gdb.base/info-target.exp ...
PASS: gdb.base/info-target.exp: info target
Running ../../../gdb/testsuite/gdb.base/ptype.exp ...
PASS: gdb.base/ptype.exp: ptype unnamed enumeration member
PASS: gdb.base/ptype.exp: ptype structure
PASS: gdb.base/ptype.exp: ptype v_struct1.v_float_member
PASS: gdb.base/ptype.exp: ptype v_struct1->v_float_member
PASS: gdb.base/ptype.exp: ptype v_t_struct_p.v_float_member
PASS: gdb.base/ptype.exp: ptype v_t_struct_p->v_float_member
PASS: gdb.base/ptype.exp: ptype linked list structure
PASS: gdb.base/ptype.exp: ptype union
PASS: gdb.base/ptype.exp: ptype linked list union
PASS: gdb.base/ptype.exp: ptype unnamed enumeration
PASS: gdb.base/ptype.exp: ptype named enumeration
PASS: gdb.base/ptype.exp: ptype unnamed typedef'd enumeration
PASS: gdb.base/ptype.exp: list main
PASS: gdb.base/ptype.exp: whatis unnamed typedef'd enum (compiler bug in IBM's xlc)
PASS: gdb.base/ptype.exp: printing typedef'd struct
PASS: gdb.base/ptype.exp: printing typedef'd union
PASS: gdb.base/ptype.exp: ptype named typedef'd enumf'd enum
PASS: gdb.base/ptype.exp: ptype misordered enumeration
PASS: gdb.base/ptype.exp: ptype named enumeration member
PASS: gdb.base/ptype.exp: ptype unnamed enumeration member #2
PASS: gdb.base/ptype.exp: ptype short
PASS: gdb.base/ptype.exp: ptype int
PASS: gdb.base/ptype.exp: ptype t_char_array
PASS: gdb.base/ptype.exp: ptype pv_char_array
PASS: gdb.base/ptype.exp: ptype outer structure
PASS: gdb.base/ptype.exp: ptype inner structure
PASS: gdb.base/ptype.exp: ptype inner union
PASS: gdb.base/ptype.exp: ptype nested structure
PASS: gdb.base/ptype.exp: ptype outer int
PASS: gdb.base/ptype.exp: ptype nested structure #2
PASS: gdb.base/ptype.exp: ptype inner int
PASS: gdb.base/ptype.exp: ptype nested union
PASS: gdb.base/ptype.exp: ptype the_highest
PASS: gdb.base/ptype.exp: ptype the_highest
PASS: gdb.base/ptype.exp: ptype func_type
PASS: gdb.base/ptype.exp: ptype old_fptr
PASS: gdb.base/ptype.exp: ptype new_fptr
PASS: gdb.base/ptype.exp: ptype fptr
PASS: gdb.base/ptype.exp: ptype fptr2
PASS: gdb.base/ptype.exp: ptype xptr
PASS: gdb.base/ptype.exp: ptype ffptr
PASS: gdb.base/ptype.exp: ptype fffptr
PASS: gdb.base/ptype.exp: list intfoo
PASS: gdb.base/ptype.exp: ptype foo typedef after first list of intfoo
PASS: gdb.base/ptype.exp: list charfoo
PASS: gdb.base/ptype.exp: ptype foo typedef after first list of charfoo
PASS: gdb.base/ptype.exp: list intfoo
PASS: gdb.base/ptype.exp: ptype foo typedef after second list of intfoo
PASS: gdb.base/ptype.exp: list charfoo
PASS: gdb.base/ptype.exp: ptype foo typedef after second list of charfoo
PASS: gdb.base/ptype.exp: ptype "abc"
PASS: gdb.base/ptype.exp: ptype {'a','b','c'}
PASS: gdb.base/ptype.exp: ptype {0,1,2}
PASS: gdb.base/ptype.exp: ptype {(long)0,(long)1,(long)2}
PASS: gdb.base/ptype.exp: ptype {(float)0,(float)1,(float)2}
PASS: gdb.base/ptype.exp: ptype {{0,1,2},{3,4,5}}
PASS: gdb.base/ptype.exp: ptype {4,5,6}[2]
PASS: gdb.base/ptype.exp: ptype *&{4,5,6}[1]
PASS: gdb.base/ptype.exp: ptype $pc
Running ../../../gdb/testsuite/gdb.base/siginfo-obj.exp ...
Running ../../../gdb/testsuite/gdb.base/break-always.exp ...
PASS: gdb.base/break-always.exp: set breakpoint always-inserted on
PASS: gdb.base/break-always.exp: confirm breakpoint always-inserted
PASS: gdb.base/break-always.exp: set breakpoint on bar
PASS: gdb.base/break-always.exp: set 2nd breakpoint on bar
PASS: gdb.base/break-always.exp: set 3rd breakpoint on bar
PASS: gdb.base/break-always.exp: set 4th breakpoint on bar
PASS: gdb.base/break-always.exp: initial check breakpoint state
PASS: gdb.base/break-always.exp: initial disable all breakpoints
PASS: gdb.base/break-always.exp: initial enable all breakpoints
PASS: gdb.base/break-always.exp: re-disable all breakpoints
PASS: gdb.base/break-always.exp: enable 3.A
PASS: gdb.base/break-always.exp: disable 3.B
PASS: gdb.base/break-always.exp: enable 3.C
PASS: gdb.base/break-always.exp: enable 2.D
PASS: gdb.base/break-always.exp: disable 2.E
PASS: gdb.base/break-always.exp: disable 3.F
PASS: gdb.base/break-always.exp: enable 3.G
PASS: gdb.base/break-always.exp: enable 2.H
PASS: gdb.base/break-always.exp: disable 2.I
PASS: gdb.base/break-always.exp: before re-enable check breakpoint state
PASS: gdb.base/break-always.exp: re-enable all breakpoints
PASS: gdb.base/break-always.exp: set breakpoint on bar 2
PASS: gdb.base/break-always.exp: save shadow
PASS: gdb.base/break-always.exp: write 0 to breakpoint's address
PASS: gdb.base/break-always.exp: read back 0 from the breakpoint's address
PASS: gdb.base/break-always.exp: write 1 to breakpoint's address
PASS: gdb.base/break-always.exp: read back 1 from the breakpoint's address
PASS: gdb.base/break-always.exp: restore the original contents
PASS: gdb.base/break-always.exp: continue to breakpoint: bar
Running ../../../gdb/testsuite/gdb.base/history-duplicates.exp ...
PASS: gdb.base/history-duplicates.exp: show history remove-duplicates
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: set history remove-duplicates unlimited
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 0 (item #0)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 1 (item #1)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 2 (item #2)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 1 (item #3)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 1 (item #4)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 2 (item #5)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 3 (item #6)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 3 (item #7)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 4 (item #8)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 1 (item #9)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 2 (item #10)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 3 (item #11)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: printing 4 (item #12)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: history entry is print 4
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: history entry is print 3
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: history entry is print 2
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: history entry is print 1
PASS: gdb.base/history-duplicates.exp: remove-duplicates=unlimited: history entry is print 0
PASS: gdb.base/history-duplicates.exp: remove-duplicates=1: set history remove-duplicates 1
PASS: gdb.base/history-duplicates.exp: remove-duplicates=1: printing 0 (item #0)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=1: printing 1 (item #1)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=1: printing 0 (item #2)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=1: printing 2 (item #3)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=1: printing 2 (item #4)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=1: printing 1 (item #5)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=1: history entry is print 1
PASS: gdb.base/history-duplicates.exp: remove-duplicates=1: history entry is print 2
PASS: gdb.base/history-duplicates.exp: remove-duplicates=1: history entry is print 0
PASS: gdb.base/history-duplicates.exp: remove-duplicates=1: history entry is print 1 (again)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=1: history entry is print 0 (again)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=0: set history remove-duplicates 0
PASS: gdb.base/history-duplicates.exp: remove-duplicates=0: printing 0 (item #0)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=0: printing 0 (item #1)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=0: printing 1 (item #2)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=0: printing 1 (item #3)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=0: history entry is print 1
PASS: gdb.base/history-duplicates.exp: remove-duplicates=0: history entry is print 1 (again)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=0: history entry is print 0
PASS: gdb.base/history-duplicates.exp: remove-duplicates=0: history entry is print 0 (again)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=2: set history remove-duplicates 2
PASS: gdb.base/history-duplicates.exp: remove-duplicates=2: printing 1 (item #0)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=2: printing 2 (item #1)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=2: printing 0 (item #2)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=2: printing 2 (item #3)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=2: printing 0 (item #4)
PASS: gdb.base/history-duplicates.exp: remove-duplicates=2: history entry is print 0
PASS: gdb.base/history-duplicates.exp: remove-duplicates=2: history entry is print 2
PASS: gdb.base/history-duplicates.exp: remove-duplicates=2: history entry is print 1
Running ../../../gdb/testsuite/gdb.base/annota3.exp ...
Running ../../../gdb/testsuite/gdb.base/callfuncs.exp ...
PASS: gdb.base/callfuncs.exp: set print sevenbit-strings
PASS: gdb.base/callfuncs.exp: set print address off
PASS: gdb.base/callfuncs.exp: set width 0
PASS: gdb.base/callfuncs.exp: set language c
PASS: gdb.base/callfuncs.exp: next to t_double_values
PASS: gdb.base/callfuncs.exp: next to t_structs_c
PASS: gdb.base/callfuncs.exp: retrieve original register contents
PASS: gdb.base/callfuncs.exp: set unwindonsignal on
PASS: gdb.base/callfuncs.exp: p t_char_values(0,0)
PASS: gdb.base/callfuncs.exp: p t_char_values('a','b')
PASS: gdb.base/callfuncs.exp: p t_char_values(char_val1,char_val2)
PASS: gdb.base/callfuncs.exp: p t_char_values('a',char_val2)
PASS: gdb.base/callfuncs.exp: p t_char_values(char_val1,'b')
PASS: gdb.base/callfuncs.exp: p t_short_values(0,0)
PASS: gdb.base/callfuncs.exp: p t_short_values(10,-23)
PASS: gdb.base/callfuncs.exp: p t_short_values(short_val1,short_val2)
PASS: gdb.base/callfuncs.exp: p t_short_values(10,short_val2)
PASS: gdb.base/callfuncs.exp: p t_short_values(short_val1,-23)
PASS: gdb.base/callfuncs.exp: p t_int_values(0,0)
PASS: gdb.base/callfuncs.exp: p t_int_values(87,-26)
PASS: gdb.base/callfuncs.exp: p t_int_values(int_val1,int_val2)
PASS: gdb.base/callfuncs.exp: p t_int_values(87,int_val2)
PASS: gdb.base/callfuncs.exp: p t_int_values(int_val1,-26)
PASS: gdb.base/callfuncs.exp: p t_long_values(0,0)
PASS: gdb.base/callfuncs.exp: p t_long_values(789,-321)
PASS: gdb.base/callfuncs.exp: p t_long_values(long_val1,long_val2)
PASS: gdb.base/callfuncs.exp: p t_long_values(789,long_val2)
PASS: gdb.base/callfuncs.exp: p t_long_values(long_val1,-321)
PASS: gdb.base/callfuncs.exp: p t_float_values(0.0,0.0)
PASS: gdb.base/callfuncs.exp: p t_float_values(3.14159,-2.3765)
PASS: gdb.base/callfuncs.exp: p t_float_values(float_val1,float_val2)
PASS: gdb.base/callfuncs.exp: p t_float_values(3.14159,float_val2)
PASS: gdb.base/callfuncs.exp: p t_float_values(float_val1,-2.3765)
PASS: gdb.base/callfuncs.exp: p t_float_values2(0.0,0.0)
PASS: gdb.base/callfuncs.exp: p t_float_values2(3.14159,float_val2)
PASS: gdb.base/callfuncs.exp: Call function with many float arguments.
PASS: gdb.base/callfuncs.exp: p t_small_values(1,2,3,4,5,6,7,8,9,10)
PASS: gdb.base/callfuncs.exp: p t_double_values(0.0,0.0)
PASS: gdb.base/callfuncs.exp: p t_double_values(45.654,-67.66)
PASS: gdb.base/callfuncs.exp: p t_double_values(double_val1,double_val2)
PASS: gdb.base/callfuncs.exp: p t_double_values(45.654,double_val2)
PASS: gdb.base/callfuncs.exp: p t_double_values(double_val1,-67.66)
PASS: gdb.base/callfuncs.exp: Call function with many double arguments.
PASS: gdb.base/callfuncs.exp: p t_double_int(99.0, 1)
PASS: gdb.base/callfuncs.exp: p t_double_int(99.0, 99)
PASS: gdb.base/callfuncs.exp: p t_int_double(99, 1.0)
PASS: gdb.base/callfuncs.exp: p t_int_double(99, 99.0)
PASS: gdb.base/callfuncs.exp: p t_float_complex_values(fc1, fc2)
PASS: gdb.base/callfuncs.exp: p t_float_complex_values(fc3, fc4)
PASS: gdb.base/callfuncs.exp: p t_float_complex_many_args(fc1, fc2, fc3, fc4, fc1, fc2, fc3, fc4, fc1, fc2, fc3, fc4, fc1, fc2, fc3, fc4)
PASS: gdb.base/callfuncs.exp: p t_float_complex_many_args(fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1)
PASS: gdb.base/callfuncs.exp: p t_double_complex_values(dc1, dc2)
PASS: gdb.base/callfuncs.exp: p t_double_complex_values(dc3, dc4)
PASS: gdb.base/callfuncs.exp: p t_double_complex_many_args(dc1, dc2, dc3, dc4, dc1, dc2, dc3, dc4, dc1, dc2, dc3, dc4, dc1, dc2, dc3, dc4)
PASS: gdb.base/callfuncs.exp: p t_double_complex_many_args(dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1)
PASS: gdb.base/callfuncs.exp: p t_long_double_complex_values(ldc1, ldc2)
PASS: gdb.base/callfuncs.exp: p t_long_double_complex_values(ldc3, ldc4)
PASS: gdb.base/callfuncs.exp: p t_long_double_complex_many_args(ldc1, ldc2, ldc3, ldc4, ldc1, ldc2, ldc3, ldc4, ldc1, ldc2, ldc3, ldc4, ldc1, ldc2, ldc3, ldc4)
PASS: gdb.base/callfuncs.exp: p t_long_double_complex_many_args(ldc1, ldc1, ldc1, ldc1, ldc1, ldc1, ldc1,ldc1, ldc1, ldc1, ldc1, ldc1, ldc1, ldc1, ldc1, ldc1)
PASS: gdb.base/callfuncs.exp: p t_string_values(string_val2,string_val1)
PASS: gdb.base/callfuncs.exp: p t_string_values(string_val1,string_val2)
PASS: gdb.base/callfuncs.exp: p t_string_values("string 1","string 2")
PASS: gdb.base/callfuncs.exp: p t_string_values("string 1",string_val2)
PASS: gdb.base/callfuncs.exp: p t_string_values(string_val1,"string 2")
PASS: gdb.base/callfuncs.exp: p t_char_array_values(char_array_val2,char_array_val1)
PASS: gdb.base/callfuncs.exp: p t_char_array_values(char_array_val1,char_array_val2)
PASS: gdb.base/callfuncs.exp: p t_char_array_values("carray 1","carray 2")
PASS: gdb.base/callfuncs.exp: p t_char_array_values("carray 1",char_array_val2)
PASS: gdb.base/callfuncs.exp: p t_char_array_values(char_array_val1,"carray 2")
PASS: gdb.base/callfuncs.exp: p doubleit(4)
PASS: gdb.base/callfuncs.exp: p add(4,5)
PASS: gdb.base/callfuncs.exp: p t_func_values(func_val2,func_val1)
PASS: gdb.base/callfuncs.exp: p t_func_values(func_val1,func_val2)
PASS: gdb.base/callfuncs.exp: p function_struct.func(5)
PASS: gdb.base/callfuncs.exp: p function_struct_ptr->func(10)
PASS: gdb.base/callfuncs.exp: p t_func_values(add,func_val2)
PASS: gdb.base/callfuncs.exp: p t_func_values(func_val1,doubleit)
PASS: gdb.base/callfuncs.exp: p t_call_add(add,3,4)
PASS: gdb.base/callfuncs.exp: p t_call_add(func_val1,3,4)
PASS: gdb.base/callfuncs.exp: p t_enum_value1(enumval1)
PASS: gdb.base/callfuncs.exp: p t_enum_value1(enum_val1)
PASS: gdb.base/callfuncs.exp: p t_enum_value1(enum_val2)
PASS: gdb.base/callfuncs.exp: p t_enum_value2(enumval2)
PASS: gdb.base/callfuncs.exp: p t_enum_value2(enum_val2)
PASS: gdb.base/callfuncs.exp: p t_enum_value2(enum_val1)
PASS: gdb.base/callfuncs.exp: p sum_args(1,{2})
PASS: gdb.base/callfuncs.exp: p sum_args(2,{2,3})
PASS: gdb.base/callfuncs.exp: p sum_args(3,{2,3,4})
PASS: gdb.base/callfuncs.exp: p sum_args(4,{2,3,4,5})
PASS: gdb.base/callfuncs.exp: p sum10 (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
PASS: gdb.base/callfuncs.exp: p cmp10 (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns char
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns short
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns int
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns long
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns float
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns double
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns float _Complex
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns double _Complex
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns long double _Complex
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns char *
PASS: gdb.base/callfuncs.exp: set unwindonsignal off
PASS: gdb.base/callfuncs.exp: register contents after gdb function calls
PASS: gdb.base/callfuncs.exp: gdb function calls preserve register contents
PASS: gdb.base/callfuncs.exp: set language c
PASS: gdb.base/callfuncs.exp: next to t_double_values
PASS: gdb.base/callfuncs.exp: next to t_structs_c
PASS: gdb.base/callfuncs.exp: retrieve original register contents
PASS: gdb.base/callfuncs.exp: stop at breakpoint in call dummy function
PASS: gdb.base/callfuncs.exp: continue from call dummy breakpoint
PASS: gdb.base/callfuncs.exp: bt after continuing from call dummy breakpoint
PASS: gdb.base/callfuncs.exp: register contents after stop in call dummy
PASS: gdb.base/callfuncs.exp: continue after stop in call dummy preserves register contents
PASS: gdb.base/callfuncs.exp: set language c
PASS: gdb.base/callfuncs.exp: next to t_double_values
PASS: gdb.base/callfuncs.exp: next to t_structs_c
PASS: gdb.base/callfuncs.exp: retrieve original register contents
PASS: gdb.base/callfuncs.exp: call function causing a breakpoint then do a finish
PASS: gdb.base/callfuncs.exp: finish from call dummy breakpoint returns correct value
PASS: gdb.base/callfuncs.exp: bt after finishing from call dummy breakpoint
PASS: gdb.base/callfuncs.exp: register contents after finish in call dummy
PASS: gdb.base/callfuncs.exp: finish after stop in call dummy preserves register contents
PASS: gdb.base/callfuncs.exp: set language c
PASS: gdb.base/callfuncs.exp: next to t_double_values
PASS: gdb.base/callfuncs.exp: next to t_structs_c
PASS: gdb.base/callfuncs.exp: retrieve original register contents
PASS: gdb.base/callfuncs.exp: call function causing a breakpoint and then do a return
PASS: gdb.base/callfuncs.exp: back at main after return from call dummy breakpoint
PASS: gdb.base/callfuncs.exp: register contents after return in call dummy
PASS: gdb.base/callfuncs.exp: return after stop in call dummy preserves register contents
PASS: gdb.base/callfuncs.exp: set language c
PASS: gdb.base/callfuncs.exp: next to t_double_values
PASS: gdb.base/callfuncs.exp: next to t_structs_c
PASS: gdb.base/callfuncs.exp: retrieve original register contents
PASS: gdb.base/callfuncs.exp: stop at nested call level 1
PASS: gdb.base/callfuncs.exp: backtrace at nested call level 1
PASS: gdb.base/callfuncs.exp: stop at nested call level 2
PASS: gdb.base/callfuncs.exp: backtrace at nested call level 2
PASS: gdb.base/callfuncs.exp: stop at nested call level 3
PASS: gdb.base/callfuncs.exp: backtrace at nested call level 3
PASS: gdb.base/callfuncs.exp: stop at nested call level 4
PASS: gdb.base/callfuncs.exp: backtrace at nested call level 4
PASS: gdb.base/callfuncs.exp: Finish from nested call level 4
PASS: gdb.base/callfuncs.exp: backtrace after finish from nested call level 4
PASS: gdb.base/callfuncs.exp: Finish from nested call level 3
PASS: gdb.base/callfuncs.exp: backtrace after finish from nested call level 3
PASS: gdb.base/callfuncs.exp: Finish from nested call level 2
PASS: gdb.base/callfuncs.exp: backtrace after finish from nested call level 2
PASS: gdb.base/callfuncs.exp: Finish from nested call level 1
PASS: gdb.base/callfuncs.exp: backtrace after finish from nested call level 1
PASS: gdb.base/callfuncs.exp: register contents after nested call dummies
PASS: gdb.base/callfuncs.exp: nested call dummies preserve register contents
PASS: gdb.base/callfuncs.exp: print callfunc (Lcallfunc, 5)
PASS: gdb.base/callfuncs.exp: print *((int *(*) (void)) voidfunc)()
PASS: gdb.base/callfuncs.exp: noproto: set print sevenbit-strings
PASS: gdb.base/callfuncs.exp: noproto: set print address off
PASS: gdb.base/callfuncs.exp: noproto: set width 0
PASS: gdb.base/callfuncs.exp: noproto: set language c
PASS: gdb.base/callfuncs.exp: noproto: next to t_double_values
PASS: gdb.base/callfuncs.exp: noproto: next to t_structs_c
PASS: gdb.base/callfuncs.exp: noproto: retrieve original register contents
PASS: gdb.base/callfuncs.exp: noproto: set unwindonsignal on
PASS: gdb.base/callfuncs.exp: noproto: p t_char_values(0,0)
PASS: gdb.base/callfuncs.exp: noproto: p t_char_values('a','b')
PASS: gdb.base/callfuncs.exp: noproto: p t_char_values(char_val1,char_val2)
PASS: gdb.base/callfuncs.exp: noproto: p t_char_values('a',char_val2)
PASS: gdb.base/callfuncs.exp: noproto: p t_char_values(char_val1,'b')
PASS: gdb.base/callfuncs.exp: noproto: p t_short_values(0,0)
PASS: gdb.base/callfuncs.exp: noproto: p t_short_values(10,-23)
PASS: gdb.base/callfuncs.exp: noproto: p t_short_values(short_val1,short_val2)
PASS: gdb.base/callfuncs.exp: noproto: p t_short_values(10,short_val2)
PASS: gdb.base/callfuncs.exp: noproto: p t_short_values(short_val1,-23)
PASS: gdb.base/callfuncs.exp: noproto: p t_int_values(0,0)
PASS: gdb.base/callfuncs.exp: noproto: p t_int_values(87,-26)
PASS: gdb.base/callfuncs.exp: noproto: p t_int_values(int_val1,int_val2)
PASS: gdb.base/callfuncs.exp: noproto: p t_int_values(87,int_val2)
PASS: gdb.base/callfuncs.exp: noproto: p t_int_values(int_val1,-26)
PASS: gdb.base/callfuncs.exp: noproto: p t_long_values(0,0)
PASS: gdb.base/callfuncs.exp: noproto: p t_long_values(789,-321)
PASS: gdb.base/callfuncs.exp: noproto: p t_long_values(long_val1,long_val2)
PASS: gdb.base/callfuncs.exp: noproto: p t_long_values(789,long_val2)
PASS: gdb.base/callfuncs.exp: noproto: p t_long_values(long_val1,-321)
PASS: gdb.base/callfuncs.exp: noproto: p t_float_values(0.0,0.0)
PASS: gdb.base/callfuncs.exp: noproto: p t_float_values(3.14159,-2.3765)
PASS: gdb.base/callfuncs.exp: noproto: p t_float_values(float_val1,float_val2)
PASS: gdb.base/callfuncs.exp: noproto: p t_float_values(3.14159,float_val2)
PASS: gdb.base/callfuncs.exp: noproto: p t_float_values(float_val1,-2.3765)
PASS: gdb.base/callfuncs.exp: noproto: p t_float_values2(0.0,0.0)
PASS: gdb.base/callfuncs.exp: noproto: p t_float_values2(3.14159,float_val2)
PASS: gdb.base/callfuncs.exp: noproto: Call function with many float arguments.
PASS: gdb.base/callfuncs.exp: noproto: p t_small_values(1,2,3,4,5,6,7,8,9,10)
PASS: gdb.base/callfuncs.exp: noproto: p t_double_values(0.0,0.0)
PASS: gdb.base/callfuncs.exp: noproto: p t_double_values(45.654,-67.66)
PASS: gdb.base/callfuncs.exp: noproto: p t_double_values(double_val1,double_val2)
PASS: gdb.base/callfuncs.exp: noproto: p t_double_values(45.654,double_val2)
PASS: gdb.base/callfuncs.exp: noproto: p t_double_values(double_val1,-67.66)
PASS: gdb.base/callfuncs.exp: noproto: Call function with many double arguments.
PASS: gdb.base/callfuncs.exp: noproto: p t_double_int(99.0, 1)
PASS: gdb.base/callfuncs.exp: noproto: p t_double_int(99.0, 99)
PASS: gdb.base/callfuncs.exp: noproto: p t_int_double(99, 1.0)
PASS: gdb.base/callfuncs.exp: noproto: p t_int_double(99, 99.0)
PASS: gdb.base/callfuncs.exp: noproto: p t_float_complex_values(fc1, fc2)
PASS: gdb.base/callfuncs.exp: noproto: p t_float_complex_values(fc3, fc4)
PASS: gdb.base/callfuncs.exp: noproto: p t_float_complex_many_args(fc1, fc2, fc3, fc4, fc1, fc2, fc3, fc4, fc1, fc2, fc3, fc4, fc1, fc2, fc3, fc4)
PASS: gdb.base/callfuncs.exp: noproto: p t_float_complex_many_args(fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1)
PASS: gdb.base/callfuncs.exp: noproto: p t_double_complex_values(dc1, dc2)
PASS: gdb.base/callfuncs.exp: noproto: p t_double_complex_values(dc3, dc4)
PASS: gdb.base/callfuncs.exp: noproto: p t_double_complex_many_args(dc1, dc2, dc3, dc4, dc1, dc2, dc3, dc4, dc1, dc2, dc3, dc4, dc1, dc2, dc3, dc4)
PASS: gdb.base/callfuncs.exp: noproto: p t_double_complex_many_args(dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1)
PASS: gdb.base/callfuncs.exp: noproto: p t_long_double_complex_values(ldc1, ldc2)
PASS: gdb.base/callfuncs.exp: noproto: p t_long_double_complex_values(ldc3, ldc4)
PASS: gdb.base/callfuncs.exp: noproto: p t_long_double_complex_many_args(ldc1, ldc2, ldc3, ldc4, ldc1, ldc2, ldc3, ldc4, ldc1, ldc2, ldc3, ldc4, ldc1, ldc2, ldc3, ldc4)
PASS: gdb.base/callfuncs.exp: noproto: p t_long_double_complex_many_args(ldc1, ldc1, ldc1, ldc1, ldc1, ldc1, ldc1,ldc1, ldc1, ldc1, ldc1, ldc1, ldc1, ldc1, ldc1, ldc1)
PASS: gdb.base/callfuncs.exp: noproto: p t_string_values(string_val2,string_val1)
PASS: gdb.base/callfuncs.exp: noproto: p t_string_values(string_val1,string_val2)
PASS: gdb.base/callfuncs.exp: noproto: p t_string_values("string 1","string 2")
PASS: gdb.base/callfuncs.exp: noproto: p t_string_values("string 1",string_val2)
PASS: gdb.base/callfuncs.exp: noproto: p t_string_values(string_val1,"string 2")
PASS: gdb.base/callfuncs.exp: noproto: p t_char_array_values(char_array_val2,char_array_val1)
PASS: gdb.base/callfuncs.exp: noproto: p t_char_array_values(char_array_val1,char_array_val2)
PASS: gdb.base/callfuncs.exp: noproto: p t_char_array_values("carray 1","carray 2")
PASS: gdb.base/callfuncs.exp: noproto: p t_char_array_values("carray 1",char_array_val2)
PASS: gdb.base/callfuncs.exp: noproto: p t_char_array_values(char_array_val1,"carray 2")
PASS: gdb.base/callfuncs.exp: noproto: p doubleit(4)
PASS: gdb.base/callfuncs.exp: noproto: p add(4,5)
PASS: gdb.base/callfuncs.exp: noproto: p t_func_values(func_val2,func_val1)
PASS: gdb.base/callfuncs.exp: noproto: p t_func_values(func_val1,func_val2)
PASS: gdb.base/callfuncs.exp: noproto: p function_struct.func(5)
PASS: gdb.base/callfuncs.exp: noproto: p function_struct_ptr->func(10)
PASS: gdb.base/callfuncs.exp: noproto: p t_func_values(add,func_val2)
PASS: gdb.base/callfuncs.exp: noproto: p t_func_values(func_val1,doubleit)
PASS: gdb.base/callfuncs.exp: noproto: p t_call_add(add,3,4)
PASS: gdb.base/callfuncs.exp: noproto: p t_call_add(func_val1,3,4)
PASS: gdb.base/callfuncs.exp: noproto: p t_enum_value1(enumval1)
PASS: gdb.base/callfuncs.exp: noproto: p t_enum_value1(enum_val1)
PASS: gdb.base/callfuncs.exp: noproto: p t_enum_value1(enum_val2)
PASS: gdb.base/callfuncs.exp: noproto: p t_enum_value2(enumval2)
PASS: gdb.base/callfuncs.exp: noproto: p t_enum_value2(enum_val2)
PASS: gdb.base/callfuncs.exp: noproto: p t_enum_value2(enum_val1)
PASS: gdb.base/callfuncs.exp: noproto: p sum_args(1,{2})
PASS: gdb.base/callfuncs.exp: noproto: p sum_args(2,{2,3})
PASS: gdb.base/callfuncs.exp: noproto: p sum_args(3,{2,3,4})
PASS: gdb.base/callfuncs.exp: noproto: p sum_args(4,{2,3,4,5})
PASS: gdb.base/callfuncs.exp: noproto: p sum10 (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
PASS: gdb.base/callfuncs.exp: noproto: p cmp10 (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
PASS: gdb.base/callfuncs.exp: noproto: call inferior func with struct - returns char
PASS: gdb.base/callfuncs.exp: noproto: call inferior func with struct - returns short
PASS: gdb.base/callfuncs.exp: noproto: call inferior func with struct - returns int
PASS: gdb.base/callfuncs.exp: noproto: call inferior func with struct - returns long
PASS: gdb.base/callfuncs.exp: noproto: call inferior func with struct - returns float
PASS: gdb.base/callfuncs.exp: noproto: call inferior func with struct - returns double
PASS: gdb.base/callfuncs.exp: noproto: call inferior func with struct - returns float _Complex
PASS: gdb.base/callfuncs.exp: noproto: call inferior func with struct - returns double _Complex
PASS: gdb.base/callfuncs.exp: noproto: call inferior func with struct - returns long double _Complex
PASS: gdb.base/callfuncs.exp: noproto: call inferior func with struct - returns char *
PASS: gdb.base/callfuncs.exp: noproto: set unwindonsignal off
PASS: gdb.base/callfuncs.exp: noproto: register contents after gdb function calls
PASS: gdb.base/callfuncs.exp: noproto: gdb function calls preserve register contents
PASS: gdb.base/callfuncs.exp: noproto: set language c
PASS: gdb.base/callfuncs.exp: noproto: next to t_double_values
PASS: gdb.base/callfuncs.exp: noproto: next to t_structs_c
PASS: gdb.base/callfuncs.exp: noproto: retrieve original register contents
PASS: gdb.base/callfuncs.exp: noproto: stop at breakpoint in call dummy function
PASS: gdb.base/callfuncs.exp: noproto: continue from call dummy breakpoint
PASS: gdb.base/callfuncs.exp: noproto: bt after continuing from call dummy breakpoint
PASS: gdb.base/callfuncs.exp: noproto: register contents after stop in call dummy
PASS: gdb.base/callfuncs.exp: noproto: continue after stop in call dummy preserves register contents
PASS: gdb.base/callfuncs.exp: noproto: set language c
PASS: gdb.base/callfuncs.exp: noproto: next to t_double_values
PASS: gdb.base/callfuncs.exp: noproto: next to t_structs_c
PASS: gdb.base/callfuncs.exp: noproto: retrieve original register contents
PASS: gdb.base/callfuncs.exp: noproto: call function causing a breakpoint then do a finish
PASS: gdb.base/callfuncs.exp: noproto: finish from call dummy breakpoint returns correct value
PASS: gdb.base/callfuncs.exp: noproto: bt after finishing from call dummy breakpoint
PASS: gdb.base/callfuncs.exp: noproto: register contents after finish in call dummy
PASS: gdb.base/callfuncs.exp: noproto: finish after stop in call dummy preserves register contents
PASS: gdb.base/callfuncs.exp: noproto: set language c
PASS: gdb.base/callfuncs.exp: noproto: next to t_double_values
PASS: gdb.base/callfuncs.exp: noproto: next to t_structs_c
PASS: gdb.base/callfuncs.exp: noproto: retrieve original register contents
PASS: gdb.base/callfuncs.exp: noproto: call function causing a breakpoint and then do a return
PASS: gdb.base/callfuncs.exp: noproto: back at main after return from call dummy breakpoint
PASS: gdb.base/callfuncs.exp: noproto: register contents after return in call dummy
PASS: gdb.base/callfuncs.exp: noproto: return after stop in call dummy preserves register contents
PASS: gdb.base/callfuncs.exp: noproto: set language c
PASS: gdb.base/callfuncs.exp: noproto: next to t_double_values
PASS: gdb.base/callfuncs.exp: noproto: next to t_structs_c
PASS: gdb.base/callfuncs.exp: noproto: retrieve original register contents
PASS: gdb.base/callfuncs.exp: noproto: stop at nested call level 1
PASS: gdb.base/callfuncs.exp: noproto: backtrace at nested call level 1
PASS: gdb.base/callfuncs.exp: noproto: stop at nested call level 2
PASS: gdb.base/callfuncs.exp: noproto: backtrace at nested call level 2
PASS: gdb.base/callfuncs.exp: noproto: stop at nested call level 3
PASS: gdb.base/callfuncs.exp: noproto: backtrace at nested call level 3
PASS: gdb.base/callfuncs.exp: noproto: stop at nested call level 4
PASS: gdb.base/callfuncs.exp: noproto: backtrace at nested call level 4
PASS: gdb.base/callfuncs.exp: noproto: Finish from nested call level 4
PASS: gdb.base/callfuncs.exp: noproto: backtrace after finish from nested call level 4
PASS: gdb.base/callfuncs.exp: noproto: Finish from nested call level 3
PASS: gdb.base/callfuncs.exp: noproto: backtrace after finish from nested call level 3
PASS: gdb.base/callfuncs.exp: noproto: Finish from nested call level 2
PASS: gdb.base/callfuncs.exp: noproto: backtrace after finish from nested call level 2
PASS: gdb.base/callfuncs.exp: noproto: Finish from nested call level 1
PASS: gdb.base/callfuncs.exp: noproto: backtrace after finish from nested call level 1
PASS: gdb.base/callfuncs.exp: noproto: register contents after nested call dummies
PASS: gdb.base/callfuncs.exp: noproto: nested call dummies preserve register contents
PASS: gdb.base/callfuncs.exp: noproto: print callfunc (Lcallfunc, 5)
PASS: gdb.base/callfuncs.exp: noproto: print *((int *(*) (void)) voidfunc)()
Running ../../../gdb/testsuite/gdb.base/value-double-free.exp ...
PASS: gdb.base/value-double-free.exp: watch var
PASS: gdb.base/value-double-free.exp: continue
PASS: gdb.base/value-double-free.exp: print empty()
PASS: gdb.base/value-double-free.exp: help help
Running ../../../gdb/testsuite/gdb.base/pointers.exp ...
PASS: gdb.base/pointers.exp: continuing after dummy()
PASS: gdb.base/pointers.exp: set pointer to beginning of array
PASS: gdb.base/pointers.exp: set pointer to end of array
PASS: gdb.base/pointers.exp: print object pointed to
PASS: gdb.base/pointers.exp: print object pointed to #2
PASS: gdb.base/pointers.exp: pointer1==pointer2
PASS: gdb.base/pointers.exp: pointer1!=pointer2
PASS: gdb.base/pointers.exp: pointer1<=pointer2
PASS: gdb.base/pointers.exp: pointer1>=pointer2
PASS: gdb.base/pointers.exp: pointer1<pointer2
PASS: gdb.base/pointers.exp: pointer1>pointer2
PASS: gdb.base/pointers.exp: set y = *v_int_pointer++
PASS: gdb.base/pointers.exp: pointer assignment
PASS: gdb.base/pointers.exp: and post-increment
PASS: gdb.base/pointers.exp: set y = *--v_int_pointer2
PASS: gdb.base/pointers.exp: pointer assignment
PASS: gdb.base/pointers.exp: and pre-decrement
PASS: gdb.base/pointers.exp: set y =v_int_pointer-v_int_pointer2
PASS: gdb.base/pointers.exp: pointer1-pointer2
PASS: gdb.base/pointers.exp: set v_int_pointer=v_int_array
PASS: gdb.base/pointers.exp: print array element through pointer
PASS: gdb.base/pointers.exp: print array element through pointer #2
PASS: gdb.base/pointers.exp: print array element through pointer #3
PASS: gdb.base/pointers.exp: print array element through pointer #4
PASS: gdb.base/pointers.exp: print array element through pointer #5
PASS: gdb.base/pointers.exp: increment rptr
PASS: gdb.base/pointers.exp: print array element through pointer #6
PASS: gdb.base/pointers.exp: print array element through pointer #7
PASS: gdb.base/pointers.exp: print array element through pointer #8
PASS: gdb.base/pointers.exp: print array element w/ pointer arithmetic
PASS: gdb.base/pointers.exp: print through ptr to ptr
PASS: gdb.base/pointers.exp: continue
PASS: gdb.base/pointers.exp: up from marker1
PASS: gdb.base/pointers.exp: print value of *pUC
PASS: gdb.base/pointers.exp: ptype pUC
PASS: gdb.base/pointers.exp: print value of *pS
PASS: gdb.base/pointers.exp: ptype pS
PASS: gdb.base/pointers.exp: print value of *pUS
PASS: gdb.base/pointers.exp: ptype pUS
PASS: gdb.base/pointers.exp: print value of *pI
PASS: gdb.base/pointers.exp: ptype pI
PASS: gdb.base/pointers.exp: print value of *pUI
PASS: gdb.base/pointers.exp: ptype pUI
PASS: gdb.base/pointers.exp: print value of *pL
PASS: gdb.base/pointers.exp: ptype pL
PASS: gdb.base/pointers.exp: print value of *pUL
PASS: gdb.base/pointers.exp: ptype pUL
PASS: gdb.base/pointers.exp: print value of *pF
PASS: gdb.base/pointers.exp: ptype pF
PASS: gdb.base/pointers.exp: print value of *pD
PASS: gdb.base/pointers.exp: ptype pD
PASS: gdb.base/pointers.exp: print value of ******ppppppC
PASS: gdb.base/pointers.exp: ptype pC
PASS: gdb.base/pointers.exp: ptype ppC
PASS: gdb.base/pointers.exp: ptype pppC
PASS: gdb.base/pointers.exp: ptype ppppC
PASS: gdb.base/pointers.exp: ptype pppppC
PASS: gdb.base/pointers.exp: ptype ppppppC
PASS: gdb.base/pointers.exp: p instance.array_variable + 0
Running ../../../gdb/testsuite/gdb.base/hbreak-in-shr-unsupported.exp ...
Running ../../../gdb/testsuite/gdb.base/foll-fork.exp ...
Running ../../../gdb/testsuite/gdb.base/subst.exp ...
PASS: gdb.base/subst.exp: deactivate GDB's confirmation interface
PASS: gdb.base/subst.exp: remove default substitution rules
PASS: gdb.base/subst.exp: show substitute-path, no rule entered yet
PASS: gdb.base/subst.exp: show substitute-path from, no rule entered yet
PASS: gdb.base/subst.exp: show substitute-path, too many arguments
PASS: gdb.base/subst.exp: unset substitute-path from, no rule entered yet
PASS: gdb.base/subst.exp: unset substitute-path, no rule entered yet
PASS: gdb.base/subst.exp: unset substitute-path from, no rule entered yet
PASS: gdb.base/subst.exp: unset substitute-path, too many arguments
PASS: gdb.base/subst.exp: set substitute-path, too many arguments
PASS: gdb.base/subst.exp: set substitute-path, too few arguments
PASS: gdb.base/subst.exp: set substitute-path, first argument is empty string
PASS: gdb.base/subst.exp: add from -> to substitution rule
PASS: gdb.base/subst.exp: add from1 -> to1 substitution rule
PASS: gdb.base/subst.exp: add source -> destination substitution rule
PASS: gdb.base/subst.exp: add depuis -> vers substitution rule
PASS: gdb.base/subst.exp: add substitution rule to empty string
PASS: gdb.base/subst.exp: show substitute-path after all paths added
PASS: gdb.base/subst.exp: show substitute-path from, after all paths added
PASS: gdb.base/subst.exp: show substitute-path depuis, after all paths added
PASS: gdb.base/subst.exp: show substitute-path from/path, after all paths added
PASS: gdb.base/subst.exp: show substitute-path from_a_bad_path, after all paths added
PASS: gdb.base/subst.exp: show substitute-path garbage, after all paths added
PASS: gdb.base/subst.exp: unset substitute-path from
PASS: gdb.base/subst.exp: show substitute-path from, after unsetting it
PASS: gdb.base/subst.exp: show substitute-path after from rule removed
PASS: gdb.base/subst.exp: unset substitute-path from after the rule was removed
PASS: gdb.base/subst.exp: unset substitute-path depuis (middle of list)
PASS: gdb.base/subst.exp: show substitute-path after depuis rule removed
PASS: gdb.base/subst.exp: unset substitute-path empty (end of list)
PASS: gdb.base/subst.exp: show substitute-path after empty rule removed
PASS: gdb.base/subst.exp: remove all remaining substitution rules
PASS: gdb.base/subst.exp: show substitute-path after all remaining rules removed
Running ../../../gdb/testsuite/gdb.base/dtrace-probe.exp ...
UNTESTED: gdb.base/dtrace-probe.exp: could not compile test program
Running ../../../gdb/testsuite/gdb.base/del.exp ...
PASS: gdb.base/del.exp: Remove all breakpoints (del)
PASS: gdb.base/del.exp: info break after removing break on main
PASS: gdb.base/del.exp: breakpoint insertion (del)
PASS: gdb.base/del.exp: Remove last breakpoint (del)
PASS: gdb.base/del.exp: info break after removing break on main (del)
PASS: gdb.base/del.exp: Remove all breakpoints (d)
PASS: gdb.base/del.exp: info break after removing break on main
PASS: gdb.base/del.exp: breakpoint insertion (d)
PASS: gdb.base/del.exp: Remove last breakpoint (d)
PASS: gdb.base/del.exp: info break after removing break on main (d)
Running ../../../gdb/testsuite/gdb.base/siginfo-infcall.exp ...
Running ../../../gdb/testsuite/gdb.base/catch-load.exp ...
UNTESTED: gdb.base/catch-load.exp: catch-load.exp
Running ../../../gdb/testsuite/gdb.base/interact.exp ...
PASS: gdb.base/interact.exp: set interactive-mode auto
PASS: gdb.base/interact.exp: source script with interactive-mode auto
PASS: gdb.base/interact.exp: sanity check with interactive-mode auto
PASS: gdb.base/interact.exp: show interactive-mode (auto)
PASS: gdb.base/interact.exp: set interactive-mode on
PASS: gdb.base/interact.exp: source script with interactive-mode on
PASS: gdb.base/interact.exp: sanity check with interactive-mode on
PASS: gdb.base/interact.exp: show interactive-mode (on)
PASS: gdb.base/interact.exp: set interactive-mode off
PASS: gdb.base/interact.exp: source script with interactive-mode off
PASS: gdb.base/interact.exp: sanity check with interactive-mode off
PASS: gdb.base/interact.exp: show interactive-mode (off)
Running ../../../gdb/testsuite/gdb.base/interrupt-noterm.exp ...
PASS: gdb.base/interrupt-noterm.exp: set interactive-mode off
PASS: gdb.base/interrupt-noterm.exp: set confirm off
PASS: gdb.base/interrupt-noterm.exp: delete
PASS: gdb.base/interrupt-noterm.exp: set confirm on
PASS: gdb.base/interrupt-noterm.exp: continue &
PASS: gdb.base/interrupt-noterm.exp: interrupt
PASS: gdb.base/interrupt-noterm.exp: inferior received SIGINT
Running ../../../gdb/testsuite/gdb.base/sepdebug.exp ...
PASS: gdb.base/sepdebug.exp: breakpoint function
PASS: gdb.base/sepdebug.exp: breakpoint quoted function
PASS: gdb.base/sepdebug.exp: breakpoint function in file
PASS: gdb.base/sepdebug.exp: use `list' to establish default source file
PASS: gdb.base/sepdebug.exp: breakpoint line number
PASS: gdb.base/sepdebug.exp: breakpoint duplicate
PASS: gdb.base/sepdebug.exp: breakpoint line number in file
PASS: gdb.base/sepdebug.exp: breakpoint at start of multi line if conditional
PASS: gdb.base/sepdebug.exp: breakpoint at start of multi line while conditional
PASS: gdb.base/sepdebug.exp: breakpoint info
PASS: gdb.base/sepdebug.exp: run until function breakpoint
PASS: gdb.base/sepdebug.exp: run until breakpoint set at a line number
PASS: gdb.base/sepdebug.exp: run until file:function(6) breakpoint
PASS: gdb.base/sepdebug.exp: run until file:function(5) breakpoint
PASS: gdb.base/sepdebug.exp: run until file:function(4) breakpoint
PASS: gdb.base/sepdebug.exp: run until file:function(3) breakpoint
PASS: gdb.base/sepdebug.exp: run until file:function(2) breakpoint
PASS: gdb.base/sepdebug.exp: run until file:function(1) breakpoint
PASS: gdb.base/sepdebug.exp: run until quoted breakpoint
PASS: gdb.base/sepdebug.exp: run until file:linenum breakpoint
PASS: gdb.base/sepdebug.exp: breakpoint offset +1
PASS: gdb.base/sepdebug.exp: step onto breakpoint
PASS: gdb.base/sepdebug.exp: Temporary breakpoint function
PASS: gdb.base/sepdebug.exp: Temporary breakpoint function in file
PASS: gdb.base/sepdebug.exp: Temporary breakpoint line number #1
PASS: gdb.base/sepdebug.exp: Temporary breakpoint line number #2
PASS: gdb.base/sepdebug.exp: Temporary breakpoint line number in file #1
PASS: gdb.base/sepdebug.exp: Temporary breakpoint line number in file #2
PASS: gdb.base/sepdebug.exp: Temporary breakpoint info
PASS: gdb.base/sepdebug.exp: catch requires an event name
PASS: gdb.base/sepdebug.exp: set catch fork, never expected to trigger
PASS: gdb.base/sepdebug.exp: set catch vfork, never expected to trigger
PASS: gdb.base/sepdebug.exp: set catch exec, never expected to trigger
PASS: gdb.base/sepdebug.exp: set breakpoint pending off
PASS: gdb.base/sepdebug.exp: break on non-existent source line
PASS: gdb.base/sepdebug.exp: until bp_location1
PASS: gdb.base/sepdebug.exp: break on default location, 1st time
PASS: gdb.base/sepdebug.exp: break on default location, 2nd time
PASS: gdb.base/sepdebug.exp: break on default location, 3rd time
PASS: gdb.base/sepdebug.exp: break on default location, 4th time
PASS: gdb.base/sepdebug.exp: set to-be-silent break bp_location1
PASS: gdb.base/sepdebug.exp: set silent break bp_location1
PASS: gdb.base/sepdebug.exp: info silent break bp_location1
PASS: gdb.base/sepdebug.exp: hit silent break bp_location1
PASS: gdb.base/sepdebug.exp: stopped for silent break bp_location1
PASS: gdb.base/sepdebug.exp: thread-specific breakpoint on non-existent thread disallowed
PASS: gdb.base/sepdebug.exp: thread-specific breakpoint on bogus thread ID disallowed
PASS: gdb.base/sepdebug.exp: breakpoint with trailing garbage disallowed
PASS: gdb.base/sepdebug.exp: step over breakpoint
PASS: gdb.base/sepdebug.exp: clear line has no breakpoint disallowed
PASS: gdb.base/sepdebug.exp: clear current line has no breakpoint disallowed
PASS: gdb.base/sepdebug.exp: break marker3 #1
PASS: gdb.base/sepdebug.exp: break marker3 #2
PASS: gdb.base/sepdebug.exp: clear marker3
PASS: gdb.base/sepdebug.exp: set convenience variable $foo to bp_location11
PASS: gdb.base/sepdebug.exp: set breakpoint via convenience variable
PASS: gdb.base/sepdebug.exp: set convenience variable $foo to 81.5
PASS: gdb.base/sepdebug.exp: set breakpoint via non-integer convenience variable disallowed
PASS: gdb.base/sepdebug.exp: set breakpoint on to-be-called function
PASS: gdb.base/sepdebug.exp: hit breakpoint on called function
PASS: gdb.base/sepdebug.exp: backtrace while in called function
PASS: gdb.base/sepdebug.exp: finish from called function
PASS: gdb.base/sepdebug.exp: finish with arguments disallowed
PASS: gdb.base/sepdebug.exp: finish from outermost frame disallowed
PASS: gdb.base/sepdebug.exp: kill program
PASS: gdb.base/sepdebug.exp: break at factorial
PASS: gdb.base/sepdebug.exp: run to factorial(6)
PASS: gdb.base/sepdebug.exp: continue to factorial(5)
PASS: gdb.base/sepdebug.exp: backtrace from factorial(5)
PASS: gdb.base/sepdebug.exp: next to recursive call
PASS: gdb.base/sepdebug.exp: next over recursive call
PASS: gdb.base/sepdebug.exp: backtrace from factorial(5.1)
PASS: gdb.base/sepdebug.exp: continue until exit at recursive next test
PASS: gdb.base/sepdebug.exp: debuglink: set separate debug location
PASS: gdb.base/sepdebug.exp: debuglink: breakpoint function, optimized file
PASS: gdb.base/sepdebug.exp: debuglink: breakpoint small function, optimized file
PASS: gdb.base/sepdebug.exp: debuglink: run until function breakpoint, optimized file
PASS: gdb.base/sepdebug.exp: debuglink: run until breakpoint set at small function, optimized file (line bp_location14)
PASS: gdb.base/sepdebug.exp: CRC mismatch is reported
UNSUPPORTED: gdb.base/sepdebug.exp: build-id is not supported by the compiler
Running ../../../gdb/testsuite/gdb.base/step-break.exp ...
PASS: gdb.base/step-break.exp: breakpoint line number
PASS: gdb.base/step-break.exp: run until breakpoint set at a line number
PASS: gdb.base/step-break.exp: next 2 (1)
PASS: gdb.base/step-break.exp: next 2 (2)
PASS: gdb.base/step-break.exp: next 2 (3)
PASS: gdb.base/step-break.exp: next 2 (4)
PASS: gdb.base/step-break.exp: next 2 (5)
PASS: gdb.base/step-break.exp: next 2 (6)
Running ../../../gdb/testsuite/gdb.base/ui-redirect.exp ...
PASS: gdb.base/ui-redirect.exp: commands
PASS: gdb.base/ui-redirect.exp: print 1
PASS: gdb.base/ui-redirect.exp: end
PASS: gdb.base/ui-redirect.exp: set logging file /dev/null
PASS: gdb.base/ui-redirect.exp: set logging on
PASS: gdb.base/ui-redirect.exp: save breakpoints /dev/null
PASS: gdb.base/ui-redirect.exp: set logging off
PASS: gdb.base/ui-redirect.exp: help
Running ../../../gdb/testsuite/gdb.base/call-rt-st.exp ...
PASS: gdb.base/call-rt-st.exp: set print sevenbit-strings
PASS: gdb.base/call-rt-st.exp: set print address off
PASS: gdb.base/call-rt-st.exp: set width 0
PASS: gdb.base/call-rt-st.exp: breakpoint loop_count
PASS: gdb.base/call-rt-st.exp: continue to loop_count
PASS: gdb.base/call-rt-st.exp: finish out from loop_count (finish1)
Running ../../../gdb/testsuite/gdb.base/pr10179.exp ...
PASS: gdb.base/pr10179.exp: rbreak foo.*
PASS: gdb.base/pr10179.exp: rbreak pr10179-a.c:foo.*
PASS: gdb.base/pr10179.exp: rbreak pr10179-a.c : .*
Running ../../../gdb/testsuite/gdb.base/foll-exec-mode.exp ...
Running ../../../gdb/testsuite/gdb.base/infnan.exp ...
PASS: gdb.base/infnan.exp: print a
PASS: gdb.base/infnan.exp: print b
Running ../../../gdb/testsuite/gdb.base/breakpoint-shadow.exp ...
PASS: gdb.base/breakpoint-shadow.exp: set breakpoint always-inserted on
PASS: gdb.base/breakpoint-shadow.exp: show breakpoint always-inserted
PASS: gdb.base/breakpoint-shadow.exp: disassembly without breakpoints
PASS: gdb.base/breakpoint-shadow.exp: First breakpoint placed
PASS: gdb.base/breakpoint-shadow.exp: Second breakpoint placed
PASS: gdb.base/breakpoint-shadow.exp: disassembly with breakpoints
PASS: gdb.base/breakpoint-shadow.exp: set code-cache off
PASS: gdb.base/breakpoint-shadow.exp: set code-cache on
PASS: gdb.base/breakpoint-shadow.exp: disassembly with breakpoints, fresh code cache
PASS: gdb.base/breakpoint-shadow.exp: disassembly without breakpoints, no stale breakpoints
Running ../../../gdb/testsuite/gdb.base/unwindonsignal.exp ...
Running ../../../gdb/testsuite/gdb.base/advance.exp ...
PASS: gdb.base/advance.exp: advance line number
PASS: gdb.base/advance.exp: malformed advance
PASS: gdb.base/advance.exp: advance func
PASS: gdb.base/advance.exp: advance function not called by current frame
PASS: gdb.base/advance.exp: set breakpoint at call to func3
PASS: gdb.base/advance.exp: continue to call to func3 in main
PASS: gdb.base/advance.exp: advance function called as param
PASS: gdb.base/advance.exp: advance with no argument
Running ../../../gdb/testsuite/gdb.base/gdbindex-stabs.exp ...
PASS: gdb.base/gdbindex-stabs.exp: list stabs_function
Running ../../../gdb/testsuite/gdb.base/detach.exp ...
Running ../../../gdb/testsuite/gdb.base/duplicate-bp.exp ...
PASS: gdb.base/duplicate-bp.exp: del_1_stop_2: set $bp_num_1 = $bpnum
PASS: gdb.base/duplicate-bp.exp: del_1_stop_2: set $bp_num_2 = $bpnum
PASS: gdb.base/duplicate-bp.exp: del_1_stop_2: step to place breakpoints
PASS: gdb.base/duplicate-bp.exp: del_1_stop_2: delete $bp_num_1
PASS: gdb.base/duplicate-bp.exp: del_1_stop_2: delete #1, stop at #2
PASS: gdb.base/duplicate-bp.exp: del_2_stop_1: set $bp_num_1 = $bpnum
PASS: gdb.base/duplicate-bp.exp: del_2_stop_1: set $bp_num_2 = $bpnum
PASS: gdb.base/duplicate-bp.exp: del_2_stop_1: step to place breakpoints
PASS: gdb.base/duplicate-bp.exp: del_2_stop_1: delete $bp_num_2
PASS: gdb.base/duplicate-bp.exp: del_2_stop_1: delete #2, stop at #1
PASS: gdb.base/duplicate-bp.exp: dis_1_del_2_stop_3: set $bp_num_1 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_1_del_2_stop_3: set $bp_num_2 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_1_del_2_stop_3: set $bp_num_3 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_1_del_2_stop_3: step to place breakpoints
PASS: gdb.base/duplicate-bp.exp: dis_1_del_2_stop_3: disable $bp_num_1
PASS: gdb.base/duplicate-bp.exp: dis_1_del_2_stop_3: step
PASS: gdb.base/duplicate-bp.exp: dis_1_del_2_stop_3: delete $bp_num_2
PASS: gdb.base/duplicate-bp.exp: dis_1_del_2_stop_3: disable #1, delete #2, stop at #3
PASS: gdb.base/duplicate-bp.exp: dis_2_del_1_stop_3: set $bp_num_1 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_2_del_1_stop_3: set $bp_num_2 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_2_del_1_stop_3: set $bp_num_3 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_2_del_1_stop_3: step to place breakpoints
PASS: gdb.base/duplicate-bp.exp: dis_2_del_1_stop_3: disable $bp_num_2
PASS: gdb.base/duplicate-bp.exp: dis_2_del_1_stop_3: step
PASS: gdb.base/duplicate-bp.exp: dis_2_del_1_stop_3: delete $bp_num_1
PASS: gdb.base/duplicate-bp.exp: dis_2_del_1_stop_3: disable #2, delete #1, stop at #3
PASS: gdb.base/duplicate-bp.exp: dis_1_del_3_stop_1: set $bp_num_1 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_1_del_3_stop_1: set $bp_num_2 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_1_del_3_stop_1: set $bp_num_3 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_1_del_3_stop_1: step to place breakpoints
PASS: gdb.base/duplicate-bp.exp: dis_1_del_3_stop_1: disable $bp_num_1
PASS: gdb.base/duplicate-bp.exp: dis_1_del_3_stop_1: step
PASS: gdb.base/duplicate-bp.exp: dis_1_del_3_stop_1: delete $bp_num_3
PASS: gdb.base/duplicate-bp.exp: dis_1_del_3_stop_1: disable #1, delete #3, stop at #2
PASS: gdb.base/duplicate-bp.exp: dis_3_del_1_stop_2: set $bp_num_1 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_3_del_1_stop_2: set $bp_num_2 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_3_del_1_stop_2: set $bp_num_3 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_3_del_1_stop_2: step to place breakpoints
PASS: gdb.base/duplicate-bp.exp: dis_3_del_1_stop_2: disable $bp_num_3
PASS: gdb.base/duplicate-bp.exp: dis_3_del_1_stop_2: step
PASS: gdb.base/duplicate-bp.exp: dis_3_del_1_stop_2: delete $bp_num_1
PASS: gdb.base/duplicate-bp.exp: dis_3_del_1_stop_2: disable #3, delete #1, stop at #2
PASS: gdb.base/duplicate-bp.exp: dis_2_del_3_stop_1: set $bp_num_1 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_2_del_3_stop_1: set $bp_num_2 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_2_del_3_stop_1: set $bp_num_3 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_2_del_3_stop_1: step to place breakpoints
PASS: gdb.base/duplicate-bp.exp: dis_2_del_3_stop_1: disable $bp_num_2
PASS: gdb.base/duplicate-bp.exp: dis_2_del_3_stop_1: step
PASS: gdb.base/duplicate-bp.exp: dis_2_del_3_stop_1: delete $bp_num_3
PASS: gdb.base/duplicate-bp.exp: dis_2_del_3_stop_1: disable #2, delete #3, stop at #1
PASS: gdb.base/duplicate-bp.exp: dis_3_del_2_stop_1: set $bp_num_1 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_3_del_2_stop_1: set $bp_num_2 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_3_del_2_stop_1: set $bp_num_3 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_3_del_2_stop_1: step to place breakpoints
PASS: gdb.base/duplicate-bp.exp: dis_3_del_2_stop_1: disable $bp_num_3
PASS: gdb.base/duplicate-bp.exp: dis_3_del_2_stop_1: step
PASS: gdb.base/duplicate-bp.exp: dis_3_del_2_stop_1: delete $bp_num_2
PASS: gdb.base/duplicate-bp.exp: dis_3_del_2_stop_1: disable #3, delete #2, stop at #1
Running ../../../gdb/testsuite/gdb.base/sigall.exp ...
Running ../../../gdb/testsuite/gdb.base/watchpoint-delete.exp ...
PASS: gdb.base/watchpoint-delete.exp: set can-use-hw-watchpoints 0
PASS: gdb.base/watchpoint-delete.exp: continue to breakpoint: break-here
PASS: gdb.base/watchpoint-delete.exp: watch x
PASS: gdb.base/watchpoint-delete.exp: delete $bpnum
Running ../../../gdb/testsuite/gdb.base/symtab-search-order.exp ...
Running ../../../gdb/testsuite/gdb.base/wrong_frame_bt_full.exp ...
PASS: gdb.base/wrong_frame_bt_full.exp: bt full
Running ../../../gdb/testsuite/gdb.base/bang.exp ...
PASS: gdb.base/bang.exp: continue until exit
Running ../../../gdb/testsuite/gdb.base/recurse.exp ...
PASS: gdb.base/recurse.exp: next over b = 0 in first instance
PASS: gdb.base/recurse.exp: set first instance watchpoint
PASS: gdb.base/recurse.exp: continue to first instance watchpoint, first time
PASS: gdb.base/recurse.exp: continue to recurse (a = 9)
PASS: gdb.base/recurse.exp: continue to recurse (a = 8)
PASS: gdb.base/recurse.exp: continue to recurse (a = 7)
PASS: gdb.base/recurse.exp: continue to recurse (a = 6)
PASS: gdb.base/recurse.exp: continue to recurse (a = 5)
PASS: gdb.base/recurse.exp: next over b = 0 in second instance
PASS: gdb.base/recurse.exp: set second instance watchpoint
PASS: gdb.base/recurse.exp: continue to second instance watchpoint, first time
PASS: gdb.base/recurse.exp: continue to recurse (a = 4)
PASS: gdb.base/recurse.exp: continue to recurse (a = 3)
PASS: gdb.base/recurse.exp: continue to recurse (a = 2)
PASS: gdb.base/recurse.exp: continue to recurse (a = 1)
PASS: gdb.base/recurse.exp: continue to second instance watchpoint, second time
PASS: gdb.base/recurse.exp: second instance watchpoint deleted when leaving scope
PASS: gdb.base/recurse.exp: continue to first instance watchpoint, second time
PASS: gdb.base/recurse.exp: first instance watchpoint deleted when leaving scope
Running ../../../gdb/testsuite/gdb.base/linespecs.exp ...
PASS: gdb.base/linespecs.exp: list c:/foo/bar/baz.c:1
PASS: gdb.base/linespecs.exp: list c:/foo/bar/baz.c
PASS: gdb.base/linespecs.exp: list fooc:/foo/bar/baz.c:1
PASS: gdb.base/linespecs.exp: list fooc:/foo/bar/baz.c
Running ../../../gdb/testsuite/gdb.base/gnu_vector.exp ...
PASS: gdb.base/gnu_vector.exp: endianness: little
PASS: gdb.base/gnu_vector.exp: print c4
PASS: gdb.base/gnu_vector.exp: print c4[2]
PASS: gdb.base/gnu_vector.exp: print i4a
PASS: gdb.base/gnu_vector.exp: print i4b
PASS: gdb.base/gnu_vector.exp: print i4a + i4b
PASS: gdb.base/gnu_vector.exp: print i4a - i4b
PASS: gdb.base/gnu_vector.exp: print i4a * i4b
PASS: gdb.base/gnu_vector.exp: print i4a / i4b
PASS: gdb.base/gnu_vector.exp: print i4a % i4b
PASS: gdb.base/gnu_vector.exp: print i4a++
PASS: gdb.base/gnu_vector.exp: print ++i4a
PASS: gdb.base/gnu_vector.exp: print i4a--
PASS: gdb.base/gnu_vector.exp: print --i4a
PASS: gdb.base/gnu_vector.exp: print +i4a
PASS: gdb.base/gnu_vector.exp: print -i4a
PASS: gdb.base/gnu_vector.exp: print i4a & i4b
PASS: gdb.base/gnu_vector.exp: print i4a | i4b
PASS: gdb.base/gnu_vector.exp: print i4a ^ i4b
PASS: gdb.base/gnu_vector.exp: print ~i4a
PASS: gdb.base/gnu_vector.exp: print i4a << i4b
PASS: gdb.base/gnu_vector.exp: print i4a >> i4b
PASS: gdb.base/gnu_vector.exp: print f4a
PASS: gdb.base/gnu_vector.exp: print f4b
PASS: gdb.base/gnu_vector.exp: print f4a + f4b
PASS: gdb.base/gnu_vector.exp: print f4a - f4b
PASS: gdb.base/gnu_vector.exp: print f4a * f4b
PASS: gdb.base/gnu_vector.exp: print f4a / f4b
PASS: gdb.base/gnu_vector.exp: print +f4a
PASS: gdb.base/gnu_vector.exp: print -f4a
PASS: gdb.base/gnu_vector.exp: print (char4) 0x01010101
PASS: gdb.base/gnu_vector.exp: print (int2) lla
PASS: gdb.base/gnu_vector.exp: print (char4) ia
PASS: gdb.base/gnu_vector.exp: print (int2) 1
PASS: gdb.base/gnu_vector.exp: print (longlong2) 2
PASS: gdb.base/gnu_vector.exp: print (float2) 3
PASS: gdb.base/gnu_vector.exp: print (double2) 4
PASS: gdb.base/gnu_vector.exp: print (uint4) ia
PASS: gdb.base/gnu_vector.exp: print (int4) -3
PASS: gdb.base/gnu_vector.exp: print (float4) 4
PASS: gdb.base/gnu_vector.exp: print i4b = ia
PASS: gdb.base/gnu_vector.exp: print i4a = 3
PASS: gdb.base/gnu_vector.exp: print f4a = fb
PASS: gdb.base/gnu_vector.exp: print f4b = 2
PASS: gdb.base/gnu_vector.exp: print c4 + lla
PASS: gdb.base/gnu_vector.exp: print i4a + lla
PASS: gdb.base/gnu_vector.exp: print lla + c4
PASS: gdb.base/gnu_vector.exp: print lla + i4a
PASS: gdb.base/gnu_vector.exp: print c4 + ib
PASS: gdb.base/gnu_vector.exp: print i4a + ib
PASS: gdb.base/gnu_vector.exp: print i4a + 1
PASS: gdb.base/gnu_vector.exp: print 1 + i4a
PASS: gdb.base/gnu_vector.exp: print fa - f4b
PASS: gdb.base/gnu_vector.exp: print 2 - f4b
PASS: gdb.base/gnu_vector.exp: print f4a * fb
PASS: gdb.base/gnu_vector.exp: print f4a * 1
PASS: gdb.base/gnu_vector.exp: print ia / i4b
PASS: gdb.base/gnu_vector.exp: print 2 / i4b
PASS: gdb.base/gnu_vector.exp: print i4a % ib
PASS: gdb.base/gnu_vector.exp: print i4a % 1
PASS: gdb.base/gnu_vector.exp: print ia & i4b
PASS: gdb.base/gnu_vector.exp: print 2 & i4b
PASS: gdb.base/gnu_vector.exp: print i4a | ib
PASS: gdb.base/gnu_vector.exp: print i4a | 1
PASS: gdb.base/gnu_vector.exp: print ia ^ i4b
PASS: gdb.base/gnu_vector.exp: print 2 ^ i4b
PASS: gdb.base/gnu_vector.exp: print i4a << ib
PASS: gdb.base/gnu_vector.exp: print i4a << 1
PASS: gdb.base/gnu_vector.exp: print i4a >> ib
PASS: gdb.base/gnu_vector.exp: print i4a >> 1
PASS: gdb.base/gnu_vector.exp: print i4a = {2, 4, 8, 16}
PASS: gdb.base/gnu_vector.exp: print i4a <<= ib
PASS: gdb.base/gnu_vector.exp: print i4a + d2
PASS: gdb.base/gnu_vector.exp: print d2 + i4a
PASS: gdb.base/gnu_vector.exp: print f4a + ll2
PASS: gdb.base/gnu_vector.exp: print ll2 + f4a
PASS: gdb.base/gnu_vector.exp: print i2 + ll2
PASS: gdb.base/gnu_vector.exp: print ll2 + i2
PASS: gdb.base/gnu_vector.exp: print i4a + ll2
PASS: gdb.base/gnu_vector.exp: print ll2 + i4a
PASS: gdb.base/gnu_vector.exp: print f4a + d2
PASS: gdb.base/gnu_vector.exp: print d2 + f4a
PASS: gdb.base/gnu_vector.exp: print ui4 + i4a
PASS: gdb.base/gnu_vector.exp: print i4a + ui4
PASS: gdb.base/gnu_vector.exp: print i4a + i2
PASS: gdb.base/gnu_vector.exp: print i2 + i4a
PASS: gdb.base/gnu_vector.exp: print f4a + f2
PASS: gdb.base/gnu_vector.exp: print f2 + f4a
PASS: gdb.base/gnu_vector.exp: print (double2) f2
PASS: gdb.base/gnu_vector.exp: print (int4) c4
PASS: gdb.base/gnu_vector.exp: print (char4) i4a
PASS: gdb.base/gnu_vector.exp: ptype c4
PASS: gdb.base/gnu_vector.exp: ptype char4
PASS: gdb.base/gnu_vector.exp: ptype i4a
PASS: gdb.base/gnu_vector.exp: ptype int4
PASS: gdb.base/gnu_vector.exp: ptype f4b
PASS: gdb.base/gnu_vector.exp: ptype float4
PASS: gdb.base/gnu_vector.exp: ptype union_with_vector_1
PASS: gdb.base/gnu_vector.exp: ptype struct_with_vector_1
PASS: gdb.base/gnu_vector.exp: call add_some_intvecs
PASS: gdb.base/gnu_vector.exp: call add_many_charvecs
PASS: gdb.base/gnu_vector.exp: call add_various_floatvecs
PASS: gdb.base/gnu_vector.exp: call add_structvecs
PASS: gdb.base/gnu_vector.exp: call add_singlevecs
PASS: gdb.base/gnu_vector.exp: continue to add_some_intvecs
PASS: gdb.base/gnu_vector.exp: finish shows vector return value
PASS: gdb.base/gnu_vector.exp: continue to add_some_intvecs
PASS: gdb.base/gnu_vector.exp: up
PASS: gdb.base/gnu_vector.exp: p res
PASS: gdb.base/gnu_vector.exp: down
PASS: gdb.base/gnu_vector.exp: return from vector-valued function
PASS: gdb.base/gnu_vector.exp: next
PASS: gdb.base/gnu_vector.exp: verify vector return value
Running ../../../gdb/testsuite/gdb.base/step-resume-infcall.exp ...
PASS: gdb.base/step-resume-infcall.exp: step
PASS: gdb.base/step-resume-infcall.exp: up
PASS: gdb.base/step-resume-infcall.exp: set $b=$pc
PASS: gdb.base/step-resume-infcall.exp: print $bpnum
PASS: gdb.base/step-resume-infcall.exp: disass/m
PASS: gdb.base/step-resume-infcall.exp: info breakpoints
PASS: gdb.base/step-resume-infcall.exp: next
PASS: gdb.base/step-resume-infcall.exp: p cond_hit
Running ../../../gdb/testsuite/gdb.base/sect-cmd.exp ...
Running ../../../gdb/testsuite/gdb.base/until.exp ...
PASS: gdb.base/until.exp: until line number
PASS: gdb.base/until.exp: malformed until
PASS: gdb.base/until.exp: until factorial, recursive function
PASS: gdb.base/until.exp: until func, not called by current frame
Running ../../../gdb/testsuite/gdb.base/all-bin.exp ...
PASS: gdb.base/all-bin.exp: continuing after dummy()
PASS: gdb.base/all-bin.exp: print value of v_int+v_char
PASS: gdb.base/all-bin.exp: print value of v_int+v_short
PASS: gdb.base/all-bin.exp: print value of v_int+v_signed_char
PASS: gdb.base/all-bin.exp: print value of v_int+v_unsigned_char
PASS: gdb.base/all-bin.exp: print value of v_int+v_signed_short
PASS: gdb.base/all-bin.exp: print value of v_int+v_unsigned_short
PASS: gdb.base/all-bin.exp: print value of v_int+v_signed_int
PASS: gdb.base/all-bin.exp: print value of v_int+v_unsigned_int
PASS: gdb.base/all-bin.exp: print value of v_int+v_long
PASS: gdb.base/all-bin.exp: print value of v_int+v_signed_long
PASS: gdb.base/all-bin.exp: print value of v_int+v_unsigned_long
PASS: gdb.base/all-bin.exp: print value of v_int+v_float
PASS: gdb.base/all-bin.exp: print value of v_int+v_double
PASS: gdb.base/all-bin.exp: print value of v_int<=v_char
PASS: gdb.base/all-bin.exp: print value of v_int<=v_short
PASS: gdb.base/all-bin.exp: print value of v_int<=v_signed_char
PASS: gdb.base/all-bin.exp: print value of v_int<=v_unsigned_char
PASS: gdb.base/all-bin.exp: print value of v_int<=v_signed_short
PASS: gdb.base/all-bin.exp: print value of v_int<=v_unsigned_short
PASS: gdb.base/all-bin.exp: print value of v_int<=v_signed_int
PASS: gdb.base/all-bin.exp: print value of v_int<=v_unsigned_int
PASS: gdb.base/all-bin.exp: print value of v_int<=v_long
PASS: gdb.base/all-bin.exp: print value of v_int<=v_signed_long
PASS: gdb.base/all-bin.exp: print value of v_int<=v_unsigned_long
PASS: gdb.base/all-bin.exp: print value of v_int<=v_float
PASS: gdb.base/all-bin.exp: print value of v_int<=v_double
PASS: gdb.base/all-bin.exp: set v_char=0
PASS: gdb.base/all-bin.exp: set v_double=0
PASS: gdb.base/all-bin.exp: set v_unsigned_long=0
PASS: gdb.base/all-bin.exp: print value of v_int&&v_char
PASS: gdb.base/all-bin.exp: print value of v_int&&v_short
PASS: gdb.base/all-bin.exp: print value of v_int&&v_signed_char
PASS: gdb.base/all-bin.exp: print value of v_int&&v_unsigned_char
PASS: gdb.base/all-bin.exp: print value of v_int&&v_signed_short
PASS: gdb.base/all-bin.exp: print value of v_int&&v_unsigned_short
PASS: gdb.base/all-bin.exp: print value of v_int&&v_signed_int
PASS: gdb.base/all-bin.exp: print value of v_int&&v_unsigned_int
PASS: gdb.base/all-bin.exp: print value of v_int&&v_long
PASS: gdb.base/all-bin.exp: print value of v_int&&v_signed_long
PASS: gdb.base/all-bin.exp: print value of v_int&&v_unsigned_long
PASS: gdb.base/all-bin.exp: print value of v_int&&v_float
PASS: gdb.base/all-bin.exp: print value of v_int&&v_double
Running ../../../gdb/testsuite/gdb.base/pending.exp ...
Running ../../../gdb/testsuite/gdb.base/return-nodebug.exp ...
PASS: gdb.base/return-nodebug.exp: signed-char: return from function with no debug info without a cast
PASS: gdb.base/return-nodebug.exp: signed-char: return from function with no debug info with a cast
PASS: gdb.base/return-nodebug.exp: signed-char: advance to marker
PASS: gdb.base/return-nodebug.exp: signed-char: full width of the returned result
PASS: gdb.base/return-nodebug.exp: short: return from function with no debug info without a cast
PASS: gdb.base/return-nodebug.exp: short: return from function with no debug info with a cast
PASS: gdb.base/return-nodebug.exp: short: advance to marker
PASS: gdb.base/return-nodebug.exp: short: full width of the returned result
PASS: gdb.base/return-nodebug.exp: int: return from function with no debug info without a cast
PASS: gdb.base/return-nodebug.exp: int: return from function with no debug info with a cast
PASS: gdb.base/return-nodebug.exp: int: advance to marker
PASS: gdb.base/return-nodebug.exp: int: full width of the returned result
PASS: gdb.base/return-nodebug.exp: long: return from function with no debug info without a cast
PASS: gdb.base/return-nodebug.exp: long: return from function with no debug info with a cast
PASS: gdb.base/return-nodebug.exp: long: advance to marker
PASS: gdb.base/return-nodebug.exp: long: full width of the returned result
PASS: gdb.base/return-nodebug.exp: long-long: return from function with no debug info without a cast
PASS: gdb.base/return-nodebug.exp: long-long: return from function with no debug info with a cast
PASS: gdb.base/return-nodebug.exp: long-long: advance to marker
PASS: gdb.base/return-nodebug.exp: long-long: full width of the returned result
PASS: gdb.base/return-nodebug.exp: float: return from function with no debug info without a cast
PASS: gdb.base/return-nodebug.exp: float: return from function with no debug info with a cast
PASS: gdb.base/return-nodebug.exp: float: advance to marker
PASS: gdb.base/return-nodebug.exp: float: full width of the returned result
PASS: gdb.base/return-nodebug.exp: double: return from function with no debug info without a cast
PASS: gdb.base/return-nodebug.exp: double: return from function with no debug info with a cast
PASS: gdb.base/return-nodebug.exp: double: advance to marker
PASS: gdb.base/return-nodebug.exp: double: full width of the returned result
Running ../../../gdb/testsuite/gdb.base/opaque.exp ...
PASS: gdb.base/opaque.exp: whatis on opaque struct pointer (statically)
PASS: gdb.base/opaque.exp: ptype on opaque struct pointer (statically)
PASS: gdb.base/opaque.exp: whatis on opaque struct instance (statically)
PASS: gdb.base/opaque.exp: ptype on opaque struct instance (statically)
PASS: gdb.base/opaque.exp: ptype on opaque struct tagname (statically)
PASS: gdb.base/opaque.exp: whatis on opaque struct pointer (dynamically)
PASS: gdb.base/opaque.exp: ptype on opaque struct pointer (dynamically) 1
PASS: gdb.base/opaque.exp: whatis on opaque struct instance (dynamically) 1
PASS: gdb.base/opaque.exp: ptype on opaque struct instance (dynamically) 1
PASS: gdb.base/opaque.exp: ptype on opaque struct tagname (dynamically) 1
PASS: gdb.base/opaque.exp: whatis on opaque struct pointer (dynamically) 1
PASS: gdb.base/opaque.exp: ptype on opaque struct pointer (dynamically) 2
PASS: gdb.base/opaque.exp: whatis on opaque struct instance (dynamically) 2
PASS: gdb.base/opaque.exp: ptype on opaque struct instance (dynamically) 2
PASS: gdb.base/opaque.exp: ptype on opaque struct tagname (dynamically) 2
Running ../../../gdb/testsuite/gdb.base/pc-fp.exp ...
PASS: gdb.base/pc-fp.exp: get hexadecimal valueof "$pc"
PASS: gdb.base/pc-fp.exp: get hexadecimal valueof "$fp"
PASS: gdb.base/pc-fp.exp: display/i $pc
PASS: gdb.base/pc-fp.exp: display/w $fp
PASS: gdb.base/pc-fp.exp: info register $pc
PASS: gdb.base/pc-fp.exp: info register $fp
PASS: gdb.base/pc-fp.exp: info register pc fp
Running ../../../gdb/testsuite/gdb.base/gcore-relro.exp ...
Running ../../../gdb/testsuite/gdb.base/set-lang-auto.exp ...
PASS: gdb.base/set-lang-auto.exp: show lang after loading binary
PASS: gdb.base/set-lang-auto.exp: forcing the language to ada
PASS: gdb.base/set-lang-auto.exp: show lang after switching language to ada
PASS: gdb.base/set-lang-auto.exp: switching the language back to auto
PASS: gdb.base/set-lang-auto.exp: show lang after having switched back to auto
Running ../../../gdb/testsuite/gdb.base/consecutive-step-over.exp ...
PASS: gdb.base/consecutive-step-over.exp: set breakpoint condition-evaluation host
PASS: gdb.base/consecutive-step-over.exp: get breakpoint addresses
PASS: gdb.base/consecutive-step-over.exp: insn 1: set breakpoint
PASS: gdb.base/consecutive-step-over.exp: insn 1: set condition
PASS: gdb.base/consecutive-step-over.exp: insn 2: set breakpoint
PASS: gdb.base/consecutive-step-over.exp: insn 2: set condition
PASS: gdb.base/consecutive-step-over.exp: insn 3: set breakpoint
PASS: gdb.base/consecutive-step-over.exp: insn 3: set condition
PASS: gdb.base/consecutive-step-over.exp: continue to breakpoint: break here
Running ../../../gdb/testsuite/gdb.base/step-line.exp ...
PASS: gdb.base/step-line.exp: break f1
FAIL: gdb.base/step-line.exp: continue to f1
FAIL: gdb.base/step-line.exp: next over dummy 1
FAIL: gdb.base/step-line.exp: next to dummy 2
FAIL: gdb.base/step-line.exp: next over dummy 2
FAIL: gdb.base/step-line.exp: step into f2
FAIL: gdb.base/step-line.exp: next over dummy 4
FAIL: gdb.base/step-line.exp: next to dummy 5
FAIL: gdb.base/step-line.exp: next to dummy 6
FAIL: gdb.base/step-line.exp: next over dummy 6
FAIL: gdb.base/step-line.exp: next to dummy 7
FAIL: gdb.base/step-line.exp: next to dummy 8
FAIL: gdb.base/step-line.exp: next over dummy 8
FAIL: gdb.base/step-line.exp: next to dummy 9
FAIL: gdb.base/step-line.exp: next to dummy 10
FAIL: gdb.base/step-line.exp: next over dummy 10
Running ../../../gdb/testsuite/gdb.base/empty_exe.exp ...
PASS: gdb.base/empty_exe.exp: file ''
PASS: gdb.base/empty_exe.exp: print 1
Running ../../../gdb/testsuite/gdb.base/sigchld.exp ...
Running ../../../gdb/testsuite/gdb.base/relocate.exp ...
PASS: gdb.base/relocate.exp: add-symbol-file: unknown option -raednow
PASS: gdb.base/relocate.exp: add-symbol-file: unknown option readnow
PASS: gdb.base/relocate.exp: add-symbol-file: unknown option foo
PASS: gdb.base/relocate.exp: add-symbol-file: unknown option -readnow s
PASS: gdb.base/relocate.exp: add-symbol-file relocate.o 0
PASS: gdb.base/relocate.exp: get address of static_foo
PASS: gdb.base/relocate.exp: get address of static_bar
PASS: gdb.base/relocate.exp: static variables have different addresses
PASS: gdb.base/relocate.exp: get address of global_foo
PASS: gdb.base/relocate.exp: get address of global_bar
PASS: gdb.base/relocate.exp: global variables have different addresses
PASS: gdb.base/relocate.exp: get address of function_foo
PASS: gdb.base/relocate.exp: get address of function_bar
PASS: gdb.base/relocate.exp: functions have different addresses
PASS: gdb.base/relocate.exp: set $offset = 0x10000
PASS: gdb.base/relocate.exp: add-symbol-file relocate.o $offset
PASS: gdb.base/relocate.exp: get address of function_foo
PASS: gdb.base/relocate.exp: function foo has a different address
PASS: gdb.base/relocate.exp: print static_foo
PASS: gdb.base/relocate.exp: print static_bar
PASS: gdb.base/relocate.exp: print global_foo
PASS: gdb.base/relocate.exp: print global_bar
Running ../../../gdb/testsuite/gdb.kalray/displaced.exp ...
PASS: gdb.kalray/displaced.exp: init memory
PASS: gdb.kalray/displaced.exp: Force displaced stepping
PASS: gdb.kalray/displaced.exp: Set breakpoints
PASS: gdb.kalray/displaced.exp: Setting start pc
PASS: gdb.kalray/displaced.exp: Run
PASS: gdb.kalray/displaced.exp: stepi 1
PASS: gdb.kalray/displaced.exp: stepi over loopdo
PASS: gdb.kalray/displaced.exp: stepi in loopdo 1
PASS: gdb.kalray/displaced.exp: stepi in loopdo 2
PASS: gdb.kalray/displaced.exp: stepi in loopdo 3
PASS: gdb.kalray/displaced.exp: stepi in loopdo 4
PASS: gdb.kalray/displaced.exp: stepi out of loopdo
PASS: gdb.kalray/displaced.exp: Check that the loop was really executed
PASS: gdb.kalray/displaced.exp: stepi to loopgtz
PASS: gdb.kalray/displaced.exp: stepi over unentered loopgtz
PASS: gdb.kalray/displaced.exp: stepi on taken cb
PASS: gdb.kalray/displaced.exp: stepi in entered loopgtz 1
PASS: gdb.kalray/displaced.exp: stepi in entered loopgtz 2
PASS: gdb.kalray/displaced.exp: stepi in entered loopgtz 3
PASS: gdb.kalray/displaced.exp: stepi in entered loopgtz 4
PASS: gdb.kalray/displaced.exp: stepi in entered loopgtz 5
PASS: gdb.kalray/displaced.exp: stepi out of loopgtz
PASS: gdb.kalray/displaced.exp: Check that the loop was really executed
PASS: gdb.kalray/displaced.exp: stepi over make
PASS: gdb.kalray/displaced.exp: stepi to loopnez
PASS: gdb.kalray/displaced.exp: stepi over unentered loopnez
PASS: gdb.kalray/displaced.exp: stepi on taken cb
PASS: gdb.kalray/displaced.exp: stepi in entered loopnez 1
PASS: gdb.kalray/displaced.exp: stepi in entered loopnez 2
PASS: gdb.kalray/displaced.exp: stepi in entered loopnez 3
PASS: gdb.kalray/displaced.exp: stepi in entered loopnez 4
PASS: gdb.kalray/displaced.exp: stepi in entered loopnez 5
PASS: gdb.kalray/displaced.exp: stepi out of loopnez
PASS: gdb.kalray/displaced.exp: Check that the loop was really executed
PASS: gdb.kalray/displaced.exp: step over non-taken cb
PASS: gdb.kalray/displaced.exp: stepi into scall
PASS: gdb.kalray/displaced.exp: rfe 1
PASS: gdb.kalray/displaced.exp: stepi over make
PASS: gdb.kalray/displaced.exp: stepi to trap handler
PASS: gdb.kalray/displaced.exp: stepi in trap handler
PASS: gdb.kalray/displaced.exp: rfe 2
PASS: gdb.kalray/displaced.exp: step over get pc
PASS: gdb.kalray/displaced.exp: step over get pc 2
PASS: gdb.kalray/displaced.exp: step over get pc 3
PASS: gdb.kalray/displaced.exp: step over get indirect pc
PASS: gdb.kalray/displaced.exp: step over get indirect pc 2
PASS: gdb.kalray/displaced.exp: step over get indirect pc 3
PASS: gdb.kalray/displaced.exp: stepi over copy
PASS: gdb.kalray/displaced.exp: stepi to scall

		=== gdb Summary ===

# of expected passes		10586
# of unexpected failures	33
# of expected failures		11
# of known failures		28
# of untested testcases		15
# of unsupported tests		53
/work1-hdd/tools_master/gdb/k1_build_gdb_x86/gdb/testsuite/../../gdb/gdb version  7.10.50.20160210-git -nw -nx -data-directory /work1-hdd/tools_master/gdb/k1_build_gdb_x86/gdb/testsuite/../data-directory 

