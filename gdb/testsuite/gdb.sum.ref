Test Run By friss on Sun Apr  4 16:50:27 2010
Target is k1-unknown-elf
Host   is i686-pc-linux-gnu

		=== gdb tests ===

Schedule of variations:
    k1-iss

Running target k1-iss
Running ../../../gdb/testsuite/gdb.mi/mi2-var-child.exp ...
PASS: gdb.mi/mi2-var-child.exp: breakpoint at do_children_tests
PASS: gdb.mi/mi2-var-child.exp: mi runto do_children_tests
PASS: gdb.mi/mi2-var-child.exp: run to 219 (set breakpoint)
PASS: gdb.mi/mi2-var-child.exp: create local variable struct_declarations
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.integer
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.integer
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.character
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.character
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_int
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_int
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.func_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.func_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.func_ptr_struct
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.func_ptr_struct
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.func_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.func_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.u1
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.u1
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.1
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.1
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.2
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.2
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.3
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.3
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.4
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.4
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.5
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.5
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.6
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.6
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.7
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.7
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.8
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.8
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.9
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.9
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.u1.a
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.u1.a
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.u1.b
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.u1.b
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.u1.c
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.u1.c
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.u1.d
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.u1.d
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.g
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.g
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.h
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.h
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.i
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.i
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s1
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.f
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.f
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s2
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s1.d
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.d
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s1.e
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.e
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s1.func
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.func
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s1.foo
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.foo
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s2.array_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2.array_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s2.func
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2.func
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: step to line $line_dct_123
PASS: gdb.mi/mi2-var-child.exp: create local variable weird
PASS: gdb.mi/mi2-var-child.exp: get children of weird
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird
PASS: gdb.mi/mi2-var-child.exp: get children of weird.long_array
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird.long_array
PASS: gdb.mi/mi2-var-child.exp: get children of weird.int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird.int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of weird.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: create local variable weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of weird->int_ptr_ptr.*weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird->int_ptr_ptr.*weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of weird->int_ptr_ptr.*weird->int_ptr_ptr.**weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird->int_ptr_ptr.*weird->int_ptr_ptr.**weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: is weird editable
PASS: gdb.mi/mi2-var-child.exp: is weird->int_ptr_ptr editable
PASS: gdb.mi/mi2-var-child.exp: is weird.int_ptr_ptr.*int_ptr_ptr editable
PASS: gdb.mi/mi2-var-child.exp: is weird.int_ptr_ptr.*int_ptr_ptr.**int_ptr_ptr editable
PASS: gdb.mi/mi2-var-child.exp: is weird.u1 editable
PASS: gdb.mi/mi2-var-child.exp: is weird.s2 editable
PASS: gdb.mi/mi2-var-child.exp: is struct_declarations.u1.a editable
PASS: gdb.mi/mi2-var-child.exp: is struct_declarations.u1.b editable
PASS: gdb.mi/mi2-var-child.exp: is struct_declarations.u1.c editable
PASS: gdb.mi/mi2-var-child.exp: is struct_declarations.long_array editable
PASS: gdb.mi/mi2-var-child.exp: is struct_declarations.long_array.0 editable
PASS: gdb.mi/mi2-var-child.exp: is struct_declarations editable
PASS: gdb.mi/mi2-var-child.exp: delete var weird
PASS: gdb.mi/mi2-var-child.exp: update all vars. None changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 1
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.integer
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 4
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.char_ptr
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 5
PASS: gdb.mi/mi2-var-child.exp: update all vars int_ptr_ptr and children changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 6
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.long_array.0 changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 7
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.long_array.1 changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 8
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.long_array.2 changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_nothing
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.long_array.3-9 changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_a0_0
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.func_ptr changed
PASS: gdb.mi/mi2-var-child.exp: delete var struct_declarations
PASS: gdb.mi/mi2-var-child.exp: delete var weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 1
PASS: gdb.mi/mi2-var-child.exp: create local variable  psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr.****psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr.****psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: create local variable  psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr.****psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr.****psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: create local variable  psnp->ptrs
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.next
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.next.ptrs
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 2
PASS: gdb.mi/mi2-var-child.exp: update all vars psnp->char_ptr (and 0.char_ptr) changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 3
PASS: gdb.mi/mi2-var-child.exp: update all vars psnp->next->char_ptr (and 1.char_ptr) changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 4
PASS: gdb.mi/mi2-var-child.exp: update all vars psnp->next->next->char_ptr (and 2.char_ptr) changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 5
PASS: gdb.mi/mi2-var-child.exp: update all vars psnp->long_ptr (and 0.long_ptr) changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 6
XFAIL: gdb.mi/mi2-var-child.exp: update all vars psnp->next->long_ptr (and 1.long_ptr) changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 7
PASS: gdb.mi/mi2-var-child.exp: update all vars psnp->next->next->long_ptr (and 2.long_ptr) changed
Running ../../../gdb/testsuite/gdb.mi/mi-var-child-f.exp ...
UNSUPPORTED: gdb.mi/mi-var-child-f.exp: compilation array.f
Running ../../../gdb/testsuite/gdb.mi/mi-var-block.exp ...
PASS: gdb.mi/mi-var-block.exp: breakpoint at do_block_tests
PASS: gdb.mi/mi-var-block.exp: mi runto do_block_tests
PASS: gdb.mi/mi-var-block.exp: create local variable cb
PASS: gdb.mi/mi-var-block.exp: try to create local variable foo
PASS: gdb.mi/mi-var-block.exp: step at do_block_test
PASS: gdb.mi/mi-var-block.exp: delete var foo
PASS: gdb.mi/mi-var-block.exp: create local variable foo
PASS: gdb.mi/mi-var-block.exp: step at do_block_test
PASS: gdb.mi/mi-var-block.exp: update all vars: cb foo changed
PASS: gdb.mi/mi-var-block.exp: step at do_block_test
PASS: gdb.mi/mi-var-block.exp: create local variable inner_foo
PASS: gdb.mi/mi-var-block.exp: step at do_block_test
PASS: gdb.mi/mi-var-block.exp: create local variable foo2
XFAIL: gdb.mi/mi-var-block.exp: update inner_foo: should be out of scope: KNOWN PROBLEM
XFAIL: gdb.mi/mi-var-block.exp: evaluate inner_foo: should be out of scope: KNOWN PROBLEM
PASS: gdb.mi/mi-var-block.exp: update foo: did not change
PASS: gdb.mi/mi-var-block.exp: delete var inner_foo
PASS: gdb.mi/mi-var-block.exp: step at do_block_test
XFAIL: gdb.mi/mi-var-block.exp: update foo2: should be out of scope: KNOWN PROBLEM
PASS: gdb.mi/mi-var-block.exp: step at do_block_test
XFAIL: gdb.mi/mi-var-block.exp: update foo2 should be out of scope: KNOWN PROBLEM
XFAIL: gdb.mi/mi-var-block.exp: update foo should be out of scope: KNOWN PROBLEM
PASS: gdb.mi/mi-var-block.exp: update cb
PASS: gdb.mi/mi-var-block.exp: delete var foo
PASS: gdb.mi/mi-var-block.exp: delete var foo2
PASS: gdb.mi/mi-var-block.exp: delete var cb
Running ../../../gdb/testsuite/gdb.mi/mi2-simplerun.exp ...
PASS: gdb.mi/mi2-simplerun.exp: break-insert operation
PASS: gdb.mi/mi2-simplerun.exp: insert breakpoint at basics.c:callee2
PASS: gdb.mi/mi2-simplerun.exp: insert breakpoint at basics.c:$line_callee3_head
PASS: gdb.mi/mi2-simplerun.exp: insert breakpoint at "<fullfilename>":$line_callee4_head
PASS: gdb.mi/mi2-simplerun.exp: list of breakpoints
PASS: gdb.mi/mi2-simplerun.exp: disabling of breakpoints
PASS: gdb.mi/mi2-simplerun.exp: list of breakpoints, 16 disabled
PASS: gdb.mi/mi2-simplerun.exp: run to main
PASS: gdb.mi/mi2-simplerun.exp: next at main
PASS: gdb.mi/mi2-simplerun.exp: step at main
PASS: gdb.mi/mi2-simplerun.exp: step to callee4
PASS: gdb.mi/mi2-simplerun.exp: exec-finish
PASS: gdb.mi/mi2-simplerun.exp: continue to end
Running ../../../gdb/testsuite/gdb.mi/mi-stack.exp ...
PASS: gdb.mi/mi-stack.exp: breakpoint at callee4
PASS: gdb.mi/mi-stack.exp: mi runto callee4
FAIL: gdb.mi/mi-stack.exp: stack frame listing
PASS: gdb.mi/mi-stack.exp: stack frame listing 1 1
FAIL: gdb.mi/mi-stack.exp: stack frame listing 1 3
PASS: gdb.mi/mi-stack.exp: stack frame listing wrong
PASS: gdb.mi/mi-stack.exp: selected frame listing
FAIL: gdb.mi/mi-stack.exp: stack frame listing 1 300
FAIL: gdb.mi/mi-stack.exp: stack args listing 0
PASS: gdb.mi/mi-stack.exp: stack args listing 0 1 1
FAIL: gdb.mi/mi-stack.exp: stack args listing 0 1 3
FAIL: gdb.mi/mi-stack.exp: stack args listing 1
FAIL: gdb.mi/mi-stack.exp: stack args listing 1 1 1
FAIL: gdb.mi/mi-stack.exp: stack args listing 1 1 3
PASS: gdb.mi/mi-stack.exp: stack args listing wrong
FAIL: gdb.mi/mi-stack.exp: stack args listing 1 1 300
PASS: gdb.mi/mi-stack.exp: stack locals listing of names
PASS: gdb.mi/mi-stack.exp: next's in callee4
PASS: gdb.mi/mi-stack.exp: stack locals listing of names and values
PASS: gdb.mi/mi-stack.exp: stack locals listing, simple types: names and values, complex type: names and types
PASS: gdb.mi/mi-stack.exp: stack locals listing wrong
PASS: gdb.mi/mi-stack.exp: stack select frame 1
PASS: gdb.mi/mi-stack.exp: stack locals listing for new frame
PASS: gdb.mi/mi-stack.exp: stack locals for same frame (level 1)
FAIL: gdb.mi/mi-stack.exp: stack info-depth
PASS: gdb.mi/mi-stack.exp: stack info-depth 3
FAIL: gdb.mi/mi-stack.exp: stack info-depth 99
PASS: gdb.mi/mi-stack.exp: stack info-depth wrong usage
Running ../../../gdb/testsuite/gdb.mi/mi-var-cp.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi2-disassemble.exp ...
PASS: gdb.mi/mi2-disassemble.exp: breakpoint at main
PASS: gdb.mi/mi2-disassemble.exp: mi runto main
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble from pc to pc+12 assembly only
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file & line, assembly only
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file, line assembly mixed
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble range assembly mixed
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble bogus filename
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble bogus address
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble mix different args
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble wrong mode arg
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file, line, number assembly only
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file, line, number (zero lines) assembly only
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file, line, number (more than main lines) assembly only
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file, line, number assembly mixed
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file, line, number (zero lines) assembly mixed
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file, line, number (more than main lines) assembly mixed
Running ../../../gdb/testsuite/gdb.mi/mi-disassemble.exp ...
PASS: gdb.mi/mi-disassemble.exp: breakpoint at main
PASS: gdb.mi/mi-disassemble.exp: mi runto main
PASS: gdb.mi/mi-disassemble.exp: data-disassemble from pc to pc+12 assembly only
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file & line, assembly only
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line assembly mixed
PASS: gdb.mi/mi-disassemble.exp: data-disassemble range assembly mixed
PASS: gdb.mi/mi-disassemble.exp: data-disassemble bogus filename
PASS: gdb.mi/mi-disassemble.exp: data-disassemble bogus address
PASS: gdb.mi/mi-disassemble.exp: data-disassemble mix different args
PASS: gdb.mi/mi-disassemble.exp: data-disassemble wrong mode arg
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number assembly only
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number (zero lines) assembly only
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number (more than main lines) assembly only
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number assembly mixed
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number (zero lines) assembly mixed
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number (more than main lines) assembly mixed
Running ../../../gdb/testsuite/gdb.mi/mi-break.exp ...
PASS: gdb.mi/mi-break.exp: break-insert -t operation
PASS: gdb.mi/mi-break.exp: insert temp breakpoint at basics.c:callee2
PASS: gdb.mi/mi-break.exp: insert temp breakpoint at basics.c:$line_callee3_head
PASS: gdb.mi/mi-break.exp: insert temp breakpoint at "<fullfilename>":$line_callee4_head
PASS: gdb.mi/mi-break.exp: list of breakpoints
PASS: gdb.mi/mi-break.exp: delete temp breakpoints
XFAIL: gdb.mi/mi-break.exp: break-insert -r operation
XFAIL: gdb.mi/mi-break.exp: insert breakpoint with regexp callee2
XFAIL: gdb.mi/mi-break.exp: insert breakpoint with regexp callee
XFAIL: gdb.mi/mi-break.exp: insert breakpoint with regexp .*llee
XFAIL: gdb.mi/mi-break.exp: list of breakpoints
PASS: gdb.mi/mi-break.exp: delete temp breakpoints
PASS: gdb.mi/mi-break.exp: insert breakpoint with ignore count at callme
PASS: gdb.mi/mi-break.exp: run to breakpoint with ignore count
PASS: gdb.mi/mi-break.exp: breakpoint at nonexistent function
FAIL: gdb.mi/mi-break.exp: create varobj for function call
PASS: gdb.mi/mi-break.exp: update varobj for function call
PASS: gdb.mi/mi-break.exp: test disabled creation
PASS: gdb.mi/mi-break.exp: test disabled creation: cleanup
PASS: gdb.mi/mi-break.exp: breakpoint commands: insert breakpoint at basics.c:callee2
PASS: gdb.mi/mi-break.exp: breakpoint commands: set commands
PASS: gdb.mi/mi-break.exp: breakpoint commands: check that commands are set
PASS: gdb.mi/mi-break.exp: breakpoint commands: clear commands
PASS: gdb.mi/mi-break.exp: breakpoint commands: check that commands are cleared
PASS: gdb.mi/mi-break.exp: breakpoint at main
PASS: gdb.mi/mi-break.exp: mi runto main
PASS: gdb.mi/mi-break.exp: breakpoint commands: insert breakpoint at basics.c:callee2, again
PASS: gdb.mi/mi-break.exp: breakpoint commands: set commands
PASS: gdb.mi/mi-break.exp: test hitting breakpoint with commands
Running ../../../gdb/testsuite/gdb.mi/mi-simplerun.exp ...
PASS: gdb.mi/mi-simplerun.exp: break-insert operation
PASS: gdb.mi/mi-simplerun.exp: insert breakpoint at basics.c:callee2
PASS: gdb.mi/mi-simplerun.exp: insert breakpoint at basics.c:$line_callee3_head
PASS: gdb.mi/mi-simplerun.exp: insert breakpoint at "<fullfilename>":$line_callee4_head
PASS: gdb.mi/mi-simplerun.exp: list of breakpoints
PASS: gdb.mi/mi-simplerun.exp: disabling of breakpoints
PASS: gdb.mi/mi-simplerun.exp: list of breakpoints, 16 disabled
PASS: gdb.mi/mi-simplerun.exp: run to main
PASS: gdb.mi/mi-simplerun.exp: next at main
PASS: gdb.mi/mi-simplerun.exp: step at main
PASS: gdb.mi/mi-simplerun.exp: step to callee4
PASS: gdb.mi/mi-simplerun.exp: exec-finish
PASS: gdb.mi/mi-simplerun.exp: continue to end
Running ../../../gdb/testsuite/gdb.mi/mi2-file.exp ...
PASS: gdb.mi/mi2-file.exp: request path info of current source file (basics.c)
Running ../../../gdb/testsuite/gdb.mi/mi2-syn-frame.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi-eval.exp ...
PASS: gdb.mi/mi-eval.exp: breakpoint at callee4
PASS: gdb.mi/mi-eval.exp: mi runto callee4
PASS: gdb.mi/mi-eval.exp: next at callee4
PASS: gdb.mi/mi-eval.exp: eval A
PASS: gdb.mi/mi-eval.exp: eval &A
PASS: gdb.mi/mi-eval.exp: eval A+3
PASS: gdb.mi/mi-eval.exp: eval A + 3
Running ../../../gdb/testsuite/gdb.mi/mi2-var-block.exp ...
PASS: gdb.mi/mi2-var-block.exp: breakpoint at do_block_tests
PASS: gdb.mi/mi2-var-block.exp: mi runto do_block_tests
PASS: gdb.mi/mi2-var-block.exp: create local variable cb
PASS: gdb.mi/mi2-var-block.exp: create local variable foo
PASS: gdb.mi/mi2-var-block.exp: step at do_block_test
PASS: gdb.mi/mi2-var-block.exp: delete var foo
PASS: gdb.mi/mi2-var-block.exp: create local variable foo
PASS: gdb.mi/mi2-var-block.exp: step at do_block_test
PASS: gdb.mi/mi2-var-block.exp: update all vars: cb foo changed
PASS: gdb.mi/mi2-var-block.exp: step at do_block_test
PASS: gdb.mi/mi2-var-block.exp: create local variable inner_foo
PASS: gdb.mi/mi2-var-block.exp: step at do_block_test
PASS: gdb.mi/mi2-var-block.exp: create local variable foo2
XFAIL: gdb.mi/mi2-var-block.exp: update inner_foo: should be out of scope: KNOWN PROBLEM
XFAIL: gdb.mi/mi2-var-block.exp: evaluate inner_foo: should be out of scope: KNOWN PROBLEM
PASS: gdb.mi/mi2-var-block.exp: update foo: did not change
PASS: gdb.mi/mi2-var-block.exp: delete var inner_foo
PASS: gdb.mi/mi2-var-block.exp: step at do_block_test
XFAIL: gdb.mi/mi2-var-block.exp: update foo2: should be out of scope: KNOWN PROBLEM
PASS: gdb.mi/mi2-var-block.exp: step at do_block_test
XFAIL: gdb.mi/mi2-var-block.exp: update foo2 should be out of scope: KNOWN PROBLEM
XFAIL: gdb.mi/mi2-var-block.exp: update foo should be out of scope: KNOWN PROBLEM
PASS: gdb.mi/mi2-var-block.exp: update cb
PASS: gdb.mi/mi2-var-block.exp: delete var foo
PASS: gdb.mi/mi2-var-block.exp: delete var foo2
PASS: gdb.mi/mi2-var-block.exp: delete var cb
Running ../../../gdb/testsuite/gdb.mi/mi-nsthrexec.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi2-read-memory.exp ...
PASS: gdb.mi/mi2-read-memory.exp: breakpoint at main
PASS: gdb.mi/mi2-read-memory.exp: mi runto main
PASS: gdb.mi/mi2-read-memory.exp: next at main
PASS: gdb.mi/mi2-read-memory.exp: no arguments
PASS: gdb.mi/mi2-read-memory.exp: 3x2, one byte
PASS: gdb.mi/mi2-read-memory.exp: 3x2, one byte offset by -6
PASS: gdb.mi/mi2-read-memory.exp: expression in quotes
PASS: gdb.mi/mi2-read-memory.exp: ascii and data
PASS: gdb.mi/mi2-read-memory.exp: decimal
PASS: gdb.mi/mi2-read-memory.exp: octal
Running ../../../gdb/testsuite/gdb.mi/mi2-var-cmd.exp ...
PASS: gdb.mi/mi2-var-cmd.exp: create global variable
PASS: gdb.mi/mi2-var-cmd.exp: create non-existent variable
PASS: gdb.mi/mi2-var-cmd.exp: create out of scope variable
PASS: gdb.mi/mi2-var-cmd.exp: breakpoint at do_locals_tests
PASS: gdb.mi/mi2-var-cmd.exp: mi runto do_locals_tests
PASS: gdb.mi/mi2-var-cmd.exp: run to 130 (set breakpoint)
PASS: gdb.mi/mi2-var-cmd.exp: create local variable linteger
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lpinteger
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lcharacter
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lpcharacter
PASS: gdb.mi/mi2-var-cmd.exp: create local variable llong
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lplong
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lfloat
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lpfloat
PASS: gdb.mi/mi2-var-cmd.exp: create local variable ldouble
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lpdouble
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lsimple
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lpsimple
PASS: gdb.mi/mi2-var-cmd.exp: create local variable func
PASS: gdb.mi/mi2-var-cmd.exp: create lsimple.character
PASS: gdb.mi/mi2-var-cmd.exp: create lsimple->integer
PASS: gdb.mi/mi2-var-cmd.exp: create lsimple.integer
PASS: gdb.mi/mi2-var-cmd.exp: create int
PASS: gdb.mi/mi2-var-cmd.exp: update all vars
PASS: gdb.mi/mi2-var-cmd.exp: step at do_locals_test
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: linteger changed
PASS: gdb.mi/mi2-var-cmd.exp: step at do_locals_tests (2)
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: lpinteger changed
PASS: gdb.mi/mi2-var-cmd.exp: step at do_locals_tests (3)
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: lcharacter changed
PASS: gdb.mi/mi2-var-cmd.exp: step at do_locals_tests (4)
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: lpcharacter changed
PASS: gdb.mi/mi2-var-cmd.exp: step at do_locals_tests (5)
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: many changed
PASS: gdb.mi/mi2-var-cmd.exp: step at do_locals_tests (6)
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: func and lpsimple changed
PASS: gdb.mi/mi2-var-cmd.exp: step at do_locals_tests (7)
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: lsimple and others changed
PASS: gdb.mi/mi2-var-cmd.exp: assign to global_simple
PASS: gdb.mi/mi2-var-cmd.exp: assign to linteger
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: linteger changed after assign
PASS: gdb.mi/mi2-var-cmd.exp: assign to linteger again, same value
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: linteger not changed after same assign
PASS: gdb.mi/mi2-var-cmd.exp: eval linteger
PASS: gdb.mi/mi2-var-cmd.exp: assign to lpinteger
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: lpinteger changed after assign
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: no changes on second update
PASS: gdb.mi/mi2-var-cmd.exp: eval lpinteger
PASS: gdb.mi/mi2-var-cmd.exp: assign to linteger
PASS: gdb.mi/mi2-var-cmd.exp: assign to lpinteger
PASS: gdb.mi/mi2-var-cmd.exp: assign to lcharacter
PASS: gdb.mi/mi2-var-cmd.exp: eval lcharacter
PASS: gdb.mi/mi2-var-cmd.exp: assign to llong
PASS: gdb.mi/mi2-var-cmd.exp: eval llong
PASS: gdb.mi/mi2-var-cmd.exp: assign to llong
PASS: gdb.mi/mi2-var-cmd.exp: assign to lplong
PASS: gdb.mi/mi2-var-cmd.exp: eval lplong
PASS: gdb.mi/mi2-var-cmd.exp: assign to lplong
PASS: gdb.mi/mi2-var-cmd.exp: assign to lfloat
PASS: gdb.mi/mi2-var-cmd.exp: eval lfloat
PASS: gdb.mi/mi2-var-cmd.exp: assign to lfloat
PASS: gdb.mi/mi2-var-cmd.exp: assign to lpfloat
PASS: gdb.mi/mi2-var-cmd.exp: assign to ldouble
PASS: gdb.mi/mi2-var-cmd.exp: assign to func
PASS: gdb.mi/mi2-var-cmd.exp: assign to lsimple.character
PASS: gdb.mi/mi2-var-cmd.exp: assign to lsimple->integer
PASS: gdb.mi/mi2-var-cmd.exp: assign to lsimple.integer
PASS: gdb.mi/mi2-var-cmd.exp: breakpoint at subroutine1
PASS: gdb.mi/mi2-var-cmd.exp: mi runto subroutine1
PASS: gdb.mi/mi2-var-cmd.exp: create i
PASS: gdb.mi/mi2-var-cmd.exp: create l
PASS: gdb.mi/mi2-var-cmd.exp: create linteger
PASS: gdb.mi/mi2-var-cmd.exp: step at subroutine1
XFAIL: gdb.mi/mi2-var-cmd.exp: update all vars: changed FIXME
PASS: gdb.mi/mi2-var-cmd.exp: step at subroutine1 (2)
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: i changed
PASS: gdb.mi/mi2-var-cmd.exp: step at subroutine1 (3)
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: llong changed
PASS: gdb.mi/mi2-var-cmd.exp: next out of subroutine1
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: all now out of scope
PASS: gdb.mi/mi2-var-cmd.exp: delete var
PASS: gdb.mi/mi2-var-cmd.exp: delete var linteger
PASS: gdb.mi/mi2-var-cmd.exp: delete var lpinteger
PASS: gdb.mi/mi2-var-cmd.exp: delete var lcharacter
PASS: gdb.mi/mi2-var-cmd.exp: delete var lpcharacter
PASS: gdb.mi/mi2-var-cmd.exp: delete var llong
PASS: gdb.mi/mi2-var-cmd.exp: delete var lplong
PASS: gdb.mi/mi2-var-cmd.exp: delete var lfloat
PASS: gdb.mi/mi2-var-cmd.exp: delete var lpfloat
PASS: gdb.mi/mi2-var-cmd.exp: delete var ldouble
PASS: gdb.mi/mi2-var-cmd.exp: delete var lpdouble
PASS: gdb.mi/mi2-var-cmd.exp: delete var lsimple
PASS: gdb.mi/mi2-var-cmd.exp: delete var lpsimple
PASS: gdb.mi/mi2-var-cmd.exp: delete var func
PASS: gdb.mi/mi2-var-cmd.exp: delete var lsimple.character
PASS: gdb.mi/mi2-var-cmd.exp: delete var  lsimple->integer
PASS: gdb.mi/mi2-var-cmd.exp: delete var lsimple.integer
PASS: gdb.mi/mi2-var-cmd.exp: delete var i
PASS: gdb.mi/mi2-var-cmd.exp: delete var l
PASS: gdb.mi/mi2-var-cmd.exp: breakpoint at do_special_tests
PASS: gdb.mi/mi2-var-cmd.exp: mi runto do_special_tests
PASS: gdb.mi/mi2-var-cmd.exp: create selected_a
PASS: gdb.mi/mi2-var-cmd.exp: breakpoint at incr_a
PASS: gdb.mi/mi2-var-cmd.exp: mi runto incr_a
PASS: gdb.mi/mi2-var-cmd.exp: update selected_a in incr_a
PASS: gdb.mi/mi2-var-cmd.exp: step a line in incr_a
PASS: gdb.mi/mi2-var-cmd.exp: return from incr_a to do_special_tests
PASS: gdb.mi/mi2-var-cmd.exp: update selected_a in do_special_tests
PASS: gdb.mi/mi2-var-cmd.exp: floating varobj invalidation
Running ../../../gdb/testsuite/gdb.mi/gdb680.exp ...
PASS: gdb.mi/gdb680.exp: -data-list-register-names -1, try 0
PASS: gdb.mi/gdb680.exp: -data-list-register-names -1, try 1
PASS: gdb.mi/gdb680.exp: -data-list-register-names -1, try 2
PASS: gdb.mi/gdb680.exp: -data-list-register-names -1, try 3
PASS: gdb.mi/gdb680.exp: -data-list-register-names -1, try 4
Running ../../../gdb/testsuite/gdb.mi/mi-var-invalidate.exp ...
PASS: gdb.mi/mi-var-invalidate.exp: create global variable
PASS: gdb.mi/mi-var-invalidate.exp: breakpoint at do_locals_tests
PASS: gdb.mi/mi-var-invalidate.exp: mi runto do_locals_tests
PASS: gdb.mi/mi-var-invalidate.exp: create local variable linteger
PASS: gdb.mi/mi-var-invalidate.exp: breakpoint at main
PASS: gdb.mi/mi-var-invalidate.exp: mi runto main
PASS: gdb.mi/mi-var-invalidate.exp: linteger not anymore in scope due to binary changes
PASS: gdb.mi/mi-var-invalidate.exp: no type for invalid variable linteger (1)
PASS: gdb.mi/mi-var-invalidate.exp: global_simple still alive
PASS: gdb.mi/mi-var-invalidate.exp: type simpleton for valid variable global_simple
PASS: gdb.mi/mi-var-invalidate.exp: linteger not valid anymore due to binary changes
PASS: gdb.mi/mi-var-invalidate.exp: no type for invalid variable linteger (2)
PASS: gdb.mi/mi-var-invalidate.exp: global_simple not anymore in scope due to binary changes
PASS: gdb.mi/mi-var-invalidate.exp: no type for invalid variable global_simple
Running ../../../gdb/testsuite/gdb.mi/mi-regs.exp ...
Running ../../../gdb/testsuite/gdb.mi/gdb2549.exp ...
PASS: gdb.mi/gdb2549.exp: wrong arguments
PASS: gdb.mi/gdb2549.exp: no executable
PASS: gdb.mi/gdb2549.exp: breakpoint at main
PASS: gdb.mi/gdb2549.exp: mi runto main
PASS: gdb.mi/gdb2549.exp: register values x
PASS: gdb.mi/gdb2549.exp: register values f
PASS: gdb.mi/gdb2549.exp: register values d
PASS: gdb.mi/gdb2549.exp: register values o
PASS: gdb.mi/gdb2549.exp: register values t
Running ../../../gdb/testsuite/gdb.mi/mi2-regs.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi-read-memory.exp ...
PASS: gdb.mi/mi-read-memory.exp: breakpoint at main
PASS: gdb.mi/mi-read-memory.exp: mi runto main
PASS: gdb.mi/mi-read-memory.exp: next at main
PASS: gdb.mi/mi-read-memory.exp: no arguments
PASS: gdb.mi/mi-read-memory.exp: 3x2, one byte
PASS: gdb.mi/mi-read-memory.exp: 3x2, one byte offset by -6
PASS: gdb.mi/mi-read-memory.exp: expression in quotes
PASS: gdb.mi/mi-read-memory.exp: ascii and data
PASS: gdb.mi/mi-read-memory.exp: decimal
PASS: gdb.mi/mi-read-memory.exp: octal
Running ../../../gdb/testsuite/gdb.mi/mi-stepi.exp ...
PASS: gdb.mi/mi-stepi.exp: breakpoint at main
PASS: gdb.mi/mi-stepi.exp: mi runto main
PASS: gdb.mi/mi-stepi.exp: step-instruction at main
PASS: gdb.mi/mi-stepi.exp: step-instruction at main (line check)
PASS: gdb.mi/mi-stepi.exp: next-instruction at main
PASS: gdb.mi/mi-stepi.exp: next-instruction at main (line check)
PASS: gdb.mi/mi-stepi.exp: next-instruction at main 2
PASS: gdb.mi/mi-stepi.exp: next-instruction at main 2 (line check)
Running ../../../gdb/testsuite/gdb.mi/gdb701.exp ...
PASS: gdb.mi/gdb701.exp: breakpoint at main
PASS: gdb.mi/gdb701.exp: mi runto main
PASS: gdb.mi/gdb701.exp: step over "foo = 0"
PASS: gdb.mi/gdb701.exp: create fooPtr
PASS: gdb.mi/gdb701.exp: list children of fooPtr
PASS: gdb.mi/gdb701.exp: list children of fooPtr.x
PASS: gdb.mi/gdb701.exp: list children of fooPtr.y
PASS: gdb.mi/gdb701.exp: list children of fooPtr.z
Running ../../../gdb/testsuite/gdb.mi/mi-async.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi2-stepi.exp ...
PASS: gdb.mi/mi2-stepi.exp: breakpoint at main
PASS: gdb.mi/mi2-stepi.exp: mi runto main
PASS: gdb.mi/mi2-stepi.exp: step-instruction at main
PASS: gdb.mi/mi2-stepi.exp: step-instruction at main (line check)
PASS: gdb.mi/mi2-stepi.exp: next-instruction at main
PASS: gdb.mi/mi2-stepi.exp: next-instruction at main (line check)
PASS: gdb.mi/mi2-stepi.exp: next-instruction at main 2
PASS: gdb.mi/mi2-stepi.exp: next-instruction at main 2 (line check)
Running ../../../gdb/testsuite/gdb.mi/mi-file.exp ...
PASS: gdb.mi/mi-file.exp: request path info of current source file (basics.c)
PASS: gdb.mi/mi-file.exp: Getting a list of source files.
Running ../../../gdb/testsuite/gdb.mi/mi2-hack-cli.exp ...
PASS: gdb.mi/mi2-hack-cli.exp: show architecture
PASS: gdb.mi/mi2-hack-cli.exp: 47show architecture
Running ../../../gdb/testsuite/gdb.mi/mi-nonstop.exp ...
UNSUPPORTED: gdb.mi/mi-nonstop.exp: Couldn't compile ../../../gdb/testsuite/gdb.mi/non-stop.c: unrecognized error
Running ../../../gdb/testsuite/gdb.mi/mi-var-display.exp ...
PASS: gdb.mi/mi-var-display.exp: break-insert operation
PASS: gdb.mi/mi-var-display.exp: run to main
PASS: gdb.mi/mi-var-display.exp: create local variable bar
PASS: gdb.mi/mi-var-display.exp: info type variable bar
PASS: gdb.mi/mi-var-display.exp: show format variable bar
PASS: gdb.mi/mi-var-display.exp: eval variable bar
PASS: gdb.mi/mi-var-display.exp: set format variable bar
PASS: gdb.mi/mi-var-display.exp: eval variable bar with new format
PASS: gdb.mi/mi-var-display.exp: assing to variable bar
PASS: gdb.mi/mi-var-display.exp: set format variable bar
PASS: gdb.mi/mi-var-display.exp: eval variable bar with new value
PASS: gdb.mi/mi-var-display.exp: delete var bar
PASS: gdb.mi/mi-var-display.exp: create local variable foo
PASS: gdb.mi/mi-var-display.exp: info type variable foo
PASS: gdb.mi/mi-var-display.exp: show format variable foo
PASS: gdb.mi/mi-var-display.exp: eval variable foo
PASS: gdb.mi/mi-var-display.exp: set format variable foo
PASS: gdb.mi/mi-var-display.exp: show format variable foo
PASS: gdb.mi/mi-var-display.exp: eval variable foo
PASS: gdb.mi/mi-var-display.exp: assing to variable foo
PASS: gdb.mi/mi-var-display.exp: set format variable foo
PASS: gdb.mi/mi-var-display.exp: eval variable foo
PASS: gdb.mi/mi-var-display.exp: eval variable foo in hex
PASS: gdb.mi/mi-var-display.exp: show format variable foo after eval in hex
PASS: gdb.mi/mi-var-display.exp: eval variable foo in octal
PASS: gdb.mi/mi-var-display.exp: show format variable foo after eval in octal
PASS: gdb.mi/mi-var-display.exp: eval variable foo in decimal
PASS: gdb.mi/mi-var-display.exp: show format variable foo after eval in decimal
PASS: gdb.mi/mi-var-display.exp: eval variable foo in natural
PASS: gdb.mi/mi-var-display.exp: show format variable foo after eval in natural
PASS: gdb.mi/mi-var-display.exp: eval variable foo in binary
PASS: gdb.mi/mi-var-display.exp: show format variable foo after eval in binary
PASS: gdb.mi/mi-var-display.exp: delete var foo
PASS: gdb.mi/mi-var-display.exp: create local variable weird
PASS: gdb.mi/mi-var-display.exp: get children local variable weird
PASS: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr
PASS: gdb.mi/mi-var-display.exp: show format variable weird.func_ptr
PASS: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr_ptr
PASS: gdb.mi/mi-var-display.exp: show format variable weird.func_ptr_ptr
PASS: gdb.mi/mi-var-display.exp: set format variable weird
PASS: gdb.mi/mi-var-display.exp: set format variable weird.integer
PASS: gdb.mi/mi-var-display.exp: set format variable weird.character
PASS: gdb.mi/mi-var-display.exp: set format variable weird.char_ptr
PASS: gdb.mi/mi-var-display.exp: set format variable weird.long_int
PASS: gdb.mi/mi-var-display.exp: set format variable weird.int_ptr_ptr
PASS: gdb.mi/mi-var-display.exp: set format variable weird.long_array
PASS: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr
PASS: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr_struct
PASS: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr_ptr
PASS: gdb.mi/mi-var-display.exp: set format variable weird.u1
PASS: gdb.mi/mi-var-display.exp: set format variable weird.s2
PASS: gdb.mi/mi-var-display.exp: delete var weird
PASS: gdb.mi/mi-var-display.exp: break-insert operation 2
PASS: gdb.mi/mi-var-display.exp: continue to do_special_tests
PASS: gdb.mi/mi-var-display.exp: create local variable u
PASS: gdb.mi/mi-var-display.exp: eval variable u
PASS: gdb.mi/mi-var-display.exp: info type variable u
PASS: gdb.mi/mi-var-display.exp: is u editable
PASS: gdb.mi/mi-var-display.exp: get number of children of u
PASS: gdb.mi/mi-var-display.exp: get children of u
PASS: gdb.mi/mi-var-display.exp: create local variable anonu
PASS: gdb.mi/mi-var-display.exp: eval variable anonu
PASS: gdb.mi/mi-var-display.exp: info type variable anonu
PASS: gdb.mi/mi-var-display.exp: is anonu editable
PASS: gdb.mi/mi-var-display.exp: get number of children of anonu
PASS: gdb.mi/mi-var-display.exp: get children of anonu
PASS: gdb.mi/mi-var-display.exp: create local variable s
PASS: gdb.mi/mi-var-display.exp: eval variable s
PASS: gdb.mi/mi-var-display.exp: info type variable s
PASS: gdb.mi/mi-var-display.exp: is s editable
PASS: gdb.mi/mi-var-display.exp: get number of children of s
PASS: gdb.mi/mi-var-display.exp: get children of s
PASS: gdb.mi/mi-var-display.exp: create local variable anons
PASS: gdb.mi/mi-var-display.exp: eval variable anons
PASS: gdb.mi/mi-var-display.exp: info type variable anons
PASS: gdb.mi/mi-var-display.exp: is anons editable
PASS: gdb.mi/mi-var-display.exp: get number of children of anons
PASS: gdb.mi/mi-var-display.exp: get children of anons
PASS: gdb.mi/mi-var-display.exp: create local variable e
XFAIL: gdb.mi/mi-var-display.exp: eval variable e
PASS: gdb.mi/mi-var-display.exp: info type variable e
PASS: gdb.mi/mi-var-display.exp: is e editable
PASS: gdb.mi/mi-var-display.exp: get number of children of e
PASS: gdb.mi/mi-var-display.exp: get children of e
PASS: gdb.mi/mi-var-display.exp: create local variable anone
PASS: gdb.mi/mi-var-display.exp: eval variable anone
PASS: gdb.mi/mi-var-display.exp: create duplicate local variable anone
PASS: gdb.mi/mi-var-display.exp: info type variable anone
PASS: gdb.mi/mi-var-display.exp: is anone editable
PASS: gdb.mi/mi-var-display.exp: get number of children of anone
PASS: gdb.mi/mi-var-display.exp: get children of anone
PASS: gdb.mi/mi-var-display.exp: print FP register
PASS: gdb.mi/mi-var-display.exp: breakpoint at incr_a
PASS: gdb.mi/mi-var-display.exp: mi runto incr_a
PASS: gdb.mi/mi-var-display.exp: create local variable a1
PASS: gdb.mi/mi-var-display.exp: create variable a2 in different scope
Running ../../../gdb/testsuite/gdb.mi/mi2-cli.exp ...
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec with no arguments
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec with one argument
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec with bogus interpreter
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console bogus
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "file $binfile"
PASS: gdb.mi/mi2-cli.exp: breakpoint at main
PASS: gdb.mi/mi2-cli.exp: mi runto main
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "set args foobar"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "show args"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "break callee4"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "info break"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "set listsize 1"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "list"
PASS: gdb.mi/mi2-cli.exp: continue to callee4
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "delete 2"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "up"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "down"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "frame 2"
PASS: gdb.mi/mi2-cli.exp: -stack-select-frame 0
PASS: gdb.mi/mi2-cli.exp: -break-insert -t basics.c:$line_main_hello
PASS: gdb.mi/mi2-cli.exp: -exec-continue to line 70
PASS: gdb.mi/mi2-cli.exp: -exec-next to line 72
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "list" at basics.c:$line_main_return
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "help set args"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "set $pc=0x0"
Running ../../../gdb/testsuite/gdb.mi/mi-pending.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi-basics.exp ...
PASS: gdb.mi/mi-basics.exp: acceptance of MI operations
PASS: gdb.mi/mi-basics.exp: file-exec-and-symbols operation
PASS: gdb.mi/mi-basics.exp: file-exec-file operation
PASS: gdb.mi/mi-basics.exp: file-symbol-file operation
PASS: gdb.mi/mi-basics.exp: break-delete (all) operation
PASS: gdb.mi/mi-basics.exp: all breakpoints removed
PASS: gdb.mi/mi-basics.exp: environment-directory arg operation
PASS: gdb.mi/mi-basics.exp: environment-directory empty-string operation
PASS: gdb.mi/mi-basics.exp: environment-directory operation
PASS: gdb.mi/mi-basics.exp: environment-cd arg operation
PASS: gdb.mi/mi-basics.exp: environment-pwd operation
PASS: gdb.mi/mi-basics.exp: environment-path no-args operation
PASS: gdb.mi/mi-basics.exp: environment-path dir1 dir2 operation
PASS: gdb.mi/mi-basics.exp: environment-path -r dir operation
PASS: gdb.mi/mi-basics.exp: environment-path -r operation
PASS: gdb.mi/mi-basics.exp: initial tty is mi_inferior_tty_name
PASS: gdb.mi/mi-basics.exp: set tty to /dev/pts/1
PASS: gdb.mi/mi-basics.exp: tty was set correctly
PASS: gdb.mi/mi-basics.exp: set tty to the empty string
PASS: gdb.mi/mi-basics.exp: make sure tty is empty
PASS: gdb.mi/mi-basics.exp: set tty to mi_inferior_tty_name (the way it was)
PASS: gdb.mi/mi-basics.exp: verify tty is correct
Running ../../../gdb/testsuite/gdb.mi/mi-return.exp ...
PASS: gdb.mi/mi-return.exp: breakpoint at callee4
PASS: gdb.mi/mi-return.exp: mi runto callee4
PASS: gdb.mi/mi-return.exp: delete all breakpoints
PASS: gdb.mi/mi-return.exp: return from callee4 now
Running ../../../gdb/testsuite/gdb.mi/mi-var-cmd.exp ...
PASS: gdb.mi/mi-var-cmd.exp: create global variable
PASS: gdb.mi/mi-var-cmd.exp: create non-existent variable
PASS: gdb.mi/mi-var-cmd.exp: create out of scope variable
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at do_locals_tests
PASS: gdb.mi/mi-var-cmd.exp: mi runto do_locals_tests
PASS: gdb.mi/mi-var-cmd.exp: run to 130 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: create local variable linteger
PASS: gdb.mi/mi-var-cmd.exp: create local variable lpinteger
PASS: gdb.mi/mi-var-cmd.exp: create local variable lcharacter
PASS: gdb.mi/mi-var-cmd.exp: create local variable lpcharacter
PASS: gdb.mi/mi-var-cmd.exp: create local variable llong
PASS: gdb.mi/mi-var-cmd.exp: create local variable lplong
PASS: gdb.mi/mi-var-cmd.exp: create local variable lfloat
PASS: gdb.mi/mi-var-cmd.exp: create local variable lpfloat
PASS: gdb.mi/mi-var-cmd.exp: create local variable ldouble
PASS: gdb.mi/mi-var-cmd.exp: create local variable lpdouble
PASS: gdb.mi/mi-var-cmd.exp: create local variable lsimple
PASS: gdb.mi/mi-var-cmd.exp: create local variable lpsimple
PASS: gdb.mi/mi-var-cmd.exp: create local variable func
PASS: gdb.mi/mi-var-cmd.exp: create lsimple.character
PASS: gdb.mi/mi-var-cmd.exp: create lsimple->integer
PASS: gdb.mi/mi-var-cmd.exp: create lsimple.integer
PASS: gdb.mi/mi-var-cmd.exp: create int
PASS: gdb.mi/mi-var-cmd.exp: update all vars
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_test
PASS: gdb.mi/mi-var-cmd.exp: update all vars: linteger changed
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (2)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: lpinteger changed
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (3)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: lcharacter changed
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (4)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: lpcharacter changed
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (5)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: many changed
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (6)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: func and lpsimple changed
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (7)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: lsimple and others changed
PASS: gdb.mi/mi-var-cmd.exp: assign to global_simple
PASS: gdb.mi/mi-var-cmd.exp: assign to linteger
PASS: gdb.mi/mi-var-cmd.exp: update all vars: linteger changed after assign
PASS: gdb.mi/mi-var-cmd.exp: assign to linteger again, same value
PASS: gdb.mi/mi-var-cmd.exp: update all vars: linteger not changed after same assign
PASS: gdb.mi/mi-var-cmd.exp: eval linteger
PASS: gdb.mi/mi-var-cmd.exp: assign to lpinteger
PASS: gdb.mi/mi-var-cmd.exp: update all vars: lpinteger changed after assign
PASS: gdb.mi/mi-var-cmd.exp: update all vars: no changes on second update
PASS: gdb.mi/mi-var-cmd.exp: eval lpinteger
PASS: gdb.mi/mi-var-cmd.exp: assign to linteger
PASS: gdb.mi/mi-var-cmd.exp: assign to lpinteger
PASS: gdb.mi/mi-var-cmd.exp: assign to lcharacter
PASS: gdb.mi/mi-var-cmd.exp: eval lcharacter
PASS: gdb.mi/mi-var-cmd.exp: assign to llong
PASS: gdb.mi/mi-var-cmd.exp: eval llong
PASS: gdb.mi/mi-var-cmd.exp: assign to llong
PASS: gdb.mi/mi-var-cmd.exp: assign to lplong
PASS: gdb.mi/mi-var-cmd.exp: eval lplong
PASS: gdb.mi/mi-var-cmd.exp: assign to lplong
PASS: gdb.mi/mi-var-cmd.exp: assign to lfloat
PASS: gdb.mi/mi-var-cmd.exp: eval lfloat
PASS: gdb.mi/mi-var-cmd.exp: assign to lfloat
PASS: gdb.mi/mi-var-cmd.exp: assign to lpfloat
PASS: gdb.mi/mi-var-cmd.exp: assign to ldouble
PASS: gdb.mi/mi-var-cmd.exp: assign to func
PASS: gdb.mi/mi-var-cmd.exp: assign to lsimple.character
PASS: gdb.mi/mi-var-cmd.exp: assign to lsimple->integer
PASS: gdb.mi/mi-var-cmd.exp: assign to lsimple.integer
PASS: gdb.mi/mi-var-cmd.exp: var update
PASS: gdb.mi/mi-var-cmd.exp: assign same value to func
PASS: gdb.mi/mi-var-cmd.exp: assign same value to func (update)
PASS: gdb.mi/mi-var-cmd.exp: create global variable array_ptr
PASS: gdb.mi/mi-var-cmd.exp: assign array to pointer
PASS: gdb.mi/mi-var-cmd.exp: assign array to pointer (update)
PASS: gdb.mi/mi-var-cmd.exp: assign same array to pointer
PASS: gdb.mi/mi-var-cmd.exp: assign same array to pointer (update)
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at subroutine1
PASS: gdb.mi/mi-var-cmd.exp: mi runto subroutine1
PASS: gdb.mi/mi-var-cmd.exp: create i
PASS: gdb.mi/mi-var-cmd.exp: create l
PASS: gdb.mi/mi-var-cmd.exp: create linteger
PASS: gdb.mi/mi-var-cmd.exp: step at subroutine1
XFAIL: gdb.mi/mi-var-cmd.exp: update all vars: changed FIXME
PASS: gdb.mi/mi-var-cmd.exp: step at subroutine1 (2)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: i changed
PASS: gdb.mi/mi-var-cmd.exp: step at subroutine1 (3)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: llong changed
PASS: gdb.mi/mi-var-cmd.exp: next out of subroutine1
PASS: gdb.mi/mi-var-cmd.exp: update all vars: all now out of scope
PASS: gdb.mi/mi-var-cmd.exp: delete var
PASS: gdb.mi/mi-var-cmd.exp: delete var linteger
PASS: gdb.mi/mi-var-cmd.exp: delete var lpinteger
PASS: gdb.mi/mi-var-cmd.exp: delete var lcharacter
PASS: gdb.mi/mi-var-cmd.exp: delete var lpcharacter
PASS: gdb.mi/mi-var-cmd.exp: delete var llong
PASS: gdb.mi/mi-var-cmd.exp: delete var lplong
PASS: gdb.mi/mi-var-cmd.exp: delete var lfloat
PASS: gdb.mi/mi-var-cmd.exp: delete var lpfloat
PASS: gdb.mi/mi-var-cmd.exp: delete var ldouble
PASS: gdb.mi/mi-var-cmd.exp: delete var lpdouble
PASS: gdb.mi/mi-var-cmd.exp: delete var lsimple
PASS: gdb.mi/mi-var-cmd.exp: delete var lpsimple
PASS: gdb.mi/mi-var-cmd.exp: delete var func
PASS: gdb.mi/mi-var-cmd.exp: delete var lsimple.character
PASS: gdb.mi/mi-var-cmd.exp: delete var  lsimple->integer
PASS: gdb.mi/mi-var-cmd.exp: delete var lsimple.integer
PASS: gdb.mi/mi-var-cmd.exp: delete var i
PASS: gdb.mi/mi-var-cmd.exp: delete var l
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at do_special_tests
PASS: gdb.mi/mi-var-cmd.exp: mi runto do_special_tests
PASS: gdb.mi/mi-var-cmd.exp: create selected_a
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at incr_a
PASS: gdb.mi/mi-var-cmd.exp: mi runto incr_a
PASS: gdb.mi/mi-var-cmd.exp: update selected_a in incr_a
PASS: gdb.mi/mi-var-cmd.exp: step a line in incr_a
PASS: gdb.mi/mi-var-cmd.exp: return from incr_a to do_special_tests
PASS: gdb.mi/mi-var-cmd.exp: update selected_a in do_special_tests
PASS: gdb.mi/mi-var-cmd.exp: floating varobj invalidation
PASS: gdb.mi/mi-var-cmd.exp: delete selected_a
PASS: gdb.mi/mi-var-cmd.exp: delete array_ptr
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:333 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: create varobj for v1
PASS: gdb.mi/mi-var-cmd.exp: create varobj for v2
PASS: gdb.mi/mi-var-cmd.exp: list children of v1
PASS: gdb.mi/mi-var-cmd.exp: list children of v1.nested
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 1
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.j: 2
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.k: 3
PASS: gdb.mi/mi-var-cmd.exp: check V2: 4
PASS: gdb.mi/mi-var-cmd.exp: update varobjs: V2 changed
PASS: gdb.mi/mi-var-cmd.exp: -var-set-frozen V2 1
PASS: gdb.mi/mi-var-cmd.exp: update varobjs: nothing changed
PASS: gdb.mi/mi-var-cmd.exp: check V2: 5
PASS: gdb.mi/mi-var-cmd.exp: update V2 explicitly
PASS: gdb.mi/mi-var-cmd.exp: check V2: 6
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:367 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: -var-set-frozen V1 1
PASS: gdb.mi/mi-var-cmd.exp: update varobjs: nothing changed
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 1
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.j: 2
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.k: 3
PASS: gdb.mi/mi-var-cmd.exp: update V1.nested.j
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 1
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.j: 8
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.k: 3
PASS: gdb.mi/mi-var-cmd.exp: update V1.nested
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 1
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.j: 8
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.k: 9
PASS: gdb.mi/mi-var-cmd.exp: update V1.i
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 7
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:392 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: -var-set-frozen V1 0
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 7
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.j: 8
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.k: 9
PASS: gdb.mi/mi-var-cmd.exp: update V1
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 10
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.j: 11
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.k: 12
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:492 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: create varobj for Data
PASS: gdb.mi/mi-var-cmd.exp: list children of Data
PASS: gdb.mi/mi-var-cmd.exp: access bitfield
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:435 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: create floating varobj
PASS: gdb.mi/mi-var-cmd.exp: update F (1)
PASS: gdb.mi/mi-var-cmd.exp: check F (1)
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:446 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: update F (2)
PASS: gdb.mi/mi-var-cmd.exp: check F (2)
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:454 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: update F (--all-values)
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:460 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: update F (3)
PASS: gdb.mi/mi-var-cmd.exp: check F (3)
PASS: gdb.mi/mi-var-cmd.exp: inside breakpoint inside callee
PASS: gdb.mi/mi-var-cmd.exp: continue to where i is initialized
PASS: gdb.mi/mi-var-cmd.exp: update F inside callee
PASS: gdb.mi/mi-var-cmd.exp: check F inside callee
FAIL: gdb.mi/mi-var-cmd.exp: create null_ptr
PASS: gdb.mi/mi-var-cmd.exp: update null_ptr
PASS: gdb.mi/mi-var-cmd.exp: delete null_ptr
FAIL: gdb.mi/mi-var-cmd.exp: kill program before endvar (the program is no longer running)
PASS: gdb.mi/mi-var-cmd.exp: create endvar
PASS: gdb.mi/mi-var-cmd.exp: update endvar
PASS: gdb.mi/mi-var-cmd.exp: delete endvar
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at do_locals_tests
PASS: gdb.mi/mi-var-cmd.exp: mi runto do_locals_tests
PASS: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: create varobj
PASS: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: check initial value
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at main
PASS: gdb.mi/mi-var-cmd.exp: mi runto main
PASS: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: out of scope now
PASS: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: out of scope now, not changed
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at do_locals_tests
PASS: gdb.mi/mi-var-cmd.exp: mi runto do_locals_tests
PASS: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: in scope now
PASS: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: in scope now, not changed
Running ../../../gdb/testsuite/gdb.mi/mi2-stack.exp ...
PASS: gdb.mi/mi2-stack.exp: breakpoint at callee4
PASS: gdb.mi/mi2-stack.exp: mi runto callee4
FAIL: gdb.mi/mi2-stack.exp: stack frame listing
PASS: gdb.mi/mi2-stack.exp: stack frame listing 1 1
FAIL: gdb.mi/mi2-stack.exp: stack frame listing 1 3
PASS: gdb.mi/mi2-stack.exp: stack frame listing wrong
PASS: gdb.mi/mi2-stack.exp: selected frame listing
FAIL: gdb.mi/mi2-stack.exp: stack frame listing 1 300
FAIL: gdb.mi/mi2-stack.exp: stack args listing 0
PASS: gdb.mi/mi2-stack.exp: stack args listing 0 1 1
FAIL: gdb.mi/mi2-stack.exp: stack args listing 0 1 3
FAIL: gdb.mi/mi2-stack.exp: stack args listing 1
FAIL: gdb.mi/mi2-stack.exp: stack args listing 1 1 1
FAIL: gdb.mi/mi2-stack.exp: stack args listing 1 1 3
PASS: gdb.mi/mi2-stack.exp: stack args listing wrong
FAIL: gdb.mi/mi2-stack.exp: stack args listing 1 1 300
PASS: gdb.mi/mi2-stack.exp: stack locals listing of names
PASS: gdb.mi/mi2-stack.exp: next's in callee4
PASS: gdb.mi/mi2-stack.exp: stack locals listing of names and values
PASS: gdb.mi/mi2-stack.exp: stack locals listing, simple types: names and values, complex type: names and types
PASS: gdb.mi/mi2-stack.exp: stack locals listing wrong
PASS: gdb.mi/mi2-stack.exp: stack select frame 1
PASS: gdb.mi/mi2-stack.exp: stack locals listing for new frame
PASS: gdb.mi/mi2-stack.exp: stack locals for same frame (level 1)
FAIL: gdb.mi/mi2-stack.exp: stack info-depth
PASS: gdb.mi/mi2-stack.exp: stack info-depth 3
FAIL: gdb.mi/mi2-stack.exp: stack info-depth 99
PASS: gdb.mi/mi2-stack.exp: stack info-depth wrong usage
Running ../../../gdb/testsuite/gdb.mi/mi-cli.exp ...
PASS: gdb.mi/mi-cli.exp: -interpreter-exec with no arguments
PASS: gdb.mi/mi-cli.exp: -interpreter-exec with one argument
PASS: gdb.mi/mi-cli.exp: -interpreter-exec with bogus interpreter
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console bogus
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "file $binfile"
PASS: gdb.mi/mi-cli.exp: breakpoint at main
PASS: gdb.mi/mi-cli.exp: mi runto main
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "set args foobar"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "show args"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "break callee4"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "info break"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "set listsize 1"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "list"
PASS: gdb.mi/mi-cli.exp: continue to callee4
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "delete 2"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "up"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "down"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "frame 2"
PASS: gdb.mi/mi-cli.exp: -stack-select-frame 0
PASS: gdb.mi/mi-cli.exp: check *stopped from CLI command
PASS: gdb.mi/mi-cli.exp: -break-insert -t basics.c:$line_main_hello
PASS: gdb.mi/mi-cli.exp: -exec-continue to line 70
PASS: gdb.mi/mi-cli.exp: 34 next: run
PASS: gdb.mi/mi-cli.exp: 34 next: stop
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "list" at basics.c:$line_main_return
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "help set args"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "set $pc=0x0"
Running ../../../gdb/testsuite/gdb.mi/mi2-eval.exp ...
PASS: gdb.mi/mi2-eval.exp: breakpoint at callee4
PASS: gdb.mi/mi2-eval.exp: mi runto callee4
PASS: gdb.mi/mi2-eval.exp: next at callee4
PASS: gdb.mi/mi2-eval.exp: eval A
PASS: gdb.mi/mi2-eval.exp: eval &A
PASS: gdb.mi/mi2-eval.exp: eval A+3
PASS: gdb.mi/mi2-eval.exp: eval A + 3
Running ../../../gdb/testsuite/gdb.mi/mi-nsintrall.exp ...
UNSUPPORTED: gdb.mi/mi-nsintrall.exp: Couldn't compile ../../../gdb/testsuite/gdb.mi/nsintrall.c: unrecognized error
Running ../../../gdb/testsuite/gdb.mi/mi-watch.exp ...
PASS: gdb.mi/mi-watch.exp: hw watchpoints toggle (1)
PASS: gdb.mi/mi-watch.exp: sw: breakpoint at callee4
PASS: gdb.mi/mi-watch.exp: sw: mi runto callee4
PASS: gdb.mi/mi-watch.exp: sw: break-watch operation
PASS: gdb.mi/mi-watch.exp: sw: list of watchpoints
PASS: gdb.mi/mi-watch.exp: sw: watchpoint trigger
XPASS: gdb.mi/mi-watch.exp: sw: watchpoint trigger
PASS: gdb.mi/mi-watch.exp: hw watchpoints toggle (2)
PASS: gdb.mi/mi-watch.exp: hw: breakpoint at callee4
PASS: gdb.mi/mi-watch.exp: hw: mi runto callee4
PASS: gdb.mi/mi-watch.exp: hw: break-watch operation
PASS: gdb.mi/mi-watch.exp: hw: list of watchpoints
PASS: gdb.mi/mi-watch.exp: hw: watchpoint trigger
PASS: gdb.mi/mi-watch.exp: hw: watchpoint trigger
Running ../../../gdb/testsuite/gdb.mi/mi-hack-cli.exp ...
PASS: gdb.mi/mi-hack-cli.exp: show architecture
PASS: gdb.mi/mi-hack-cli.exp: 47show architecture
Running ../../../gdb/testsuite/gdb.mi/mi2-break.exp ...
PASS: gdb.mi/mi2-break.exp: break-insert -t operation
PASS: gdb.mi/mi2-break.exp: insert temp breakpoint at basics.c:callee2
PASS: gdb.mi/mi2-break.exp: insert temp breakpoint at basics.c:$line_callee3_head
PASS: gdb.mi/mi2-break.exp: insert temp breakpoint at "<fullfilename>":$line_callee4_head
PASS: gdb.mi/mi2-break.exp: list of breakpoints
PASS: gdb.mi/mi2-break.exp: delete temp breakpoints
XFAIL: gdb.mi/mi2-break.exp: break-insert -r operation
XFAIL: gdb.mi/mi2-break.exp: insert breakpoint with regexp callee2
XFAIL: gdb.mi/mi2-break.exp: insert breakpoint with regexp callee
XFAIL: gdb.mi/mi2-break.exp: insert breakpoint with regexp .*llee
XFAIL: gdb.mi/mi2-break.exp: list of breakpoints
PASS: gdb.mi/mi2-break.exp: delete temp breakpoints
Running ../../../gdb/testsuite/gdb.mi/mi-until.exp ...
PASS: gdb.mi/mi-until.exp: break-insert operation
PASS: gdb.mi/mi-until.exp: run to main
PASS: gdb.mi/mi-until.exp: break-delete 1
KPASS: gdb.mi/mi-until.exp: until after while loop (PRMS gdb/2104)
PASS: gdb.mi/mi-until.exp: until line number
PASS: gdb.mi/mi-until.exp: until line number:file
PASS: gdb.mi/mi-until.exp: until after current function
Running ../../../gdb/testsuite/gdb.mi/mi2-pthreads.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi-nonstop-exit.exp ...
UNSUPPORTED: gdb.mi/mi-nonstop-exit.exp: Couldn't compile ../../../gdb/testsuite/gdb.mi/non-stop-exit.c: unrecognized error
Running ../../../gdb/testsuite/gdb.mi/mi2-until.exp ...
PASS: gdb.mi/mi2-until.exp: break-insert operation
PASS: gdb.mi/mi2-until.exp: run to main
PASS: gdb.mi/mi2-until.exp: break-delete 1
KPASS: gdb.mi/mi2-until.exp: until after while loop (PRMS gdb/2104)
PASS: gdb.mi/mi2-until.exp: until line number
PASS: gdb.mi/mi2-until.exp: until line number:file
PASS: gdb.mi/mi2-until.exp: until after current function
Running ../../../gdb/testsuite/gdb.mi/mi-var-child.exp ...
PASS: gdb.mi/mi-var-child.exp: breakpoint at do_children_tests
PASS: gdb.mi/mi-var-child.exp: mi runto do_children_tests
PASS: gdb.mi/mi-var-child.exp: run to 216 (set breakpoint)
PASS: gdb.mi/mi-var-child.exp: create local variable struct_declarations
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.integer
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.integer
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.character
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.character
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_int
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_int
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.func_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.func_ptr
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.func_ptr_struct
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.func_ptr_struct
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.func_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.func_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.u1
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.u1
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.1
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.1
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.2
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.2
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.3
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.3
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.4
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.4
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.5
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.5
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.6
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.6
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.7
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.7
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.8
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.8
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.9
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.9
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.u1.a
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.u1.a
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.u1.b
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.u1.b
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.u1.c
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.u1.c
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.u1.d
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.u1.d
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.g
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.g
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.h
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.h
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.i
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.i
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s1
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.f
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.f
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s2
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s1.d
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.d
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s1.e
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.e
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s1.func
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.func
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s1.foo
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.foo
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s2.array_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2.array_ptr
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s2.func
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2.func
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: step to line $line_dct_123
PASS: gdb.mi/mi-var-child.exp: create local variable weird
PASS: gdb.mi/mi-var-child.exp: get children of weird
PASS: gdb.mi/mi-var-child.exp: get number of children of weird
PASS: gdb.mi/mi-var-child.exp: get children of weird.long_array
PASS: gdb.mi/mi-var-child.exp: get number of children of weird.long_array
PASS: gdb.mi/mi-var-child.exp: get children of weird.int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of weird.int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get children of weird.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of weird.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: create local variable weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get children of weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get children of weird->int_ptr_ptr.*weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of weird->int_ptr_ptr.*weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get children of weird->int_ptr_ptr.*weird->int_ptr_ptr.**weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of weird->int_ptr_ptr.*weird->int_ptr_ptr.**weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: is weird editable
PASS: gdb.mi/mi-var-child.exp: is weird->int_ptr_ptr editable
PASS: gdb.mi/mi-var-child.exp: is weird.int_ptr_ptr.*int_ptr_ptr editable
PASS: gdb.mi/mi-var-child.exp: is weird.int_ptr_ptr.*int_ptr_ptr.**int_ptr_ptr editable
PASS: gdb.mi/mi-var-child.exp: is weird.u1 editable
PASS: gdb.mi/mi-var-child.exp: is weird.s2 editable
PASS: gdb.mi/mi-var-child.exp: is struct_declarations.u1.a editable
PASS: gdb.mi/mi-var-child.exp: is struct_declarations.u1.b editable
PASS: gdb.mi/mi-var-child.exp: is struct_declarations.u1.c editable
PASS: gdb.mi/mi-var-child.exp: is struct_declarations.long_array editable
PASS: gdb.mi/mi-var-child.exp: is struct_declarations.long_array.0 editable
PASS: gdb.mi/mi-var-child.exp: is struct_declarations editable
PASS: gdb.mi/mi-var-child.exp: delete var weird
PASS: gdb.mi/mi-var-child.exp: update all vars. None changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_123 + 1
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.integer
PASS: gdb.mi/mi-var-child.exp: step $line_dct_123 + 4
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.char_ptr
PASS: gdb.mi/mi-var-child.exp: step $line_dct_123 + 5
PASS: gdb.mi/mi-var-child.exp: update all vars int_ptr_ptr and children changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_123 + 6
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.0 changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_123 + 7
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.1 changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_123 + 8
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.2 changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_nothing
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.3-9 changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_nothing + 1
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.func_ptr changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_nothing + 2
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.10 changed, don't print values.
PASS: gdb.mi/mi-var-child.exp: step $line_dct_a0_0
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.11 changed, print values.
PASS: gdb.mi/mi-var-child.exp: listing of names and values of children
PASS: gdb.mi/mi-var-child.exp: listing of children, simple types: names, type and values, complex types: names and types
PASS: gdb.mi/mi-var-child.exp: delete var struct_declarations
PASS: gdb.mi/mi-var-child.exp: delete var weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 1
PASS: gdb.mi/mi-var-child.exp: create local variable  psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr.****psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr.****psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: create local variable  psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr.****psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr.****psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: create local variable  psnp->ptrs
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.next
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.next.ptrs
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 2
PASS: gdb.mi/mi-var-child.exp: update all vars psnp->char_ptr (and 0.char_ptr) changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 3
PASS: gdb.mi/mi-var-child.exp: update all vars psnp->next->char_ptr (and 1.char_ptr) changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 4
PASS: gdb.mi/mi-var-child.exp: update all vars psnp->next->next->char_ptr (and 2.char_ptr) changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 5
PASS: gdb.mi/mi-var-child.exp: update all vars psnp->long_ptr (and 0.long_ptr) changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 6
XFAIL: gdb.mi/mi-var-child.exp: update all vars psnp->next->long_ptr (and 1.long_ptr) changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 7
PASS: gdb.mi/mi-var-child.exp: update all vars psnp->next->next->long_ptr (and 2.long_ptr) changed
PASS: gdb.mi/mi-var-child.exp: run to mi-var-child.c:324 (set breakpoint)
PASS: gdb.mi/mi-var-child.exp: create varobj for s
PASS: gdb.mi/mi-var-child.exp: list children of S
PASS: gdb.mi/mi-var-child.exp: delete S.a
PASS: gdb.mi/mi-var-child.exp: delete S.b
PASS: gdb.mi/mi-var-child.exp: delete S
Running ../../../gdb/testsuite/gdb.mi/gdb669.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi-syn-frame.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi-reverse.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi2-console.exp ...
PASS: gdb.mi/mi2-console.exp: breakpoint at main
PASS: gdb.mi/mi2-console.exp: mi runto main
PASS: gdb.mi/mi2-console.exp: Started step over hello
PASS: gdb.mi/mi2-console.exp: finished step over hello
Running ../../../gdb/testsuite/gdb.mi/mi2-watch.exp ...
PASS: gdb.mi/mi2-watch.exp: hw watchpoints toggle (1)
PASS: gdb.mi/mi2-watch.exp: sw: breakpoint at callee4
PASS: gdb.mi/mi2-watch.exp: sw: mi runto callee4
PASS: gdb.mi/mi2-watch.exp: sw: break-watch operation
PASS: gdb.mi/mi2-watch.exp: sw: list of watchpoints
PASS: gdb.mi/mi2-watch.exp: sw: watchpoint trigger
XPASS: gdb.mi/mi2-watch.exp: sw: watchpoint trigger
PASS: gdb.mi/mi2-watch.exp: hw watchpoints toggle (2)
PASS: gdb.mi/mi2-watch.exp: hw: breakpoint at callee4
PASS: gdb.mi/mi2-watch.exp: hw: mi runto callee4
PASS: gdb.mi/mi2-watch.exp: hw: break-watch operation
PASS: gdb.mi/mi2-watch.exp: hw: list of watchpoints
PASS: gdb.mi/mi2-watch.exp: hw: watchpoint trigger
PASS: gdb.mi/mi2-watch.exp: hw: watchpoint trigger
Running ../../../gdb/testsuite/gdb.mi/mi2-var-display.exp ...
PASS: gdb.mi/mi2-var-display.exp: break-insert operation
PASS: gdb.mi/mi2-var-display.exp: run to main
PASS: gdb.mi/mi2-var-display.exp: create local variable bar
PASS: gdb.mi/mi2-var-display.exp: info type variable bar
PASS: gdb.mi/mi2-var-display.exp: show format variable bar
PASS: gdb.mi/mi2-var-display.exp: eval variable bar
PASS: gdb.mi/mi2-var-display.exp: set format variable bar
PASS: gdb.mi/mi2-var-display.exp: eval variable bar with new format
PASS: gdb.mi/mi2-var-display.exp: assing to variable bar
PASS: gdb.mi/mi2-var-display.exp: set format variable bar
PASS: gdb.mi/mi2-var-display.exp: eval variable bar with new value
PASS: gdb.mi/mi2-var-display.exp: delete var bar
PASS: gdb.mi/mi2-var-display.exp: create local variable foo
PASS: gdb.mi/mi2-var-display.exp: info type variable foo
PASS: gdb.mi/mi2-var-display.exp: show format variable foo
PASS: gdb.mi/mi2-var-display.exp: eval variable foo
PASS: gdb.mi/mi2-var-display.exp: set format variable foo
PASS: gdb.mi/mi2-var-display.exp: show format variable foo
PASS: gdb.mi/mi2-var-display.exp: eval variable foo
PASS: gdb.mi/mi2-var-display.exp: assing to variable foo
PASS: gdb.mi/mi2-var-display.exp: set format variable foo
PASS: gdb.mi/mi2-var-display.exp: eval variable foo
PASS: gdb.mi/mi2-var-display.exp: eval variable foo in hex
PASS: gdb.mi/mi2-var-display.exp: show format variable foo after eval in hex
PASS: gdb.mi/mi2-var-display.exp: eval variable foo in octal
PASS: gdb.mi/mi2-var-display.exp: show format variable foo after eval in octal
PASS: gdb.mi/mi2-var-display.exp: eval variable foo in decimal
PASS: gdb.mi/mi2-var-display.exp: show format variable foo after eval in decimal
PASS: gdb.mi/mi2-var-display.exp: eval variable foo in natural
PASS: gdb.mi/mi2-var-display.exp: show format variable foo after eval in natural
PASS: gdb.mi/mi2-var-display.exp: eval variable foo in binary
PASS: gdb.mi/mi2-var-display.exp: show format variable foo after eval in binary
PASS: gdb.mi/mi2-var-display.exp: delete var foo
PASS: gdb.mi/mi2-var-display.exp: create local variable weird
PASS: gdb.mi/mi2-var-display.exp: get children local variable weird
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.func_ptr
PASS: gdb.mi/mi2-var-display.exp: show format variable weird.func_ptr
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.func_ptr_ptr
PASS: gdb.mi/mi2-var-display.exp: show format variable weird.func_ptr_ptr
PASS: gdb.mi/mi2-var-display.exp: set format variable weird
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.integer
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.character
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.char_ptr
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.long_int
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.int_ptr_ptr
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.long_array
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.func_ptr
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.func_ptr_struct
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.func_ptr_ptr
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.u1
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.s2
PASS: gdb.mi/mi2-var-display.exp: delete var weird
PASS: gdb.mi/mi2-var-display.exp: break-insert operation 2
PASS: gdb.mi/mi2-var-display.exp: continue to do_special_tests
PASS: gdb.mi/mi2-var-display.exp: create local variable u
PASS: gdb.mi/mi2-var-display.exp: eval variable u
PASS: gdb.mi/mi2-var-display.exp: info type variable u
PASS: gdb.mi/mi2-var-display.exp: is u editable
PASS: gdb.mi/mi2-var-display.exp: get number of children of u
PASS: gdb.mi/mi2-var-display.exp: get children of u
PASS: gdb.mi/mi2-var-display.exp: create local variable anonu
PASS: gdb.mi/mi2-var-display.exp: eval variable anonu
PASS: gdb.mi/mi2-var-display.exp: info type variable anonu
PASS: gdb.mi/mi2-var-display.exp: is anonu editable
PASS: gdb.mi/mi2-var-display.exp: get number of children of anonu
PASS: gdb.mi/mi2-var-display.exp: get children of anonu
PASS: gdb.mi/mi2-var-display.exp: create local variable s
PASS: gdb.mi/mi2-var-display.exp: eval variable s
PASS: gdb.mi/mi2-var-display.exp: info type variable s
PASS: gdb.mi/mi2-var-display.exp: is s editable
PASS: gdb.mi/mi2-var-display.exp: get number of children of s
PASS: gdb.mi/mi2-var-display.exp: get children of s
PASS: gdb.mi/mi2-var-display.exp: create local variable anons
PASS: gdb.mi/mi2-var-display.exp: eval variable anons
PASS: gdb.mi/mi2-var-display.exp: info type variable anons
PASS: gdb.mi/mi2-var-display.exp: is anons editable
PASS: gdb.mi/mi2-var-display.exp: get number of children of anons
PASS: gdb.mi/mi2-var-display.exp: get children of anons
PASS: gdb.mi/mi2-var-display.exp: create local variable e
XFAIL: gdb.mi/mi2-var-display.exp: eval variable e
PASS: gdb.mi/mi2-var-display.exp: info type variable e
PASS: gdb.mi/mi2-var-display.exp: is e editable
PASS: gdb.mi/mi2-var-display.exp: get number of children of e
PASS: gdb.mi/mi2-var-display.exp: get children of e
PASS: gdb.mi/mi2-var-display.exp: create local variable anone
PASS: gdb.mi/mi2-var-display.exp: eval variable anone
PASS: gdb.mi/mi2-var-display.exp: create duplicate local variable anone
PASS: gdb.mi/mi2-var-display.exp: info type variable anone
PASS: gdb.mi/mi2-var-display.exp: is anone editable
PASS: gdb.mi/mi2-var-display.exp: get number of children of anone
PASS: gdb.mi/mi2-var-display.exp: get children of anone
PASS: gdb.mi/mi2-var-display.exp: print FP register
PASS: gdb.mi/mi2-var-display.exp: breakpoint at incr_a
PASS: gdb.mi/mi2-var-display.exp: mi runto incr_a
PASS: gdb.mi/mi2-var-display.exp: create local variable a1
PASS: gdb.mi/mi2-var-display.exp: create variable a2 in different scope
Running ../../../gdb/testsuite/gdb.mi/mi2-return.exp ...
PASS: gdb.mi/mi2-return.exp: breakpoint at callee4
PASS: gdb.mi/mi2-return.exp: mi runto callee4
PASS: gdb.mi/mi2-return.exp: delete all breakpoints
PASS: gdb.mi/mi2-return.exp: return from callee4 now
Running ../../../gdb/testsuite/gdb.mi/mi2-basics.exp ...
PASS: gdb.mi/mi2-basics.exp: acceptance of MI operations
PASS: gdb.mi/mi2-basics.exp: file-exec-and-symbols operation
PASS: gdb.mi/mi2-basics.exp: file-exec-file operation
PASS: gdb.mi/mi2-basics.exp: file-symbol-file operation
PASS: gdb.mi/mi2-basics.exp: break-delete (all) operation
PASS: gdb.mi/mi2-basics.exp: all breakpoints removed
PASS: gdb.mi/mi2-basics.exp: environment-directory arg operation
PASS: gdb.mi/mi2-basics.exp: environment-directory empty-string operation
PASS: gdb.mi/mi2-basics.exp: environment-directory operation
PASS: gdb.mi/mi2-basics.exp: environment-cd arg operation
PASS: gdb.mi/mi2-basics.exp: environment-pwd operation
PASS: gdb.mi/mi2-basics.exp: environment-path no-args operation
PASS: gdb.mi/mi2-basics.exp: environment-path dir1 dir2 operation
PASS: gdb.mi/mi2-basics.exp: environment-path -r dir operation
PASS: gdb.mi/mi2-basics.exp: environment-path -r operation
Running ../../../gdb/testsuite/gdb.mi/mi-nsmoribund.exp ...
UNSUPPORTED: gdb.mi/mi-nsmoribund.exp: Couldn't compile ../../../gdb/testsuite/gdb.mi/nsmoribund.c: unrecognized error
Running ../../../gdb/testsuite/gdb.mi/gdb792.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi-pthreads.exp ...
Running ../../../gdb/testsuite/gdb.mi/mi-console.exp ...
PASS: gdb.mi/mi-console.exp: breakpoint at main
PASS: gdb.mi/mi-console.exp: mi runto main
PASS: gdb.mi/mi-console.exp: Testing console output
UNSUPPORTED: gdb.mi/mi-console.exp: Testing console output inferior output
PASS: gdb.mi/mi-console.exp: finished step over hello
Running ../../../gdb/testsuite/gdb.mi/mi-file-transfer.exp ...
FAIL: gdb.mi/mi-file-transfer.exp: put binary file
FAIL: gdb.mi/mi-file-transfer.exp: get binary file
FAIL: gdb.mi/mi-file-transfer.exp: compare binary file
FAIL: gdb.mi/mi-file-transfer.exp: deleted binary file
Running ../../../gdb/testsuite/gdb.base/relocate.exp ...
PASS: gdb.base/relocate.exp: add-symbol-file relocate.o 0
PASS: gdb.base/relocate.exp: get address of static_foo
PASS: gdb.base/relocate.exp: get address of static_bar
PASS: gdb.base/relocate.exp: static variables have different addresses
PASS: gdb.base/relocate.exp: get address of global_foo
PASS: gdb.base/relocate.exp: get address of global_bar
PASS: gdb.base/relocate.exp: global variables have different addresses
PASS: gdb.base/relocate.exp: get address of function_foo
PASS: gdb.base/relocate.exp: get address of function_bar
PASS: gdb.base/relocate.exp: functions have different addresses
PASS: gdb.base/relocate.exp: set $offset = 0x10000
PASS: gdb.base/relocate.exp: add-symbol-file relocate.o $offset
PASS: gdb.base/relocate.exp: get address of function_foo
PASS: gdb.base/relocate.exp: function foo has a different address
PASS: gdb.base/relocate.exp: print static_foo
PASS: gdb.base/relocate.exp: print static_bar
PASS: gdb.base/relocate.exp: print global_foo
PASS: gdb.base/relocate.exp: print global_bar
Running ../../../gdb/testsuite/gdb.base/break.exp ...
PASS: gdb.base/break.exp: Delete all breakpoints when none
PASS: gdb.base/break.exp: breakpoint function
PASS: gdb.base/break.exp: breakpoint quoted function
PASS: gdb.base/break.exp: breakpoint function in file
PASS: gdb.base/break.exp: use `list' to establish default source file
PASS: gdb.base/break.exp: breakpoint line number
PASS: gdb.base/break.exp: breakpoint duplicate
PASS: gdb.base/break.exp: breakpoint line number in file
PASS: gdb.base/break.exp: breakpoint at start of multi line if conditional
PASS: gdb.base/break.exp: breakpoint at start of multi line while conditional
PASS: gdb.base/break.exp: breakpoint info
PASS: gdb.base/break.exp: run until function breakpoint
PASS: gdb.base/break.exp: run until breakpoint set at a line number
PASS: gdb.base/break.exp: run until file:function(6) breakpoint
PASS: gdb.base/break.exp: run until file:function(5) breakpoint
PASS: gdb.base/break.exp: run until file:function(4) breakpoint
PASS: gdb.base/break.exp: run until file:function(3) breakpoint
PASS: gdb.base/break.exp: run until file:function(2) breakpoint
PASS: gdb.base/break.exp: run until file:function(1) breakpoint
PASS: gdb.base/break.exp: run until quoted breakpoint
PASS: gdb.base/break.exp: run until file:linenum breakpoint
PASS: gdb.base/break.exp: breakpoint offset +1
PASS: gdb.base/break.exp: step onto breakpoint
PASS: gdb.base/break.exp: setting breakpoint at }
FAIL: gdb.base/break.exp: continue to breakpoint at }
PASS: gdb.base/break.exp: Temporary breakpoint function
PASS: gdb.base/break.exp: Temporary breakpoint function in file
PASS: gdb.base/break.exp: Temporary breakpoint line number #1
PASS: gdb.base/break.exp: Temporary breakpoint line number #2
PASS: gdb.base/break.exp: Temporary breakpoint line number in file #1
PASS: gdb.base/break.exp: Temporary breakpoint line number in file #2
PASS: gdb.base/break.exp: Temporary breakpoint info
PASS: gdb.base/break.exp: catch requires an event name
PASS: gdb.base/break.exp: set catch fork, never expected to trigger
PASS: gdb.base/break.exp: set catch vfork, never expected to trigger
PASS: gdb.base/break.exp: set catch exec, never expected to trigger
PASS: gdb.base/break.exp: break on non-existent source line
PASS: gdb.base/break.exp: until bp_location1
PASS: gdb.base/break.exp: break on default location, 1st time
PASS: gdb.base/break.exp: break on default location, 2nd time
PASS: gdb.base/break.exp: break on default location, 3rd time
PASS: gdb.base/break.exp: break on default location, 4th time
PASS: gdb.base/break.exp: set to-be-silent break bp_location1
PASS: gdb.base/break.exp: set silent break bp_location1
PASS: gdb.base/break.exp: info silent break bp_location1
PASS: gdb.base/break.exp: hit silent break bp_location1
PASS: gdb.base/break.exp: stopped for silent break bp_location1
PASS: gdb.base/break.exp: thread-specific breakpoint on non-existent thread disallowed
PASS: gdb.base/break.exp: thread-specific breakpoint on bogus thread ID disallowed
PASS: gdb.base/break.exp: breakpoint with trailing garbage disallowed
PASS: gdb.base/break.exp: step over breakpoint
PASS: gdb.base/break.exp: clear line has no breakpoint disallowed
PASS: gdb.base/break.exp: clear current line has no breakpoint disallowed
PASS: gdb.base/break.exp: break marker3 #1
PASS: gdb.base/break.exp: break marker3 #2
PASS: gdb.base/break.exp: clear marker3
PASS: gdb.base/break.exp: set convenience variable $foo to bp_location11
PASS: gdb.base/break.exp: set breakpoint via convenience variable
PASS: gdb.base/break.exp: set convenience variable $foo to 81.5
PASS: gdb.base/break.exp: set breakpoint via non-integer convenience variable disallowed
PASS: gdb.base/break.exp: set breakpoint on to-be-called function
FAIL: gdb.base/break.exp: hit breakpoint on called function
FAIL: gdb.base/break.exp: backtrace while in called function
FAIL: gdb.base/break.exp: finish from called function
PASS: gdb.base/break.exp: finish with arguments disallowed
PASS: gdb.base/break.exp: finish from outermost frame disallowed
PASS: gdb.base/break.exp: kill program
PASS: gdb.base/break.exp: break at factorial
PASS: gdb.base/break.exp: continue to factorial(5)
PASS: gdb.base/break.exp: backtrace from factorial(5)
PASS: gdb.base/break.exp: next to recursive call
PASS: gdb.base/break.exp: next over recursive call
PASS: gdb.base/break.exp: backtrace from factorial(5.1)
PASS: gdb.base/break.exp: continue until exit at recursive next test
PASS: gdb.base/break.exp: breakpoint function, optimized file
PASS: gdb.base/break.exp: breakpoint small function, optimized file
PASS: gdb.base/break.exp: run until function breakpoint, optimized file (code motion)
FAIL: gdb.base/break.exp: run until breakpoint set at small function, optimized file
PASS: gdb.base/break.exp: rbreak junk pending setup
PASS: gdb.base/break.exp: rbreak junk set breakpoint
PASS: gdb.base/break.exp: rbreak junk
Running ../../../gdb/testsuite/gdb.base/a2-run.exp ...
Running ../../../gdb/testsuite/gdb.base/display.exp ...
PASS: gdb.base/display.exp: break  do_loops
PASS: gdb.base/display.exp: get to do_loops
PASS: gdb.base/display.exp: set watch
PASS: gdb.base/display.exp: break loop end
PASS: gdb.base/display.exp: inf disp
PASS: gdb.base/display.exp: display i
PASS: gdb.base/display.exp: display j
PASS: gdb.base/display.exp: display &k
PASS: gdb.base/display.exp: display/f f
PASS: gdb.base/display.exp: display/s &sum
PASS: gdb.base/display.exp: first disp
PASS: gdb.base/display.exp: second disp
PASS: gdb.base/display.exp: catch err
PASS: gdb.base/display.exp: disab disp 1
PASS: gdb.base/display.exp: disab disp 2
PASS: gdb.base/display.exp: re-enab
PASS: gdb.base/display.exp: re-enab of enab
PASS: gdb.base/display.exp: undisp
PASS: gdb.base/display.exp: info disp
PASS: gdb.base/display.exp: next hit
PASS: gdb.base/display.exp: undisp all
PASS: gdb.base/display.exp: disab 3
PASS: gdb.base/display.exp: watch off
PASS: gdb.base/display.exp: finish
PASS: gdb.base/display.exp: step
PASS: gdb.base/display.exp: tbreak in do_vars
PASS: gdb.base/display.exp: cont
PASS: gdb.base/display.exp: printf
PASS: gdb.base/display.exp: printf %d
PASS: gdb.base/display.exp: printf "%d
PASS: gdb.base/display.exp: printf "%d%d",i
PASS: gdb.base/display.exp: printf "\\!\a\f\r\t\v\b\n"
PASS: gdb.base/display.exp: re-set term
PASS: gdb.base/display.exp: printf "\w"
PASS: gdb.base/display.exp: printf "%d" j
PASS: gdb.base/display.exp: printf "%p\n", 0
PASS: gdb.base/display.exp: printf "%p\n", 1
PASS: gdb.base/display.exp: print/z j
PASS: gdb.base/display.exp: debug test output 1
PASS: gdb.base/display.exp: debug test output 1a
PASS: gdb.base/display.exp: debug test output 2
PASS: gdb.base/display.exp: debug test output 2a
PASS: gdb.base/display.exp: debug test output 3
PASS: gdb.base/display.exp: x/0 j
PASS: gdb.base/display.exp: print/0 j
PASS: gdb.base/display.exp: ignored s
PASS: gdb.base/display.exp: no i
PASS: gdb.base/display.exp: print/a &sum
PASS: gdb.base/display.exp: print/a main+4
PASS: gdb.base/display.exp: print/a $pc
PASS: gdb.base/display.exp: print/a &&j
Running ../../../gdb/testsuite/gdb.base/multi-forks.exp ...
Running ../../../gdb/testsuite/gdb.base/args.exp ...
Running ../../../gdb/testsuite/gdb.base/sect-cmd.exp ...
Running ../../../gdb/testsuite/gdb.base/gdb1090.exp ...
PASS: gdb.base/gdb1090.exp: up from marker
PASS: gdb.base/gdb1090.exp: print s24
Running ../../../gdb/testsuite/gdb.base/define.exp ...
PASS: gdb.base/define.exp: define user command: nextwhere
PASS: gdb.base/define.exp: use user command: nextwhere
PASS: gdb.base/define.exp: define user command: nextwh
PASS: gdb.base/define.exp: redefine user command aborted: nextwhere
PASS: gdb.base/define.exp: redefine user command: nextwhere
PASS: gdb.base/define.exp: redocumenting builtin command disallowed
PASS: gdb.base/define.exp: document user command: nextwhere
PASS: gdb.base/define.exp: re-document user command: nextwhere
PASS: gdb.base/define.exp: help user command: nextwhere
PASS: gdb.base/define.exp: preserve whitespace in help string
PASS: gdb.base/define.exp: define user command: ifnospace
PASS: gdb.base/define.exp: test ifnospace is parsed correctly
PASS: gdb.base/define.exp: define user command: whilenospace
PASS: gdb.base/define.exp: test whilenospace is parsed correctly
PASS: gdb.base/define.exp: define user command: user-bt
PASS: gdb.base/define.exp: define hook-stop command
PASS: gdb.base/define.exp: use hook-stop command
PASS: gdb.base/define.exp: define hook undefined command aborted: bar
PASS: gdb.base/define.exp: define hook undefined command: bar
PASS: gdb.base/define.exp: define target testsuite
PASS: gdb.base/define.exp: document target testsuite
PASS: gdb.base/define.exp: help target
PASS: gdb.base/define.exp: target testsuite
PASS: gdb.base/define.exp: show user target testsuite
PASS: gdb.base/define.exp: define target hook-testsuite
PASS: gdb.base/define.exp: define target hookpost-testsuite
PASS: gdb.base/define.exp: target testsuite with hooks
PASS: gdb.base/define.exp: set gdb_prompt
PASS: gdb.base/define.exp: reset gdb_prompt
Running ../../../gdb/testsuite/gdb.base/dfp-test.exp ...
Running ../../../gdb/testsuite/gdb.base/fixsection.exp ...
Running ../../../gdb/testsuite/gdb.base/exprs.exp ...
PASS: gdb.base/exprs.exp: print char == (setup)
PASS: gdb.base/exprs.exp: print char == (print v_char == 0)
PASS: gdb.base/exprs.exp: print char == (print v_char == 127)
PASS: gdb.base/exprs.exp: print char != (setup)
PASS: gdb.base/exprs.exp: print char != (print v_char != 0)
PASS: gdb.base/exprs.exp: print char != (print v_char != 127)
PASS: gdb.base/exprs.exp: print char < (setup)
PASS: gdb.base/exprs.exp: print char < (print v_char < 0)
PASS: gdb.base/exprs.exp: print char < (print v_char < 127)
PASS: gdb.base/exprs.exp: print char > (setup)
PASS: gdb.base/exprs.exp: print char > (print v_char > 0)
PASS: gdb.base/exprs.exp: print char > (print v_char > 127)
PASS: gdb.base/exprs.exp: print signed char == (setup)
PASS: gdb.base/exprs.exp: print signed char == (print v_signed_char == 0)
PASS: gdb.base/exprs.exp: print signed char == (print v_signed_char == 127)
PASS: gdb.base/exprs.exp: print signed char != (setup)
PASS: gdb.base/exprs.exp: print signed char != (print v_signed_char != 0)
PASS: gdb.base/exprs.exp: print signed char != (print v_signed_char != 127)
PASS: gdb.base/exprs.exp: print signed char < (setup)
PASS: gdb.base/exprs.exp: print signed char < (print v_signed_char < 0)
PASS: gdb.base/exprs.exp: print signed char < (print v_signed_char < 127)
PASS: gdb.base/exprs.exp: print signed char > (setup)
PASS: gdb.base/exprs.exp: print signed char > (print v_signed_char > 0)
PASS: gdb.base/exprs.exp: print signed char > (print v_signed_char > 127)
PASS: gdb.base/exprs.exp: print signed char == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed char == (minus) (print v_signed_char == 0)
PASS: gdb.base/exprs.exp: print signed char == (minus) (print v_signed_char == -1)
PASS: gdb.base/exprs.exp: print signed char != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed char != (minus) (print v_signed_char != 0)
PASS: gdb.base/exprs.exp: print signed char != (minus) (print v_signed_char != -1)
PASS: gdb.base/exprs.exp: print signed char < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed char < (minus) (print v_signed_char < 0)
PASS: gdb.base/exprs.exp: print signed char < (minus) (print v_signed_char < 127)
PASS: gdb.base/exprs.exp: print signed char > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed char > (minus) (print v_signed_char > 0)
PASS: gdb.base/exprs.exp: print signed char > (minus) (print v_signed_char > 127)
PASS: gdb.base/exprs.exp: print unsigned char == (setup)
PASS: gdb.base/exprs.exp: print unsigned char == (print v_unsigned_char == 0)
PASS: gdb.base/exprs.exp: print unsigned char == (print v_unsigned_char == 127)
PASS: gdb.base/exprs.exp: print unsigned char != (setup)
PASS: gdb.base/exprs.exp: print unsigned char != (print v_unsigned_char != 0)
PASS: gdb.base/exprs.exp: print unsigned char != (print v_unsigned_char != 127)
PASS: gdb.base/exprs.exp: print unsigned char < (setup)
PASS: gdb.base/exprs.exp: print unsigned char < (print v_unsigned_char < 0)
PASS: gdb.base/exprs.exp: print unsigned char < (print v_unsigned_char < 127)
PASS: gdb.base/exprs.exp: print unsigned char > (setup)
PASS: gdb.base/exprs.exp: print unsigned char > (print v_unsigned_char > 0)
PASS: gdb.base/exprs.exp: print unsigned char > (print v_unsigned_char > 127)
PASS: gdb.base/exprs.exp: print unsigned char == (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned char == (~0) (print v_unsigned_char == 0)
PASS: gdb.base/exprs.exp: print unsigned char == (~0) (print v_unsigned_char == ~0)
PASS: gdb.base/exprs.exp: print unsigned char == (~0) (print v_unsigned_char == (unsigned char)~0)
PASS: gdb.base/exprs.exp: print unsigned char != (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned char != (~0) (print v_unsigned_char != 0)
PASS: gdb.base/exprs.exp: print unsigned char != (~0) (print v_unsigned_char != (unsigned char)~0)
PASS: gdb.base/exprs.exp: print unsigned char != (~0) (print v_unsigned_char != ~0)
PASS: gdb.base/exprs.exp: print unsigned char < (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned char < (~0) (print v_unsigned_char < 0)
PASS: gdb.base/exprs.exp: print unsigned char < (~0) (print v_unsigned_char < 127)
PASS: gdb.base/exprs.exp: print unsigned char > (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned char > (~0) (print v_unsigned_char > 0)
PASS: gdb.base/exprs.exp: print unsigned char > (~0) (print v_unsigned_char > 127)
PASS: gdb.base/exprs.exp: print signed short == (setup)
PASS: gdb.base/exprs.exp: print signed short == (print v_short == 0)
PASS: gdb.base/exprs.exp: print signed short == (print v_short == 0x7FFF)
PASS: gdb.base/exprs.exp: print signed short != (setup)
PASS: gdb.base/exprs.exp: print signed short != (print v_short != 0)
PASS: gdb.base/exprs.exp: print signed short != (print v_short != 0x7FFF)
PASS: gdb.base/exprs.exp: print signed short < (setup)
PASS: gdb.base/exprs.exp: print signed short < (print v_short < 0)
PASS: gdb.base/exprs.exp: print signed short < (print v_short < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed short > (setup)
PASS: gdb.base/exprs.exp: print signed short > (print v_short > 0)
PASS: gdb.base/exprs.exp: print signed short > (print v_short > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed short == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed short == (minus) (print v_short == 0)
PASS: gdb.base/exprs.exp: print signed short == (minus) (print v_short == -1)
PASS: gdb.base/exprs.exp: print signed short != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed short != (minus) (print v_short != 0)
PASS: gdb.base/exprs.exp: print signed short != (minus) (print v_short != -1)
PASS: gdb.base/exprs.exp: print signed short < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed short < (minus) (print v_short < 0)
PASS: gdb.base/exprs.exp: print signed short < (minus) (print v_short < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed short > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed short > (minus) (print v_short > 0)
PASS: gdb.base/exprs.exp: print signed short > (minus) (print v_short > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed short == (setup)
PASS: gdb.base/exprs.exp: print signed signed short == (print v_signed_short == 0)
PASS: gdb.base/exprs.exp: print signed signed short == (print v_signed_short == 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed short != (setup)
PASS: gdb.base/exprs.exp: print signed signed short != (print v_signed_short != 0)
PASS: gdb.base/exprs.exp: print signed signed short != (print v_signed_short != 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed short < (setup)
PASS: gdb.base/exprs.exp: print signed signed short < (print v_signed_short < 0)
PASS: gdb.base/exprs.exp: print signed signed short < (print v_signed_short < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed short > (setup)
PASS: gdb.base/exprs.exp: print signed signed short > (print v_signed_short > 0)
PASS: gdb.base/exprs.exp: print signed signed short > (print v_signed_short > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed short == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed short == (minus) (print v_signed_short == 0)
PASS: gdb.base/exprs.exp: print signed signed short == (minus) (print v_signed_short == -1)
PASS: gdb.base/exprs.exp: print signed signed short != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed short != (minus) (print v_signed_short != 0)
PASS: gdb.base/exprs.exp: print signed signed short != (minus) (print v_signed_short != -1)
PASS: gdb.base/exprs.exp: print signed signed short < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed short < (minus) (print v_signed_short < 0)
PASS: gdb.base/exprs.exp: print signed signed short < (minus) (print v_signed_short < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed short > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed short > (minus) (print v_signed_short > 0)
PASS: gdb.base/exprs.exp: print signed signed short > (minus) (print v_signed_short > 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned short == (setup)
PASS: gdb.base/exprs.exp: print unsigned short == (print v_unsigned_short == 0)
PASS: gdb.base/exprs.exp: print unsigned short == (print v_unsigned_short == 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned short != (setup)
PASS: gdb.base/exprs.exp: print unsigned short != (print v_unsigned_short != 0)
PASS: gdb.base/exprs.exp: print unsigned short != (print v_unsigned_short != 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned short < (setup)
PASS: gdb.base/exprs.exp: print unsigned short < (print v_unsigned_short < 0)
PASS: gdb.base/exprs.exp: print unsigned short < (print v_unsigned_short < 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned short > (setup)
PASS: gdb.base/exprs.exp: print unsigned short > (print v_unsigned_short > 0)
PASS: gdb.base/exprs.exp: print unsigned short > (print v_unsigned_short > 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned short == (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned short == (~0) (print v_unsigned_short == 0)
PASS: gdb.base/exprs.exp: print unsigned short == (~0) (print sizeof (v_unsigned_short) < sizeof (~0) && v_unsigned_short == ~0)
PASS: gdb.base/exprs.exp: print unsigned short == (~0) (print v_unsigned_short == (unsigned short)~0)
PASS: gdb.base/exprs.exp: print unsigned short != (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned short != (~0) (print v_unsigned_short != 0)
PASS: gdb.base/exprs.exp: print unsigned short != (~0) (print v_unsigned_short != (unsigned short)~0)
PASS: gdb.base/exprs.exp: print unsigned short < (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned short < (~0) (print v_unsigned_short < 0)
PASS: gdb.base/exprs.exp: print unsigned short < (~0) (print v_unsigned_short < 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned short > (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned short > (~0) (print v_unsigned_short > 0)
PASS: gdb.base/exprs.exp: print unsigned short > (~0) (print v_unsigned_short > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed int == (setup)
PASS: gdb.base/exprs.exp: print signed int == (print v_int == 0)
PASS: gdb.base/exprs.exp: print signed int == (print v_int == 0x7FFF)
PASS: gdb.base/exprs.exp: print signed int != (setup)
PASS: gdb.base/exprs.exp: print signed int != (print v_int != 0)
PASS: gdb.base/exprs.exp: print signed int != (print v_int != 0x7FFF)
PASS: gdb.base/exprs.exp: print signed int < (setup)
PASS: gdb.base/exprs.exp: print signed int < (print v_int < 0)
PASS: gdb.base/exprs.exp: print signed int < (print v_int < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed int > (setup)
PASS: gdb.base/exprs.exp: print signed int > (print v_int > 0)
PASS: gdb.base/exprs.exp: print signed int > (print v_int > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed int == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed int == (minus) (print v_int == 0)
PASS: gdb.base/exprs.exp: print signed int == (minus) (print v_int == -1)
PASS: gdb.base/exprs.exp: print signed int != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed int != (minus) (print v_int != 0)
PASS: gdb.base/exprs.exp: print signed int != (minus) (print v_int != -1)
PASS: gdb.base/exprs.exp: print signed int < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed int < (minus) (print v_int < 0)
PASS: gdb.base/exprs.exp: print signed int < (minus) (print v_int < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed int > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed int > (minus) (print v_int > 0)
PASS: gdb.base/exprs.exp: print signed int > (minus) (print v_int > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed int == (setup)
PASS: gdb.base/exprs.exp: print signed signed int == (print v_signed_int == 0)
PASS: gdb.base/exprs.exp: print signed signed int == (print v_signed_int == 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed int != (setup)
PASS: gdb.base/exprs.exp: print signed signed int != (print v_signed_int != 0)
PASS: gdb.base/exprs.exp: print signed signed int != (print v_signed_int != 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed int < (setup)
PASS: gdb.base/exprs.exp: print signed signed int < (print v_signed_int < 0)
PASS: gdb.base/exprs.exp: print signed signed int < (print v_signed_int < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed int > (setup)
PASS: gdb.base/exprs.exp: print signed signed int > (print v_signed_int > 0)
PASS: gdb.base/exprs.exp: print signed signed int > (print v_signed_int > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed int == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed int == (minus) (print v_signed_int == 0)
PASS: gdb.base/exprs.exp: print signed signed int == (minus) (print v_signed_int == -1)
PASS: gdb.base/exprs.exp: print signed signed int != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed int != (minus) (print v_signed_int != 0)
PASS: gdb.base/exprs.exp: print signed signed int != (minus) (print v_signed_int != -1)
PASS: gdb.base/exprs.exp: print signed signed int < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed int < (minus) (print v_signed_int < 0)
PASS: gdb.base/exprs.exp: print signed signed int < (minus) (print v_signed_int < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed int > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed int > (minus) (print v_signed_int > 0)
PASS: gdb.base/exprs.exp: print signed signed int > (minus) (print v_signed_int > 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned int == (setup)
PASS: gdb.base/exprs.exp: print unsigned int == (print v_unsigned_int == 0)
PASS: gdb.base/exprs.exp: print unsigned int == (print v_unsigned_int == 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned int != (setup)
PASS: gdb.base/exprs.exp: print unsigned int != (print v_unsigned_int != 0)
PASS: gdb.base/exprs.exp: print unsigned int != (print v_unsigned_int != 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned int < (setup)
PASS: gdb.base/exprs.exp: print unsigned int < (print v_unsigned_int < 0)
PASS: gdb.base/exprs.exp: print unsigned int < (print v_unsigned_int < 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned int > (setup)
PASS: gdb.base/exprs.exp: print unsigned int > (print v_unsigned_int > 0)
PASS: gdb.base/exprs.exp: print unsigned int > (print v_unsigned_int > 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned int == (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned int == (~0) (print v_unsigned_int == 0)
PASS: gdb.base/exprs.exp: print unsigned int == (~0) (print v_unsigned_int == ~0)
PASS: gdb.base/exprs.exp: print unsigned int == (~0) (print v_unsigned_int == (unsigned int)~0)
PASS: gdb.base/exprs.exp: print unsigned int != (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned int != (~0) (print v_unsigned_int != 0)
PASS: gdb.base/exprs.exp: print unsigned int != (~0) (print v_unsigned_int != (unsigned int)~0)
PASS: gdb.base/exprs.exp: print unsigned int < (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned int < (~0) (print v_unsigned_int < 0)
PASS: gdb.base/exprs.exp: print unsigned int < (~0) (print v_unsigned_int < 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned int > (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned int > (~0) (print v_unsigned_int > 0)
PASS: gdb.base/exprs.exp: print unsigned int > (~0) (print v_unsigned_int > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed long == (setup)
PASS: gdb.base/exprs.exp: print signed long == (print v_long == 0)
PASS: gdb.base/exprs.exp: print signed long == (print v_long == 0x7FFF)
PASS: gdb.base/exprs.exp: print signed long != (setup)
PASS: gdb.base/exprs.exp: print signed long != (print v_long != 0)
PASS: gdb.base/exprs.exp: print signed long != (print v_long != 0x7FFF)
PASS: gdb.base/exprs.exp: print signed long < (setup)
PASS: gdb.base/exprs.exp: print signed long < (print v_long < 0)
PASS: gdb.base/exprs.exp: print signed long < (print v_long < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed long > (setup)
PASS: gdb.base/exprs.exp: print signed long > (print v_long > 0)
PASS: gdb.base/exprs.exp: print signed long > (print v_long > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed long == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed long == (minus) (print v_long == 0)
PASS: gdb.base/exprs.exp: print signed long == (minus) (print v_long == -1)
PASS: gdb.base/exprs.exp: print signed long != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed long != (minus) (print v_long != 0)
PASS: gdb.base/exprs.exp: print signed long != (minus) (print v_long != -1)
PASS: gdb.base/exprs.exp: print signed long < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed long < (minus) (print v_long < 0)
PASS: gdb.base/exprs.exp: print signed long < (minus) (print v_long < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed long > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed long > (minus) (print v_long > 0)
PASS: gdb.base/exprs.exp: print signed long > (minus) (print v_long > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed long == (setup)
PASS: gdb.base/exprs.exp: print signed signed long == (print v_signed_long == 0)
PASS: gdb.base/exprs.exp: print signed signed long == (print v_signed_long == 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed long != (setup)
PASS: gdb.base/exprs.exp: print signed signed long != (print v_signed_long != 0)
PASS: gdb.base/exprs.exp: print signed signed long != (print v_signed_long != 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed long < (setup)
PASS: gdb.base/exprs.exp: print signed signed long < (print v_signed_long < 0)
PASS: gdb.base/exprs.exp: print signed signed long < (print v_signed_long < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed long > (setup)
PASS: gdb.base/exprs.exp: print signed signed long > (print v_signed_long > 0)
PASS: gdb.base/exprs.exp: print signed signed long > (print v_signed_long > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed long == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed long == (minus) (print v_signed_long == 0)
PASS: gdb.base/exprs.exp: print signed signed long == (minus) (print v_signed_long == -1)
PASS: gdb.base/exprs.exp: print signed signed long != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed long != (minus) (print v_signed_long != 0)
PASS: gdb.base/exprs.exp: print signed signed long != (minus) (print v_signed_long != -1)
PASS: gdb.base/exprs.exp: print signed signed long < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed long < (minus) (print v_signed_long < 0)
PASS: gdb.base/exprs.exp: print signed signed long < (minus) (print v_signed_long < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed long > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed long > (minus) (print v_signed_long > 0)
PASS: gdb.base/exprs.exp: print signed signed long > (minus) (print v_signed_long > 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned long == (setup)
PASS: gdb.base/exprs.exp: print unsigned long == (print v_unsigned_long == 0)
PASS: gdb.base/exprs.exp: print unsigned long == (print v_unsigned_long == 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned long != (setup)
PASS: gdb.base/exprs.exp: print unsigned long != (print v_unsigned_long != 0)
PASS: gdb.base/exprs.exp: print unsigned long != (print v_unsigned_long != 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned long < (setup)
PASS: gdb.base/exprs.exp: print unsigned long < (print v_unsigned_long < 0)
PASS: gdb.base/exprs.exp: print unsigned long < (print v_unsigned_long < 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned long > (setup)
PASS: gdb.base/exprs.exp: print unsigned long > (print v_unsigned_long > 0)
PASS: gdb.base/exprs.exp: print unsigned long > (print v_unsigned_long > 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned long == (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned long == (~0) (print v_unsigned_long == 0)
PASS: gdb.base/exprs.exp: print unsigned long == (~0) (print v_unsigned_long == ~0)
PASS: gdb.base/exprs.exp: print unsigned long == (~0) (print v_unsigned_long == (unsigned long)~0)
PASS: gdb.base/exprs.exp: print unsigned long != (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned long != (~0) (print v_unsigned_long != 0)
PASS: gdb.base/exprs.exp: print unsigned long != (~0) (print v_unsigned_long != (unsigned long)~0)
PASS: gdb.base/exprs.exp: print unsigned long < (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned long < (~0) (print v_unsigned_long < 0)
PASS: gdb.base/exprs.exp: print unsigned long < (~0) (print v_unsigned_long < 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned long > (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned long > (~0) (print v_unsigned_long > 0)
PASS: gdb.base/exprs.exp: print unsigned long > (~0) (print v_unsigned_long > 0x7FFF)
PASS: gdb.base/exprs.exp: print (void*)v_signed_char (setup)
PASS: gdb.base/exprs.exp: print (void*)v_signed_char (print (void*)v_signed_char)
PASS: gdb.base/exprs.exp: print (void*)v_signed_short (setup)
PASS: gdb.base/exprs.exp: print (void*)v_signed_short (print (void*)v_signed_short)
PASS: gdb.base/exprs.exp: print (void*)v_signed_int (setup)
PASS: gdb.base/exprs.exp: print (void*)v_signed_int (print (void*)v_signed_int)
PASS: gdb.base/exprs.exp: print (void*)v_signed_long (setup)
PASS: gdb.base/exprs.exp: print (void*)v_signed_long (print (void*)v_signed_long)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_char (setup)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_char (print (void*)v_unsigned_char)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_short (setup)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_short (print (void*)v_unsigned_short)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_int (setup)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_int (print (void*)v_unsigned_int)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_long (setup)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_long (print (void*)v_unsigned_long)
PASS: gdb.base/exprs.exp: sizeof (long long) > sizeof (long) (true)
PASS: gdb.base/exprs.exp: truncate (void*) 0x00000000ffffffff + 1
PASS: gdb.base/exprs.exp: truncate (void*) 0xffffffff00000000 - 1
PASS: gdb.base/exprs.exp: \$[0-9]* = "xy" (setup)
PASS: gdb.base/exprs.exp: \$[0-9]* = "xyz" (setup)
PASS: gdb.base/exprs.exp: \$[0-9]* = red (setup)
PASS: gdb.base/exprs.exp: set output-radix 8
PASS: gdb.base/exprs.exp: \$[0-9]* = red (setup)
PASS: gdb.base/exprs.exp: \$[0-9]* = 0 (setup)
PASS: gdb.base/exprs.exp: set output-radix 10
Running ../../../gdb/testsuite/gdb.base/hook-stop-frame.exp ...
PASS: gdb.base/hook-stop-frame.exp: breakpoint line number
PASS: gdb.base/hook-stop-frame.exp: define hook-stop command
PASS: gdb.base/hook-stop-frame.exp: hook-stop runs before frame print
Running ../../../gdb/testsuite/gdb.base/included.exp ...
PASS: gdb.base/included.exp: set listsize 1
PASS: gdb.base/included.exp: list main
PASS: gdb.base/included.exp: list integer
PASS: gdb.base/included.exp: ptype integer
PASS: gdb.base/included.exp: info variables integer
Running ../../../gdb/testsuite/gdb.base/opaque.exp ...
PASS: gdb.base/opaque.exp: whatis on opaque struct pointer (statically)
PASS: gdb.base/opaque.exp: ptype on opaque struct pointer (statically)
PASS: gdb.base/opaque.exp: whatis on opaque struct instance (statically)
PASS: gdb.base/opaque.exp: ptype on opaque struct instance (statically)
PASS: gdb.base/opaque.exp: ptype on opaque struct tagname (statically)
PASS: gdb.base/opaque.exp: whatis on opaque struct pointer (dynamically)
PASS: gdb.base/opaque.exp: ptype on opaque struct pointer (dynamically) 1
PASS: gdb.base/opaque.exp: whatis on opaque struct instance (dynamically) 1
PASS: gdb.base/opaque.exp: ptype on opaque struct instance (dynamically) 1
PASS: gdb.base/opaque.exp: ptype on opaque struct tagname (dynamically) 1
PASS: gdb.base/opaque.exp: whatis on opaque struct pointer (dynamically) 1
PASS: gdb.base/opaque.exp: ptype on opaque struct pointer (dynamically) 2
PASS: gdb.base/opaque.exp: whatis on opaque struct instance (dynamically) 2
PASS: gdb.base/opaque.exp: ptype on opaque struct instance (dynamically) 2
PASS: gdb.base/opaque.exp: ptype on opaque struct tagname (dynamically) 2
Running ../../../gdb/testsuite/gdb.base/freebpcmd.exp ...
PASS: gdb.base/freebpcmd.exp: set breakpoint
PASS: gdb.base/freebpcmd.exp: send breakpoint commands
PASS: gdb.base/freebpcmd.exp: run program with breakpoint commands
Running ../../../gdb/testsuite/gdb.base/twice.exp ...
PASS: gdb.base/twice.exp: step
Running ../../../gdb/testsuite/gdb.base/finish.exp ...
PASS: gdb.base/finish.exp: set break on void_func
PASS: gdb.base/finish.exp: continue to void_func
PASS: gdb.base/finish.exp: finish from void_func
PASS: gdb.base/finish.exp: set break on char_func
PASS: gdb.base/finish.exp: continue to char_func
PASS: gdb.base/finish.exp: finish from char_func
PASS: gdb.base/finish.exp: set break on short_func
PASS: gdb.base/finish.exp: continue to short_func
PASS: gdb.base/finish.exp: finish from short_func
PASS: gdb.base/finish.exp: set break on int_func
PASS: gdb.base/finish.exp: continue to int_func
PASS: gdb.base/finish.exp: finish from int_func
PASS: gdb.base/finish.exp: set break on long_func
PASS: gdb.base/finish.exp: continue to long_func
PASS: gdb.base/finish.exp: finish from long_func
PASS: gdb.base/finish.exp: set break on long_long_func
PASS: gdb.base/finish.exp: continue to long_long_func
PASS: gdb.base/finish.exp: finish from long_long_func
PASS: gdb.base/finish.exp: set break on float_func
PASS: gdb.base/finish.exp: continue to float_func
PASS: gdb.base/finish.exp: finish from float_func
PASS: gdb.base/finish.exp: set break on double_func
PASS: gdb.base/finish.exp: continue to double_func
PASS: gdb.base/finish.exp: finish from double_func
PASS: gdb.base/finish.exp: Testing the "fin" abbreviation for "finish"
Running ../../../gdb/testsuite/gdb.base/gdb1821.exp ...
PASS: gdb.base/gdb1821.exp: print /x bar
Running ../../../gdb/testsuite/gdb.base/fileio.exp ...
Running ../../../gdb/testsuite/gdb.base/environ.exp ...
Running ../../../gdb/testsuite/gdb.base/call-ar-st.exp ...
XFAIL: gdb.base/call-ar-st.exp: This target can not call functions (PRMS 2416)
Running ../../../gdb/testsuite/gdb.base/nodebug.exp ...
PASS: gdb.base/nodebug.exp: p top
PASS: gdb.base/nodebug.exp: whatis top
PASS: gdb.base/nodebug.exp: ptype top
PASS: gdb.base/nodebug.exp: p middle
PASS: gdb.base/nodebug.exp: whatis middle
PASS: gdb.base/nodebug.exp: ptype middle
PASS: gdb.base/nodebug.exp: p dataglobal
PASS: gdb.base/nodebug.exp: whatis dataglobal
PASS: gdb.base/nodebug.exp: ptype dataglobal
PASS: gdb.base/nodebug.exp: p datalocal
PASS: gdb.base/nodebug.exp: whatis datalocal
PASS: gdb.base/nodebug.exp: ptype datalocal
PASS: gdb.base/nodebug.exp: p bssglobal
PASS: gdb.base/nodebug.exp: whatis bssglobal
PASS: gdb.base/nodebug.exp: ptype bssglobal
PASS: gdb.base/nodebug.exp: p bsslocal
PASS: gdb.base/nodebug.exp: whatis bsslocal
PASS: gdb.base/nodebug.exp: ptype bsslocal
FAIL: gdb.base/nodebug.exp: backtrace from inner in nodebug.exp
XFAIL: gdb.base/nodebug.exp: p/c array_index("abcdef",2) (PRMS 2416)
FAIL: gdb.base/nodebug.exp: backtrace from middle in nodebug.exp
Running ../../../gdb/testsuite/gdb.base/default.exp ...
PASS: gdb.base/default.exp: add-symbol-file
PASS: gdb.base/default.exp: append
PASS: gdb.base/default.exp: append binary
PASS: gdb.base/default.exp: append memory
PASS: gdb.base/default.exp: append value
PASS: gdb.base/default.exp: append binary memory
PASS: gdb.base/default.exp: append binary value
PASS: gdb.base/default.exp: attach
WARNING: Skipping backtrace and break tests because of GDB stub.
PASS: gdb.base/default.exp: continue
PASS: gdb.base/default.exp: continue "c" abbreviation
PASS: gdb.base/default.exp: call
PASS: gdb.base/default.exp: catch
PASS: gdb.base/default.exp: cd
PASS: gdb.base/default.exp: clear
PASS: gdb.base/default.exp: commands
PASS: gdb.base/default.exp: condition
PASS: gdb.base/default.exp: core-file
PASS: gdb.base/default.exp: delete "d" abbreviation
PASS: gdb.base/default.exp: delete
PASS: gdb.base/default.exp: define
PASS: gdb.base/default.exp: delete breakpoints
PASS: gdb.base/default.exp: delete display prompt
PASS: gdb.base/default.exp: detach
PASS: gdb.base/default.exp: directory prompt
PASS: gdb.base/default.exp: disable "dis" abbreviation
PASS: gdb.base/default.exp: disable "disa" abbreviation
PASS: gdb.base/default.exp: disable
PASS: gdb.base/default.exp: disable breakpoints
PASS: gdb.base/default.exp: disable display
PASS: gdb.base/default.exp: disassemble
PASS: gdb.base/default.exp: display
PASS: gdb.base/default.exp: do
PASS: gdb.base/default.exp: document
PASS: gdb.base/default.exp: down
PASS: gdb.base/default.exp: down-silently
PASS: gdb.base/default.exp: dump
PASS: gdb.base/default.exp: dump binary
PASS: gdb.base/default.exp: dump ihex
PASS: gdb.base/default.exp: dump memory
PASS: gdb.base/default.exp: dump srec
PASS: gdb.base/default.exp: dump tekhex
PASS: gdb.base/default.exp: dump value
PASS: gdb.base/default.exp: dump binary memory
PASS: gdb.base/default.exp: dump binary value
PASS: gdb.base/default.exp: dump ihex memory
PASS: gdb.base/default.exp: dump ihex value
PASS: gdb.base/default.exp: dump srec memory
PASS: gdb.base/default.exp: dump srec value
PASS: gdb.base/default.exp: dump tekhex memory
PASS: gdb.base/default.exp: dump tekhex value
PASS: gdb.base/default.exp: echo
PASS: gdb.base/default.exp: enable breakpoints delete
PASS: gdb.base/default.exp: enable breakpoints once
PASS: gdb.base/default.exp: enable breakpoints
PASS: gdb.base/default.exp: enable delete
PASS: gdb.base/default.exp: enable display
PASS: gdb.base/default.exp: enable once
PASS: gdb.base/default.exp: enable
PASS: gdb.base/default.exp: exec-file
PASS: gdb.base/default.exp: frame "f" abbreviation
PASS: gdb.base/default.exp: frame
PASS: gdb.base/default.exp: fg
PASS: gdb.base/default.exp: file
PASS: gdb.base/default.exp: finish
PASS: gdb.base/default.exp: forward-search
PASS: gdb.base/default.exp: gcore
PASS: gdb.base/default.exp: generate-core-file
PASS: gdb.base/default.exp: help "h" abbreviation
PASS: gdb.base/default.exp: help
PASS: gdb.base/default.exp: handle
PASS: gdb.base/default.exp: info "i" abbreviation
PASS: gdb.base/default.exp: info
PASS: gdb.base/default.exp: ignore
PASS: gdb.base/default.exp: info address
PASS: gdb.base/default.exp: info all-registers
PASS: gdb.base/default.exp: info args
PASS: gdb.base/default.exp: info bogus-gdb-command
PASS: gdb.base/default.exp: info breakpoints
PASS: gdb.base/default.exp: info catch
PASS: gdb.base/default.exp: info copying
PASS: gdb.base/default.exp: info display
PASS: gdb.base/default.exp: info frame "f" abbreviation
PASS: gdb.base/default.exp: info frame
PASS: gdb.base/default.exp: info files
PASS: gdb.base/default.exp: info float
PASS: gdb.base/default.exp: info functions
PASS: gdb.base/default.exp: info locals
PASS: gdb.base/default.exp: info program
PASS: gdb.base/default.exp: info registers
PASS: gdb.base/default.exp: info stack "s" abbreviation
PASS: gdb.base/default.exp: info stack
PASS: gdb.base/default.exp: info set
PASS: gdb.base/default.exp: info symbol
PASS: gdb.base/default.exp: info source
PASS: gdb.base/default.exp: info sources
PASS: gdb.base/default.exp: info target
PASS: gdb.base/default.exp: info terminal
PASS: gdb.base/default.exp: info types
PASS: gdb.base/default.exp: info variables
PASS: gdb.base/default.exp: info vector
PASS: gdb.base/default.exp: info warranty
PASS: gdb.base/default.exp: info watchpoints
PASS: gdb.base/default.exp: inspect
PASS: gdb.base/default.exp: jump
PASS: gdb.base/default.exp: kill
PASS: gdb.base/default.exp: list "l" abbreviation
PASS: gdb.base/default.exp: list
PASS: gdb.base/default.exp: load
PASS: gdb.base/default.exp: next "n" abbreviation
PASS: gdb.base/default.exp: next
PASS: gdb.base/default.exp: nexti "ni" abbreviation
PASS: gdb.base/default.exp: nexti
PASS: gdb.base/default.exp: output
PASS: gdb.base/default.exp: overlay
PASS: gdb.base/default.exp: overlay on
PASS: gdb.base/default.exp: overlay manual #1
PASS: gdb.base/default.exp: overlay auto
PASS: gdb.base/default.exp: overlay off
PASS: gdb.base/default.exp: overlay list
PASS: gdb.base/default.exp: overlay map #1
PASS: gdb.base/default.exp: overlay unmap #1
PASS: gdb.base/default.exp: overlay manual #2
PASS: gdb.base/default.exp: overlay map #2
PASS: gdb.base/default.exp: overlay unmap #2
PASS: gdb.base/default.exp: print "p" abbreviation
PASS: gdb.base/default.exp: print
PASS: gdb.base/default.exp: printf
PASS: gdb.base/default.exp: ptype
PASS: gdb.base/default.exp: pwd
PASS: gdb.base/default.exp: run "r" abbreviation
PASS: gdb.base/default.exp: run
PASS: gdb.base/default.exp: rbreak
PASS: gdb.base/default.exp: restore
PASS: gdb.base/default.exp: return
PASS: gdb.base/default.exp: reverse-search
PASS: gdb.base/default.exp: step "s" abbreviation #1
PASS: gdb.base/default.exp: step #1
PASS: gdb.base/default.exp: search
PASS: gdb.base/default.exp: section
PASS: gdb.base/default.exp: set annotate
PASS: gdb.base/default.exp: set args
PASS: gdb.base/default.exp: set check "c" abbreviation
PASS: gdb.base/default.exp: set check "ch" abbreviation
PASS: gdb.base/default.exp: set check
PASS: gdb.base/default.exp: set check range
PASS: gdb.base/default.exp: set check type
PASS: gdb.base/default.exp: set complaints
PASS: gdb.base/default.exp: set confirm
PASS: gdb.base/default.exp: set environment
PASS: gdb.base/default.exp: set height
PASS: gdb.base/default.exp: set history expansion
PASS: gdb.base/default.exp: set history filename
PASS: gdb.base/default.exp: set history save
PASS: gdb.base/default.exp: set history size
PASS: gdb.base/default.exp: set history
PASS: gdb.base/default.exp: set language
PASS: gdb.base/default.exp: set listsize
PASS: gdb.base/default.exp: set print "p" abbreviation
PASS: gdb.base/default.exp: set print "pr" abbreviation
PASS: gdb.base/default.exp: set print
PASS: gdb.base/default.exp: set print address
PASS: gdb.base/default.exp: set print array
PASS: gdb.base/default.exp: set print asm-demangle
PASS: gdb.base/default.exp: set print demangle
PASS: gdb.base/default.exp: set print elements
PASS: gdb.base/default.exp: set print object
PASS: gdb.base/default.exp: set print pretty
PASS: gdb.base/default.exp: set print sevenbit-strings
PASS: gdb.base/default.exp: set print union
PASS: gdb.base/default.exp: set print vtbl
PASS: gdb.base/default.exp: set radix
PASS: gdb.base/default.exp: set symbol-reloading
PASS: gdb.base/default.exp: set variable
PASS: gdb.base/default.exp: set verbose
PASS: gdb.base/default.exp: set width
PASS: gdb.base/default.exp: set write
PASS: gdb.base/default.exp: set
PASS: gdb.base/default.exp: shell echo Hi dad!
PASS: gdb.base/default.exp: show annotate
PASS: gdb.base/default.exp: show args
PASS: gdb.base/default.exp: show check "c" abbreviation
PASS: gdb.base/default.exp: show check "ch" abbreviation
PASS: gdb.base/default.exp: show check
PASS: gdb.base/default.exp: show check range
PASS: gdb.base/default.exp: show check type
PASS: gdb.base/default.exp: show commands
PASS: gdb.base/default.exp: show complaints
PASS: gdb.base/default.exp: show confirm
PASS: gdb.base/default.exp: show convenience
PASS: gdb.base/default.exp: show directories
PASS: gdb.base/default.exp: show editing
PASS: gdb.base/default.exp: show height
PASS: gdb.base/default.exp: show history expansion
PASS: gdb.base/default.exp: show history filename
PASS: gdb.base/default.exp: show history save
PASS: gdb.base/default.exp: show history size
PASS: gdb.base/default.exp: show history
PASS: gdb.base/default.exp: show language
PASS: gdb.base/default.exp: show listsize
PASS: gdb.base/default.exp: show p
PASS: gdb.base/default.exp: show pr
PASS: gdb.base/default.exp: show print
PASS: gdb.base/default.exp: show paths
PASS: gdb.base/default.exp: show print address
PASS: gdb.base/default.exp: show print array
PASS: gdb.base/default.exp: show print asm-demangle
PASS: gdb.base/default.exp: show print demangle
PASS: gdb.base/default.exp: show print elements
PASS: gdb.base/default.exp: show print object
PASS: gdb.base/default.exp: show print pretty
PASS: gdb.base/default.exp: show print sevenbit-strings
PASS: gdb.base/default.exp: show print union
PASS: gdb.base/default.exp: show print vtbl
PASS: gdb.base/default.exp: show prompt
PASS: gdb.base/default.exp: show radix
PASS: gdb.base/default.exp: show symbol-reloading
PASS: gdb.base/default.exp: show user
PASS: gdb.base/default.exp: show values
PASS: gdb.base/default.exp: show verbose
PASS: gdb.base/default.exp: show version
PASS: gdb.base/default.exp: show width
PASS: gdb.base/default.exp: show write
PASS: gdb.base/default.exp: show
PASS: gdb.base/default.exp: stepi "si" abbreviation
PASS: gdb.base/default.exp: stepi
PASS: gdb.base/default.exp: signal
PASS: gdb.base/default.exp: source
PASS: gdb.base/default.exp: step "s" abbreviation #2
PASS: gdb.base/default.exp: step #2
PASS: gdb.base/default.exp: symbol-file
PASS: gdb.base/default.exp: target child
PASS: gdb.base/default.exp: target procfs
PASS: gdb.base/default.exp: target core
PASS: gdb.base/default.exp: target exec
PASS: gdb.base/default.exp: target remote
PASS: gdb.base/default.exp: target
PASS: gdb.base/default.exp: tbreak
PASS: gdb.base/default.exp: tty
PASS: gdb.base/default.exp: until "u" abbreviation
PASS: gdb.base/default.exp: until
PASS: gdb.base/default.exp: undisplay prompt
PASS: gdb.base/default.exp: unset environmentprompt
PASS: gdb.base/default.exp: unset
PASS: gdb.base/default.exp: up-silently
PASS: gdb.base/default.exp: watch
PASS: gdb.base/default.exp: whatis
PASS: gdb.base/default.exp: where
PASS: gdb.base/default.exp: x
Running ../../../gdb/testsuite/gdb.base/gdbvars.exp ...
PASS: gdb.base/gdbvars.exp: Set value-history[1] using $1
PASS: gdb.base/gdbvars.exp: Set value-history[2] using $2
PASS: gdb.base/gdbvars.exp: Set value-history[3] using $3
PASS: gdb.base/gdbvars.exp: Print value-history[MAX-1] using inplicit index $$
PASS: gdb.base/gdbvars.exp: Print value-history[MAX-1] again using implicit index $$
PASS: gdb.base/gdbvars.exp: Print value-history[MAX] using implicit index $
PASS: gdb.base/gdbvars.exp: Print value-history[MAX-2] using explicit index $$2
PASS: gdb.base/gdbvars.exp: Print value-history[MAX] using explicit index $0
PASS: gdb.base/gdbvars.exp: print 108
PASS: gdb.base/gdbvars.exp: Print value-history[MAX] using explicit index $$0
PASS: gdb.base/gdbvars.exp: Print value-history[1] using explicit index $1
PASS: gdb.base/gdbvars.exp: Print value-history[2] using explicit index $2
PASS: gdb.base/gdbvars.exp: Print value-history[3] using explicit index $3
PASS: gdb.base/gdbvars.exp: Print (value-history[MAX] - 3) using implicit index $
PASS: gdb.base/gdbvars.exp: Use value-history element in arithmetic expression
PASS: gdb.base/gdbvars.exp: Set a new convenience variable
PASS: gdb.base/gdbvars.exp: Print contents of new convenience variable
PASS: gdb.base/gdbvars.exp: Set convenience variable to a new value
PASS: gdb.base/gdbvars.exp: Print new contents of convenience variable
PASS: gdb.base/gdbvars.exp: Set convenience variable $_
PASS: gdb.base/gdbvars.exp: Print contents of convenience variable $_
PASS: gdb.base/gdbvars.exp: Use convenience variable in arithmetic expression
PASS: gdb.base/gdbvars.exp: Use convenience variable assignment in arithmetic expression
PASS: gdb.base/gdbvars.exp: Print contents of uninitialized convenience variable
PASS: gdb.base/gdbvars.exp: Set a new convenience variable to a program variable
PASS: gdb.base/gdbvars.exp: Print contents of new convenience variable of program variable
Running ../../../gdb/testsuite/gdb.base/ending-run.exp ...
PASS: gdb.base/ending-run.exp: bpt at line before routine
PASS: gdb.base/ending-run.exp: b ending-run.c:14, one
PASS: gdb.base/ending-run.exp: b ending-run.c:31
PASS: gdb.base/ending-run.exp: run
PASS: gdb.base/ending-run.exp: clear worked
PASS: gdb.base/ending-run.exp: cleared bp at line before routine
PASS: gdb.base/ending-run.exp: b ending-run.c:1
PASS: gdb.base/ending-run.exp: b ending-run.c:14, two
PASS: gdb.base/ending-run.exp: Cleared 2 by line
PASS: gdb.base/ending-run.exp: b ending-run.c:14
PASS: gdb.base/ending-run.exp: Breakpoint 7 at *ending-run.c:14
PASS: gdb.base/ending-run.exp: Clear 2 by default
PASS: gdb.base/ending-run.exp: all set to continue
PASS: gdb.base/ending-run.exp: cont
PASS: gdb.base/ending-run.exp: step out of main
Running ../../../gdb/testsuite/gdb.base/jump.exp ...
PASS: gdb.base/jump.exp: break before jump to non-call
PASS: gdb.base/jump.exp: jump to non-call
PASS: gdb.base/jump.exp: break before jump to call
PASS: gdb.base/jump.exp: jump to call
PASS: gdb.base/jump.exp: disable breakpoint on call
PASS: gdb.base/jump.exp: jump to call with disabled breakpoint
PASS: gdb.base/jump.exp: jump without argument disallowed
PASS: gdb.base/jump.exp: jump with trailing argument junk
PASS: gdb.base/jump.exp: aborted jump out of current function
PASS: gdb.base/jump.exp: jump out of current function
Running ../../../gdb/testsuite/gdb.base/all-bin.exp ...
PASS: gdb.base/all-bin.exp: continuing after dummy()
PASS: gdb.base/all-bin.exp: print value of v_int+v_char
PASS: gdb.base/all-bin.exp: print value of v_int+v_short
PASS: gdb.base/all-bin.exp: print value of v_int+v_signed_char
PASS: gdb.base/all-bin.exp: print value of v_int+v_unsigned_char
PASS: gdb.base/all-bin.exp: print value of v_int+v_signed_short
PASS: gdb.base/all-bin.exp: print value of v_int+v_unsigned_short
PASS: gdb.base/all-bin.exp: print value of v_int+v_signed_int
PASS: gdb.base/all-bin.exp: print value of v_int+v_unsigned_int
PASS: gdb.base/all-bin.exp: print value of v_int+v_long
PASS: gdb.base/all-bin.exp: print value of v_int+v_signed_long
PASS: gdb.base/all-bin.exp: print value of v_int+v_unsigned_long
PASS: gdb.base/all-bin.exp: print value of v_int+v_float
PASS: gdb.base/all-bin.exp: print value of v_int+v_double
PASS: gdb.base/all-bin.exp: print value of v_int<=v_char
PASS: gdb.base/all-bin.exp: print value of v_int<=v_short
PASS: gdb.base/all-bin.exp: print value of v_int<=v_signed_char
PASS: gdb.base/all-bin.exp: print value of v_int<=v_unsigned_char
PASS: gdb.base/all-bin.exp: print value of v_int<=v_signed_short
PASS: gdb.base/all-bin.exp: print value of v_int<=v_unsigned_short
PASS: gdb.base/all-bin.exp: print value of v_int<=v_signed_int
PASS: gdb.base/all-bin.exp: print value of v_int<=v_unsigned_int
PASS: gdb.base/all-bin.exp: print value of v_int<=v_long
PASS: gdb.base/all-bin.exp: print value of v_int<=v_signed_long
PASS: gdb.base/all-bin.exp: print value of v_int<=v_unsigned_long
PASS: gdb.base/all-bin.exp: print value of v_int<=v_float
PASS: gdb.base/all-bin.exp: print value of v_int<=v_double
PASS: gdb.base/all-bin.exp: set v_char=0
PASS: gdb.base/all-bin.exp: set v_double=0
PASS: gdb.base/all-bin.exp: set v_unsigned_long=0
PASS: gdb.base/all-bin.exp: print value of v_int&&v_char
PASS: gdb.base/all-bin.exp: print value of v_int&&v_short
PASS: gdb.base/all-bin.exp: print value of v_int&&v_signed_char
PASS: gdb.base/all-bin.exp: print value of v_int&&v_unsigned_char
PASS: gdb.base/all-bin.exp: print value of v_int&&v_signed_short
PASS: gdb.base/all-bin.exp: print value of v_int&&v_unsigned_short
PASS: gdb.base/all-bin.exp: print value of v_int&&v_signed_int
PASS: gdb.base/all-bin.exp: print value of v_int&&v_unsigned_int
PASS: gdb.base/all-bin.exp: print value of v_int&&v_long
PASS: gdb.base/all-bin.exp: print value of v_int&&v_signed_long
PASS: gdb.base/all-bin.exp: print value of v_int&&v_unsigned_long
PASS: gdb.base/all-bin.exp: print value of v_int&&v_float
PASS: gdb.base/all-bin.exp: print value of v_int&&v_double
Running ../../../gdb/testsuite/gdb.base/watch-vfork.exp ...
gdb compile failed, /work1/friss/tools/gdb/k1_build/gdb/testsuite/gdb.base/watch-vfork0.o: In function `main':
catvaras-dasa.lin.mbt.kalray.eu.(none):/work1/friss/tools/gdb/k1_build/gdb/testsuite/../../../gdb/testsuite/gdb.base/watch-vfork.c:27: undefined reference to `vfork'
UNTESTED: gdb.base/watch-vfork.exp: watch-vfork.exp
UNTESTED: gdb.base/watch-vfork.exp: watch-vfork.exp
Running ../../../gdb/testsuite/gdb.base/scope.exp ...
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_ro
UNSUPPORTED: gdb.base/scope.exp: print 'scope0.c'::filelocal_bss before run
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal before run
PASS: gdb.base/scope.exp: next over init0() in main
PASS: gdb.base/scope.exp: print filelocal
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal at main
PASS: gdb.base/scope.exp: print filelocal_bss
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_bss in test_at_main
PASS: gdb.base/scope.exp: print filelocal_ro in test_at_main
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_ro
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal_bss
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal_ro
PASS: gdb.base/scope.exp: print foo::funclocal
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal
PASS: gdb.base/scope.exp: print foo::funclocal_ro
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal_ro
PASS: gdb.base/scope.exp: print bar::funclocal
PASS: gdb.base/scope.exp: print 'scope1.c'::bar::funclocal
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal at foo
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_bss in test_at_foo
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_ro
PASS: gdb.base/scope.exp: print filelocal at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal at foo
PASS: gdb.base/scope.exp: print filelocal_bss at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal_bss at foo
PASS: gdb.base/scope.exp: print filelocal_ro at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal_ro at foo
PASS: gdb.base/scope.exp: print funclocal at foo
PASS: gdb.base/scope.exp: print foo::funclocal at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal at foo
PASS: gdb.base/scope.exp: print funclocal_bss at foo
PASS: gdb.base/scope.exp: print foo::funclocal_bss at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal_bss at foo
PASS: gdb.base/scope.exp: print funclocal_ro at foo
PASS: gdb.base/scope.exp: print foo::funclocal_ro at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal_ro at foo
PASS: gdb.base/scope.exp: print bar::funclocal at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::bar::funclocal at foo
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal at bar
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_bss in test_at_bar
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_ro at bar
PASS: gdb.base/scope.exp: print filelocal at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal at bar
PASS: gdb.base/scope.exp: print filelocal_bss at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal_bss at bar
PASS: gdb.base/scope.exp: print filelocal_ro in test_at_bar
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal_ro at bar
PASS: gdb.base/scope.exp: print foo::funclocal at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal at bar
PASS: gdb.base/scope.exp: print foo::funclocal_bss at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal_bss at bar
PASS: gdb.base/scope.exp: print foo::funclocal_ro at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal_ro at bar
PASS: gdb.base/scope.exp: print funclocal at bar
PASS: gdb.base/scope.exp: print bar::funclocal at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::bar::funclocal at bar
PASS: gdb.base/scope.exp: print funclocal_bss at bar
PASS: gdb.base/scope.exp: print bar::funclocal_bss at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::bar::funclocal_bss at bar
PASS: gdb.base/scope.exp: continue to marker2
PASS: gdb.base/scope.exp: up from marker2 in scopes.exp
PASS: gdb.base/scope.exp: print localval, outer scope
PASS: gdb.base/scope.exp: print localval1, outer scope
PASS: gdb.base/scope.exp: print localval2, outer scope
PASS: gdb.base/scope.exp: print localval3, outer scope
PASS: gdb.base/scope.exp: continue to marker3 in scope.exp
PASS: gdb.base/scope.exp: up from marker3 in scope.exp
PASS: gdb.base/scope.exp: print localval, first nested scope
PASS: gdb.base/scope.exp: print localval1, first nested scope
PASS: gdb.base/scope.exp: print localval2, first nested scope
PASS: gdb.base/scope.exp: print localval3, first nested scope
PASS: gdb.base/scope.exp: continue to marker4 in scope.exp
PASS: gdb.base/scope.exp: up from marker4 in scope.exp
PASS: gdb.base/scope.exp: print localval, innermost scope
PASS: gdb.base/scope.exp: print localval1, innermost scope
PASS: gdb.base/scope.exp: print localval2, innermost scope
PASS: gdb.base/scope.exp: print localval3, innermost scope
PASS: gdb.base/scope.exp: continue to marker1
PASS: gdb.base/scope.exp: up from marker1 in scope.exp
PASS: gdb.base/scope.exp: 100 auto variables correctly initialized
PASS: gdb.base/scope.exp: args in correct order
Running ../../../gdb/testsuite/gdb.base/arithmet.exp ...
PASS: gdb.base/arithmet.exp: set variable x=14
PASS: gdb.base/arithmet.exp: set variable y=2
PASS: gdb.base/arithmet.exp: set variable z=2
PASS: gdb.base/arithmet.exp: set variable w=3
PASS: gdb.base/arithmet.exp: print x
PASS: gdb.base/arithmet.exp: print y
PASS: gdb.base/arithmet.exp: print z
PASS: gdb.base/arithmet.exp: print w
PASS: gdb.base/arithmet.exp: print x+y
PASS: gdb.base/arithmet.exp: print x-y
PASS: gdb.base/arithmet.exp: print x*y
PASS: gdb.base/arithmet.exp: print x/y
PASS: gdb.base/arithmet.exp: print x%y
PASS: gdb.base/arithmet.exp: print x+y+z
PASS: gdb.base/arithmet.exp: print x-y-z
PASS: gdb.base/arithmet.exp: print x*y*z
PASS: gdb.base/arithmet.exp: print x/y/z
PASS: gdb.base/arithmet.exp: print x%y%z
PASS: gdb.base/arithmet.exp: set variable x=10
PASS: gdb.base/arithmet.exp: set variable y=4
PASS: gdb.base/arithmet.exp: print x+y-z
PASS: gdb.base/arithmet.exp: print x+y*z
PASS: gdb.base/arithmet.exp: print x+y%w
PASS: gdb.base/arithmet.exp: print x+y/w
PASS: gdb.base/arithmet.exp: print x-y*z
PASS: gdb.base/arithmet.exp: print x-y%z
PASS: gdb.base/arithmet.exp: print x-y/z
PASS: gdb.base/arithmet.exp: print x*y/z
PASS: gdb.base/arithmet.exp: print x*y%w
PASS: gdb.base/arithmet.exp: print x/y%w
PASS: gdb.base/arithmet.exp: print x-(y+w)
PASS: gdb.base/arithmet.exp: print x/(y*w)
PASS: gdb.base/arithmet.exp: print x-(y/w)
PASS: gdb.base/arithmet.exp: print (x+y)*w
Running ../../../gdb/testsuite/gdb.base/hashline2.exp ...
PASS: gdb.base/hashline2.exp: set breakpoint (PRMS 2360)
Running ../../../gdb/testsuite/gdb.base/watchpoint-hw-hit-once.exp ...
Running ../../../gdb/testsuite/gdb.base/assign.exp ...
PASS: gdb.base/assign.exp: continuing after dummy()
PASS: gdb.base/assign.exp: v_int=57
PASS: gdb.base/assign.exp: set v_int to 6
PASS: gdb.base/assign.exp: v_int+=57
PASS: gdb.base/assign.exp: set v_int to 6 (2)
PASS: gdb.base/assign.exp: v_int-=57
PASS: gdb.base/assign.exp: set v_int to 6 (3)
PASS: gdb.base/assign.exp: v_int*=5
PASS: gdb.base/assign.exp: set v_int to 6 (4)
PASS: gdb.base/assign.exp: v_int/=4
PASS: gdb.base/assign.exp: set v_int to 6 (5)
PASS: gdb.base/assign.exp: v_int%=4
PASS: gdb.base/assign.exp: set v_int to 6 (6)
PASS: gdb.base/assign.exp: v_int+=char
PASS: gdb.base/assign.exp: set v_int to 6 (7)
PASS: gdb.base/assign.exp: v_int+=signed_char
PASS: gdb.base/assign.exp: set v_int to 6 (8)
PASS: gdb.base/assign.exp: v_int+=unsigned_char
PASS: gdb.base/assign.exp: set v_int to 6 (9)
PASS: gdb.base/assign.exp: v_int+=short
PASS: gdb.base/assign.exp: set v_int to 6 (10)
PASS: gdb.base/assign.exp: v_int+=signed_short
PASS: gdb.base/assign.exp: set v_int to 6 (11)
PASS: gdb.base/assign.exp: v_int=+unsigned_short
PASS: gdb.base/assign.exp: set v_int to 6 (12)
PASS: gdb.base/assign.exp: v_int+=signed_int
PASS: gdb.base/assign.exp: set v_int to 6 (13)
PASS: gdb.base/assign.exp: v_int+=unsigned_int
PASS: gdb.base/assign.exp: set v_int to 6 (14)
PASS: gdb.base/assign.exp: v_int+=long
PASS: gdb.base/assign.exp: set v_int to 6 (15)
PASS: gdb.base/assign.exp: v_int+=signed_long
PASS: gdb.base/assign.exp: set v_int to 6 (16)
PASS: gdb.base/assign.exp: v_int+=unsigned_long
PASS: gdb.base/assign.exp: set v_int to 6 (17)
PASS: gdb.base/assign.exp: v_int+=v_float
PASS: gdb.base/assign.exp: set v_int to 6 (18)
PASS: gdb.base/assign.exp: v_int+=double
Running ../../../gdb/testsuite/gdb.base/annota1.exp ...
Running ../../../gdb/testsuite/gdb.base/overlays.exp ...
Running ../../../gdb/testsuite/gdb.base/watch_thread_num.exp ...
UNSUPPORTED: gdb.base/watch_thread_num.exp: Couldn't compile ../../../gdb/testsuite/gdb.base/watch_thread_num.c: unrecognized error
Running ../../../gdb/testsuite/gdb.base/psymtab.exp ...
Running ../../../gdb/testsuite/gdb.base/symbol-without-target_section.exp ...
PASS: gdb.base/symbol-without-target_section.exp: add-symbol-file
PASS: gdb.base/symbol-without-target_section.exp: list main
PASS: gdb.base/symbol-without-target_section.exp: print symbol_without_target_section
Running ../../../gdb/testsuite/gdb.base/set-lang-auto.exp ...
PASS: gdb.base/set-lang-auto.exp: show lang after loading binary
PASS: gdb.base/set-lang-auto.exp: forcing the language to ada
PASS: gdb.base/set-lang-auto.exp: show lang after switching language to ada
PASS: gdb.base/set-lang-auto.exp: switching the language back to auto
PASS: gdb.base/set-lang-auto.exp: show lang after having switched back to auto
Running ../../../gdb/testsuite/gdb.base/step-break.exp ...
PASS: gdb.base/step-break.exp: breakpoint line number
PASS: gdb.base/step-break.exp: run until breakpoint set at a line number
FAIL: gdb.base/step-break.exp: next 2 (1)
PASS: gdb.base/step-break.exp: next 2 (2)
FAIL: gdb.base/step-break.exp: next 2 (3)
PASS: gdb.base/step-break.exp: next 2 (4)
FAIL: gdb.base/step-break.exp: next 2 (5)
PASS: gdb.base/step-break.exp: next 2 (6)
Running ../../../gdb/testsuite/gdb.base/return.exp ...
PASS: gdb.base/return.exp: simple return
PASS: gdb.base/return.exp: break func2
PASS: gdb.base/return.exp: break func3
PASS: gdb.base/return.exp: continue to return of -5
PASS: gdb.base/return.exp: next over call to func2
PASS: gdb.base/return.exp: correct value returned (integer test)
PASS: gdb.base/return.exp: continue to return of -5.0
PASS: gdb.base/return.exp: next over call to func3
PASS: gdb.base/return.exp: correct value returned double test (known problem with sparc solaris)
Running ../../../gdb/testsuite/gdb.base/sigrepeat.exp ...
Running ../../../gdb/testsuite/gdb.base/hashline3.exp ...
PASS: gdb.base/hashline3.exp: set breakpoint (PRMS 2360)
Running ../../../gdb/testsuite/gdb.base/recurse.exp ...
PASS: gdb.base/recurse.exp: next over b = 0 in first instance
PASS: gdb.base/recurse.exp: set first instance watchpoint
PASS: gdb.base/recurse.exp: continue to first instance watchpoint, first time
PASS: gdb.base/recurse.exp: continue to recurse (a = 9)
PASS: gdb.base/recurse.exp: continue to recurse (a = 8)
PASS: gdb.base/recurse.exp: continue to recurse (a = 7)
PASS: gdb.base/recurse.exp: continue to recurse (a = 6)
PASS: gdb.base/recurse.exp: continue to recurse (a = 5)
PASS: gdb.base/recurse.exp: next over b = 0 in second instance
PASS: gdb.base/recurse.exp: set second instance watchpoint
PASS: gdb.base/recurse.exp: continue to second instance watchpoint, first time
PASS: gdb.base/recurse.exp: continue to recurse (a = 4)
PASS: gdb.base/recurse.exp: continue to recurse (a = 3)
PASS: gdb.base/recurse.exp: continue to recurse (a = 2)
PASS: gdb.base/recurse.exp: continue to recurse (a = 1)
PASS: gdb.base/recurse.exp: continue to second instance watchpoint, second time
PASS: gdb.base/recurse.exp: second instance watchpoint deleted when leaving scope
PASS: gdb.base/recurse.exp: continue to first instance watchpoint, second time
PASS: gdb.base/recurse.exp: first instance watchpoint deleted when leaving scope
Running ../../../gdb/testsuite/gdb.base/langs.exp ...
PASS: gdb.base/langs.exp: break on nonexistent function in langs.exp
PASS: gdb.base/langs.exp: show language at csub in langs.exp
FAIL: gdb.base/langs.exp: backtrace in langs.exp
PASS: gdb.base/langs.exp: up to foo in langs.exp
PASS: gdb.base/langs.exp: show language at foo in langs.exp
PASS: gdb.base/langs.exp: up to cppsub_ in langs.exp
PASS: gdb.base/langs.exp: show language at cppsub_ in langs.exp
PASS: gdb.base/langs.exp: up to fsub in langs.exp
PASS: gdb.base/langs.exp: show language at fsub in langs.exp
PASS: gdb.base/langs.exp: up to langs0__2do in langs.exp
PASS: gdb.base/langs.exp: show language at langs0__2do in langs.exp
FAIL: gdb.base/langs.exp: up to main in langs.exp
PASS: gdb.base/langs.exp: show language at main in langs.exp
PASS: gdb.base/langs.exp: continue to exit in langs.exp
PASS: gdb.base/langs.exp: set lang to minimal
PASS: gdb.base/langs.exp: print parameter value
Running ../../../gdb/testsuite/gdb.base/ptype.exp ...
PASS: gdb.base/ptype.exp: ptype unnamed enumeration member
PASS: gdb.base/ptype.exp: ptype structure
PASS: gdb.base/ptype.exp: ptype v_struct1.v_float_member
PASS: gdb.base/ptype.exp: ptype v_struct1->v_float_member
PASS: gdb.base/ptype.exp: ptype v_t_struct_p.v_float_member
PASS: gdb.base/ptype.exp: ptype v_t_struct_p->v_float_member
PASS: gdb.base/ptype.exp: ptype linked list structure
PASS: gdb.base/ptype.exp: ptype union
PASS: gdb.base/ptype.exp: ptype linked list union
PASS: gdb.base/ptype.exp: ptype unnamed enumeration
PASS: gdb.base/ptype.exp: ptype named enumeration
PASS: gdb.base/ptype.exp: ptype unnamed typedef'd enumeration
PASS: gdb.base/ptype.exp: list main
PASS: gdb.base/ptype.exp: whatis unnamed typedef'd enum (compiler bug in IBM's xlc)
PASS: gdb.base/ptype.exp: printing typedef'd struct
PASS: gdb.base/ptype.exp: printing typedef'd union
PASS: gdb.base/ptype.exp: ptype named typedef'd enumf'd enum
PASS: gdb.base/ptype.exp: ptype misordered enumeration
PASS: gdb.base/ptype.exp: ptype named enumeration member
PASS: gdb.base/ptype.exp: ptype unnamed enumeration member #2
PASS: gdb.base/ptype.exp: ptype short
PASS: gdb.base/ptype.exp: ptype int
PASS: gdb.base/ptype.exp: ptype t_char_array
PASS: gdb.base/ptype.exp: ptype outer structure
PASS: gdb.base/ptype.exp: ptype inner structure
PASS: gdb.base/ptype.exp: ptype inner union
PASS: gdb.base/ptype.exp: ptype nested structure
PASS: gdb.base/ptype.exp: ptype outer int
PASS: gdb.base/ptype.exp: ptype nested structure #2
PASS: gdb.base/ptype.exp: ptype inner int
PASS: gdb.base/ptype.exp: ptype nested union
PASS: gdb.base/ptype.exp: ptype the_highest
PASS: gdb.base/ptype.exp: ptype the_highest
PASS: gdb.base/ptype.exp: ptype func_type
PASS: gdb.base/ptype.exp: ptype old_fptr
PASS: gdb.base/ptype.exp: ptype new_fptr
PASS: gdb.base/ptype.exp: ptype fptr
PASS: gdb.base/ptype.exp: ptype fptr2
PASS: gdb.base/ptype.exp: ptype xptr
PASS: gdb.base/ptype.exp: ptype ffptr
PASS: gdb.base/ptype.exp: ptype fffptr
PASS: gdb.base/ptype.exp: list intfoo
PASS: gdb.base/ptype.exp: ptype foo typedef after first list of intfoo
PASS: gdb.base/ptype.exp: list charfoo
PASS: gdb.base/ptype.exp: ptype foo typedef after first list of charfoo
PASS: gdb.base/ptype.exp: list intfoo
PASS: gdb.base/ptype.exp: ptype foo typedef after second list of intfoo
PASS: gdb.base/ptype.exp: list charfoo
PASS: gdb.base/ptype.exp: ptype foo typedef after second list of charfoo
XFAIL: gdb.base/ptype.exp: This target can not call functions (PRMS 2416)
Running ../../../gdb/testsuite/gdb.base/sigbpt.exp ...
Running ../../../gdb/testsuite/gdb.base/long_long.exp ...
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (char)" (1)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (short)" (2)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (int)" (4)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (long)" (4)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (long long)" (8)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (void *)" (4)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (double)" (8)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (long double)" (16)
PASS: gdb.base/long_long.exp: continue to breakpoint: Stop here and look
PASS: gdb.base/long_long.exp: hex print p/x
PASS: gdb.base/long_long.exp: decimal print p/x
PASS: gdb.base/long_long.exp: default print val.dec
PASS: gdb.base/long_long.exp: default print val.bin
PASS: gdb.base/long_long.exp: default print val.oct
PASS: gdb.base/long_long.exp: default print hex
PASS: gdb.base/long_long.exp: decimal print p/u
PASS: gdb.base/long_long.exp: binary print
PASS: gdb.base/long_long.exp: octal print
PASS: gdb.base/long_long.exp: print +ve long long
PASS: gdb.base/long_long.exp: decimal print p/d
PASS: gdb.base/long_long.exp: p/d val.oct
PASS: gdb.base/long_long.exp: p/u val.oct
PASS: gdb.base/long_long.exp: p/o val.oct
PASS: gdb.base/long_long.exp: p/t val.oct
PASS: gdb.base/long_long.exp: p/a val.oct
PASS: gdb.base/long_long.exp: p/c val.oct
PASS: gdb.base/long_long.exp: p/f val.oct
PASS: gdb.base/long_long.exp: p/x *(char *)c
PASS: gdb.base/long_long.exp: p/d *(char *)c
PASS: gdb.base/long_long.exp: p/u *(char *)c
PASS: gdb.base/long_long.exp: p/o *(char *)c
PASS: gdb.base/long_long.exp: p/t *(char *)c
PASS: gdb.base/long_long.exp: p/a *(char *)c
PASS: gdb.base/long_long.exp: p/f *(char *)c
PASS: gdb.base/long_long.exp: p/c *(char *)c
PASS: gdb.base/long_long.exp: p/x *(short *)s
PASS: gdb.base/long_long.exp: p/d *(short *)s
PASS: gdb.base/long_long.exp: p/u *(short *)s
PASS: gdb.base/long_long.exp: p/o *(short *)s
PASS: gdb.base/long_long.exp: p/t *(short *)s
PASS: gdb.base/long_long.exp: p/a *(short *)s
PASS: gdb.base/long_long.exp: p/f *(short *)s
PASS: gdb.base/long_long.exp: p/c *(short *)s
PASS: gdb.base/long_long.exp: p/x *(int *)i
PASS: gdb.base/long_long.exp: p/d *(int *)i
PASS: gdb.base/long_long.exp: p/u *(int *)i
PASS: gdb.base/long_long.exp: p/o *(int *)i
PASS: gdb.base/long_long.exp: p/t *(int *)i
PASS: gdb.base/long_long.exp: p/a *(int *)i
PASS: gdb.base/long_long.exp: p/f *(int *)i
PASS: gdb.base/long_long.exp: p/c *(int *)i
PASS: gdb.base/long_long.exp: p/x *(long *)l
PASS: gdb.base/long_long.exp: p/d *(long *)l
PASS: gdb.base/long_long.exp: p/u *(long *)l
PASS: gdb.base/long_long.exp: p/o *(long *)l
PASS: gdb.base/long_long.exp: p/t *(long *)l
PASS: gdb.base/long_long.exp: p/a *(long *)l
PASS: gdb.base/long_long.exp: p/f *(long *)l
PASS: gdb.base/long_long.exp: p/c *(long *)l
PASS: gdb.base/long_long.exp: p/x *(long long *)ll
PASS: gdb.base/long_long.exp: p/d *(long long *)ll
PASS: gdb.base/long_long.exp: p/u *(long long *)ll
PASS: gdb.base/long_long.exp: p/o *(long long *)ll
PASS: gdb.base/long_long.exp: p/t *(long long *)ll
PASS: gdb.base/long_long.exp: p/a *(long long *)ll
PASS: gdb.base/long_long.exp: p/f *(long long *)ll
PASS: gdb.base/long_long.exp: p/c *(long long *)ll
PASS: gdb.base/long_long.exp: set examine size to w
PASS: gdb.base/long_long.exp: x/x w
PASS: gdb.base/long_long.exp: x/d w
PASS: gdb.base/long_long.exp: x/u w
PASS: gdb.base/long_long.exp: x/o w
PASS: gdb.base/long_long.exp: x/t w
PASS: gdb.base/long_long.exp: x/a
PASS: gdb.base/long_long.exp: x/c b
PASS: gdb.base/long_long.exp: x/f &val.oct
PASS: gdb.base/long_long.exp: set examine size to g
PASS: gdb.base/long_long.exp: x/2x g
PASS: gdb.base/long_long.exp: x/2d g
PASS: gdb.base/long_long.exp: x/2u g
PASS: gdb.base/long_long.exp: x/2o g
PASS: gdb.base/long_long.exp: x/2t g
PASS: gdb.base/long_long.exp: x/2a
PASS: gdb.base/long_long.exp: x/2c b
PASS: gdb.base/long_long.exp: x/2f &val.oct
PASS: gdb.base/long_long.exp: x/2bx b
PASS: gdb.base/long_long.exp: x/2bd b
PASS: gdb.base/long_long.exp: x/2bu b
PASS: gdb.base/long_long.exp: x/2bo b
PASS: gdb.base/long_long.exp: x/2bt b
PASS: gdb.base/long_long.exp: x/2ba b
PASS: gdb.base/long_long.exp: x/2bc b
PASS: gdb.base/long_long.exp: x/2bf b
PASS: gdb.base/long_long.exp: x/2hx h
PASS: gdb.base/long_long.exp: x/2hd h
PASS: gdb.base/long_long.exp: x/2hu h
PASS: gdb.base/long_long.exp: x/2ho h
PASS: gdb.base/long_long.exp: x/2ht h
PASS: gdb.base/long_long.exp: x/2ha h
PASS: gdb.base/long_long.exp: x/2hc h
PASS: gdb.base/long_long.exp: x/2hf h
PASS: gdb.base/long_long.exp: x/2wx w
PASS: gdb.base/long_long.exp: x/2wd w
PASS: gdb.base/long_long.exp: x/2wu w
PASS: gdb.base/long_long.exp: x/2wo w
PASS: gdb.base/long_long.exp: x/2wt w
PASS: gdb.base/long_long.exp: x/2wa w
PASS: gdb.base/long_long.exp: x/2wc w
PASS: gdb.base/long_long.exp: x/2wf w
PASS: gdb.base/long_long.exp: x/2gx g
PASS: gdb.base/long_long.exp: x/2gd g
PASS: gdb.base/long_long.exp: x/2gu g
PASS: gdb.base/long_long.exp: x/2go g
PASS: gdb.base/long_long.exp: x/2gt g
PASS: gdb.base/long_long.exp: x/2ga g
PASS: gdb.base/long_long.exp: x/2gc g
PASS: gdb.base/long_long.exp: x/2gf g
Running ../../../gdb/testsuite/gdb.base/hook-stop-continue.exp ...
PASS: gdb.base/hook-stop-continue.exp: breakpoint line number
PASS: gdb.base/hook-stop-continue.exp: print $do_continue = 1
PASS: gdb.base/hook-stop-continue.exp: define hook-stop command
PASS: gdb.base/hook-stop-continue.exp: next triggering hook-stop
PASS: gdb.base/hook-stop-continue.exp: next no hook-stop
Running ../../../gdb/testsuite/gdb.base/watchpoint.exp ...
PASS: gdb.base/watchpoint.exp: set breakpoint at marker1
PASS: gdb.base/watchpoint.exp: set breakpoint at marker2
PASS: gdb.base/watchpoint.exp: info break in watchpoint.exp
PASS: gdb.base/watchpoint.exp: set watchpoint on ival3
PASS: gdb.base/watchpoint.exp: watchpoint found in watchpoint/breakpoint table
PASS: gdb.base/watchpoint.exp: disable watchpoint
PASS: gdb.base/watchpoint.exp: disable watchpoint in test_simple_watchpoint
PASS: gdb.base/watchpoint.exp: run to marker1 in test_simple_watchpoint
PASS: gdb.base/watchpoint.exp: enable watchpoint
PASS: gdb.base/watchpoint.exp: break func1
PASS: gdb.base/watchpoint.exp: set $func1_breakpoint_number = $bpnum
PASS: gdb.base/watchpoint.exp: continue to breakpoint at func1
PASS: gdb.base/watchpoint.exp: watchpoint hit, first time
PASS: gdb.base/watchpoint.exp: Watchpoint hit count is 1
PASS: gdb.base/watchpoint.exp: delete $func1_breakpoint_number
PASS: gdb.base/watchpoint.exp: watchpoint hit, second time
PASS: gdb.base/watchpoint.exp: Watchpoint hit count is 2
PASS: gdb.base/watchpoint.exp: watchpoint hit, third time
PASS: gdb.base/watchpoint.exp: Watchpoint hit count is 3
PASS: gdb.base/watchpoint.exp: watchpoint hit, fourth time
PASS: gdb.base/watchpoint.exp: Watchpoint hit count is 4
PASS: gdb.base/watchpoint.exp: watchpoint hit, fifth time
PASS: gdb.base/watchpoint.exp: Watchpoint hit count is 5
PASS: gdb.base/watchpoint.exp: continue to marker2
PASS: gdb.base/watchpoint.exp: watchpoint disabled
PASS: gdb.base/watchpoint.exp: continue until exit at continue to exit in test_simple_watchpoint
PASS: gdb.base/watchpoint.exp: watchpoints found in watchpoint/breakpoint table
PASS: gdb.base/watchpoint.exp: disable watchpoint in test_disabling_watchpoints
PASS: gdb.base/watchpoint.exp: run to marker1 in test_disabling_watchpoints
PASS: gdb.base/watchpoint.exp: watchpoint enabled
PASS: gdb.base/watchpoint.exp: watchpoint hit in test_disabling_watchpoints, first time
PASS: gdb.base/watchpoint.exp: watchpoint hit in test_disabling_watchpoints, second time
PASS: gdb.base/watchpoint.exp: disable watchpoint #2 in test_disabling_watchpoints
PASS: gdb.base/watchpoint.exp: watchpoint disabled in table
PASS: gdb.base/watchpoint.exp: disabled watchpoint skipped
PASS: gdb.base/watchpoint.exp: continue until exit at continue to exit in test_disabling_watchpoints
PASS: gdb.base/watchpoint.exp: disable fast watches
PASS: gdb.base/watchpoint.exp: show disable fast watches
PASS: gdb.base/watchpoint.exp: set slow conditional watch
PASS: gdb.base/watchpoint.exp: trigger slow conditional watch
PASS: gdb.base/watchpoint.exp: rwatch disallowed when can-set-hw-watchpoints cleared
PASS: gdb.base/watchpoint.exp: watchpoint refused to insert on nonexistent struct member
PASS: gdb.base/watchpoint.exp: watch *global_ptr
PASS: gdb.base/watchpoint.exp: next
PASS: gdb.base/watchpoint.exp: next over ptr init
PASS: gdb.base/watchpoint.exp: next over buffer set
PASS: gdb.base/watchpoint.exp: continue to breakpoint: second x assignment
PASS: gdb.base/watchpoint.exp: watch x
PASS: gdb.base/watchpoint.exp: next after watch x
PASS: gdb.base/watchpoint.exp: watch buf
PASS: gdb.base/watchpoint.exp: watchpoint on buf hit
Running ../../../gdb/testsuite/gdb.base/cursal.exp ...
PASS: gdb.base/cursal.exp: set listsize 1
PASS: gdb.base/cursal.exp: list before run
PASS: gdb.base/cursal.exp: list in main
PASS: gdb.base/cursal.exp: list in func2
PASS: gdb.base/cursal.exp: backtrace
PASS: gdb.base/cursal.exp: list after backtrace
PASS: gdb.base/cursal.exp: set listsize 3
PASS: gdb.base/cursal.exp: list size 3
Running ../../../gdb/testsuite/gdb.base/shlib-call.exp ...
Running ../../../gdb/testsuite/gdb.base/unwindonsignal.exp ...
Running ../../../gdb/testsuite/gdb.base/sigstep.exp ...
Running ../../../gdb/testsuite/gdb.base/signals.exp ...
Running ../../../gdb/testsuite/gdb.base/del.exp ...
PASS: gdb.base/del.exp: Remove all breakpoints (del)
PASS: gdb.base/del.exp: info break after removing break on main
PASS: gdb.base/del.exp: breakpoint insertion (del)
PASS: gdb.base/del.exp: Remove last breakpoint (del)
PASS: gdb.base/del.exp: info break after removing break on main (del)
PASS: gdb.base/del.exp: Remove all breakpoints (d)
PASS: gdb.base/del.exp: info break after removing break on main
PASS: gdb.base/del.exp: breakpoint insertion (d)
PASS: gdb.base/del.exp: Remove last breakpoint (d)
PASS: gdb.base/del.exp: info break after removing break on main (d)
Running ../../../gdb/testsuite/gdb.base/break-always.exp ...
PASS: gdb.base/break-always.exp: set breakpoint always-inserted on
PASS: gdb.base/break-always.exp: confirm breakpoint always-inserted
PASS: gdb.base/break-always.exp: set breakpoint on bar
PASS: gdb.base/break-always.exp: continue to breakpoint: bar
Running ../../../gdb/testsuite/gdb.base/infnan.exp ...
PASS: gdb.base/infnan.exp: print a
PASS: gdb.base/infnan.exp: print b
Running ../../../gdb/testsuite/gdb.base/start.exp ...
UNTESTED: gdb.base/start.exp: start
Running ../../../gdb/testsuite/gdb.base/callfuncs.exp ...
XFAIL: gdb.base/callfuncs.exp: This target can not call functions (PRMS 2416)
Running ../../../gdb/testsuite/gdb.base/condbreak.exp ...
PASS: gdb.base/condbreak.exp: breakpoint function
PASS: gdb.base/condbreak.exp: break marker1 if 1==1
PASS: gdb.base/condbreak.exp: delete 2
PASS: gdb.base/condbreak.exp: break break.c:97 if 1==1
PASS: gdb.base/condbreak.exp: delete 3
PASS: gdb.base/condbreak.exp: break marker1 if (1==1)
PASS: gdb.base/condbreak.exp: break break.c:97 if (1==1)
PASS: gdb.base/condbreak.exp: break marker2 if (a==43)
PASS: gdb.base/condbreak.exp: break marker3 if (multi_line_if_conditional(1,1,1)==0)
PASS: gdb.base/condbreak.exp: break marker4
PASS: gdb.base/condbreak.exp: breakpoint info
PASS: gdb.base/condbreak.exp: rerun to main
PASS: gdb.base/condbreak.exp: run until breakpoint set at a line number
PASS: gdb.base/condbreak.exp: run until breakpoint at marker1
PASS: gdb.base/condbreak.exp: run until breakpoint at marker2
PASS: gdb.base/condbreak.exp: break main if (1==1) thread 999
PASS: gdb.base/condbreak.exp: break main thread 999 if (1==1)
PASS: gdb.base/condbreak.exp: break *main if (1==1) thread 999
PASS: gdb.base/condbreak.exp: break *main thread 999 if (1==1)
PASS: gdb.base/condbreak.exp: break *main if (1==1) task 999
PASS: gdb.base/condbreak.exp: break *main task 999 if (1==1)
PASS: gdb.base/condbreak.exp: break *main if (1==1) t 999
PASS: gdb.base/condbreak.exp: break *main if (1==1) th 999
PASS: gdb.base/condbreak.exp: break *main if (1==1) ta 999
PASS: gdb.base/condbreak.exp: run until breakpoint at marker3
PASS: gdb.base/condbreak.exp: run until breakpoint at marker4
Running ../../../gdb/testsuite/gdb.base/bitfields2.exp ...
PASS: gdb.base/bitfields2.exp: break tester prior to break1
PASS: gdb.base/bitfields2.exp: continuing to tester prior to break1
PASS: gdb.base/bitfields2.exp: continuing to break1 #0
PASS: gdb.base/bitfields2.exp: bitfield uniqueness; flags.s1 = 1
PASS: gdb.base/bitfields2.exp: continuing to break1 #1
PASS: gdb.base/bitfields2.exp: bitfield uniqueness; flags.u1 = 1
PASS: gdb.base/bitfields2.exp: continuing to break1 #2
PASS: gdb.base/bitfields2.exp: bitfield uniqueness; flags.s2 = 1
PASS: gdb.base/bitfields2.exp: continuing to break1 #3
PASS: gdb.base/bitfields2.exp: bitfield uniqueness; flags.u2 = 1
PASS: gdb.base/bitfields2.exp: continuing to break1 #4
PASS: gdb.base/bitfields2.exp: bitfield uniqueness; flags.s3 = 1
PASS: gdb.base/bitfields2.exp: continuing to break1 #5
PASS: gdb.base/bitfields2.exp: bitfield uniqueness; flags.u3 = 1
PASS: gdb.base/bitfields2.exp: break tester prior to break2
PASS: gdb.base/bitfields2.exp: continuing to tester prior to break2
PASS: gdb.base/bitfields2.exp: continuing to break2 #0
PASS: gdb.base/bitfields2.exp: bitfield containment; flags.u1, flags.u3, and flags.s3 to all 1s
PASS: gdb.base/bitfields2.exp: continuing to break2 #1
PASS: gdb.base/bitfields2.exp: bitfield containment; flags.u2, flags.s1, flags.s2 to all 1s
PASS: gdb.base/bitfields2.exp: break tester prior to break3
PASS: gdb.base/bitfields2.exp: continuing to tester prior to break3
PASS: gdb.base/bitfields2.exp: continuing to break3 #0
PASS: gdb.base/bitfields2.exp: maximum unsigned bitfield values
PASS: gdb.base/bitfields2.exp: break tester prior to break4
PASS: gdb.base/bitfields2.exp: continuing to tester prior to break4
PASS: gdb.base/bitfields2.exp: continuing to break4 #0
PASS: gdb.base/bitfields2.exp: maximum signed bitfield values
PASS: gdb.base/bitfields2.exp: continuing to break4 #1
PASS: gdb.base/bitfields2.exp: determining signed-ness of bitfields
PASS: gdb.base/bitfields2.exp: most negative signed bitfield values
PASS: gdb.base/bitfields2.exp: continuing to break4 #2
PASS: gdb.base/bitfields2.exp: signed bitfields containing -1
PASS: gdb.base/bitfields2.exp: break tester prior to break5
PASS: gdb.base/bitfields2.exp: continuing to tester prior to break5
PASS: gdb.base/bitfields2.exp: continuing to break5 #0
PASS: gdb.base/bitfields2.exp: set long long unsigned bitfield
PASS: gdb.base/bitfields2.exp: set long long signed bitfield positive
PASS: gdb.base/bitfields2.exp: long long bitfield values after set
PASS: gdb.base/bitfields2.exp: set long long signed bitfield negative
PASS: gdb.base/bitfields2.exp: long long bitfield values after set negative
Running ../../../gdb/testsuite/gdb.base/echo.exp ...
PASS: gdb.base/echo.exp: Echo test
Running ../../../gdb/testsuite/gdb.base/advance.exp ...
PASS: gdb.base/advance.exp: advance line number
PASS: gdb.base/advance.exp: malformed advance
PASS: gdb.base/advance.exp: advance func
FAIL: gdb.base/advance.exp: advance function not called by current frame
PASS: gdb.base/advance.exp: set breakpoint at call to func3
FAIL: gdb.base/advance.exp: continue to call to func3 in main
FAIL: gdb.base/advance.exp: advance function called as param
FAIL: gdb.base/advance.exp: advance with no argument
Running ../../../gdb/testsuite/gdb.base/step-bt.exp ...
PASS: gdb.base/step-bt.exp: breakpoint at first instruction of hello()
PASS: gdb.base/step-bt.exp: run to hello()
PASS: gdb.base/step-bt.exp: step first instruction
PASS: gdb.base/step-bt.exp: backtrace after first instruction step
PASS: gdb.base/step-bt.exp: step second instruction
PASS: gdb.base/step-bt.exp: backtrace after second instruction step
Running ../../../gdb/testsuite/gdb.base/solib-display.exp ...
Running ../../../gdb/testsuite/gdb.base/hashline1.exp ...
PASS: gdb.base/hashline1.exp: set breakpoint (PRMS 2360)
Running ../../../gdb/testsuite/gdb.base/bitfields.exp ...
PASS: gdb.base/bitfields.exp: print flags
PASS: gdb.base/bitfields.exp: continuing to break1 #1
PASS: gdb.base/bitfields.exp: bitfield uniqueness (s1)
PASS: gdb.base/bitfields.exp: continuing to break1 #2
PASS: gdb.base/bitfields.exp: bitfield uniqueness (u1)
PASS: gdb.base/bitfields.exp: continuing to break1 #3
PASS: gdb.base/bitfields.exp: bitfield uniqueness (s2)
PASS: gdb.base/bitfields.exp: continuing to break1 #4
PASS: gdb.base/bitfields.exp: bitfield uniqueness (u2)
PASS: gdb.base/bitfields.exp: continuing to break1 #5
PASS: gdb.base/bitfields.exp: bitfield uniqueness (s3)
PASS: gdb.base/bitfields.exp: continuing to break1 #6
PASS: gdb.base/bitfields.exp: bitfield uniqueness (u3)
PASS: gdb.base/bitfields.exp: continuing to break1 #7
PASS: gdb.base/bitfields.exp: bitfield uniqueness (s9)
PASS: gdb.base/bitfields.exp: continuing to break1 #8
PASS: gdb.base/bitfields.exp: bitfield uniqueness (u9)
PASS: gdb.base/bitfields.exp: continuing to break1 #9
PASS: gdb.base/bitfields.exp: bitfield uniqueness (sc)
PASS: gdb.base/bitfields.exp: bitfield containment #1
PASS: gdb.base/bitfields.exp: continuing to break2
PASS: gdb.base/bitfields.exp: bitfield containment #2
PASS: gdb.base/bitfields.exp: unsigned bitfield ranges
PASS: gdb.base/bitfields.exp: signed bitfields, max positive values
PASS: gdb.base/bitfields.exp: continuing to break4 #1
PASS: gdb.base/bitfields.exp: determining signed-ness of bitfields
PASS: gdb.base/bitfields.exp: signed bitfields, max negative values
PASS: gdb.base/bitfields.exp: continuing to break4 #2
PASS: gdb.base/bitfields.exp: signed bitfields with -1
PASS: gdb.base/bitfields.exp: continuing to break5
PASS: gdb.base/bitfields.exp: distinct bitfields in container
PASS: gdb.base/bitfields.exp: print container.one.u3
PASS: gdb.base/bitfields.exp: print container.two.u3
Running ../../../gdb/testsuite/gdb.base/logical.exp ...
PASS: gdb.base/logical.exp: evaluate x; variables x = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x; variables x = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !!x; variables x = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x; variables x = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x; variables x = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !!x; variables x = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x && y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x && !y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x && !y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || !y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x < y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x <= y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x == y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x != y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x >= y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x > y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !x && y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && !y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !x && !y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || !y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x < y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x <= y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x == y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x != y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x >= y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x > y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x && y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x && !y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x && !y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || !y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || !y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x < y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x <= y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x == y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x != y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x >= y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x > y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x && y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x && !y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !x && !y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || !y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x < y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x <= y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x == y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x != y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x >= y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x > y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 0, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 0, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 0, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 0, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 0, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 0, y = 0, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 0, y = 0, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 0, y = 0, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 0, y = 0, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 0, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 0, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 0, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 0, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 0, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 0, y = 1, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 0, y = 1, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 0, y = 1, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 0, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 0, y = 1, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 0, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 0, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 0, y = 1, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 0, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 0, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 0, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 0, y = 1, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 0, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 0, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 1, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 1, y = 0, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 1, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 1, y = 0, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 1, y = 0, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 1, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 1, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 1, y = 0, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 1, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 1, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 1, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 1, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 1, y = 0, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 1, y = 0, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 1, y = 1, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 1, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 1, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 1, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 1, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 1, y = 1, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 1, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 1, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 1, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 1, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 1, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 1, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 1, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 1, y = 1, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x > y || w == z; variables x = 1, y = 2, w = 3, z = 3; expecting 1
PASS: gdb.base/logical.exp: evaluate x >= y && w != z; variables x = 1, y = 2, w = 3, z = 3; expecting 0
PASS: gdb.base/logical.exp: evaluate ! x > y || w + z; variables x = 1, y = 2, w = 3, z = 3; expecting 1
PASS: gdb.base/logical.exp: evaluate x > y || w == z; variables x = 1, y = 2, w = 1, z = 3; expecting 0
PASS: gdb.base/logical.exp: evaluate x >= y && w != z; variables x = 1, y = 2, w = 1, z = 3; expecting 0
PASS: gdb.base/logical.exp: evaluate ! x > y || w + z; variables x = 1, y = 2, w = 1, z = 3; expecting 1
PASS: gdb.base/logical.exp: evaluate x > y || w == z; variables x = 2, y = 2, w = 2, z = 3; expecting 0
PASS: gdb.base/logical.exp: evaluate x >= y && w != z; variables x = 2, y = 2, w = 2, z = 3; expecting 1
PASS: gdb.base/logical.exp: evaluate ! x > y || w + z; variables x = 2, y = 2, w = 2, z = 3; expecting 1
Running ../../../gdb/testsuite/gdb.base/stack-checking.exp ...
PASS: gdb.base/stack-checking.exp: continue to breakpoint: breakpoint for small frame
PASS: gdb.base/stack-checking.exp: bt
PASS: gdb.base/stack-checking.exp: continue to breakpoint: breakpoint for medium frame
PASS: gdb.base/stack-checking.exp: bt
PASS: gdb.base/stack-checking.exp: continue to breakpoint: breakpoint for big frame
PASS: gdb.base/stack-checking.exp: bt
Running ../../../gdb/testsuite/gdb.base/interp.exp ...
PASS: gdb.base/interp.exp: interpreter-exec mi "-var-update *"
PASS: gdb.base/interp.exp: interpreter-exec console "show version"
Running ../../../gdb/testsuite/gdb.base/solib.exp ...
Running ../../../gdb/testsuite/gdb.base/relational.exp ...
PASS: gdb.base/relational.exp: set variable x=14
PASS: gdb.base/relational.exp: set variable y=2
PASS: gdb.base/relational.exp: set variable z=2
PASS: gdb.base/relational.exp: set variable w=3
PASS: gdb.base/relational.exp: print value of x
PASS: gdb.base/relational.exp: print value of y
PASS: gdb.base/relational.exp: print value of z
PASS: gdb.base/relational.exp: print value of w
PASS: gdb.base/relational.exp: print value of x<y
PASS: gdb.base/relational.exp: print value of x<=y
PASS: gdb.base/relational.exp: print value of x>y
PASS: gdb.base/relational.exp: print value of x>=y
PASS: gdb.base/relational.exp: print value of x==y
PASS: gdb.base/relational.exp: print value of x!=y
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable y
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x<y<z
PASS: gdb.base/relational.exp: print value of x<=y<=z
PASS: gdb.base/relational.exp: print value of x>y>z
PASS: gdb.base/relational.exp: print value of x>=y>=z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable y
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x==y==z
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x!=y!=z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable y
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x<y==z
PASS: gdb.base/relational.exp: print value of x<y!=z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable y
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x<y<=z
PASS: gdb.base/relational.exp: print value of x<y>=z
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x<y>z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: print value of x>y>=z
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x>y==z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x>y!=z
PASS: gdb.base/relational.exp: set x to 4
PASS: gdb.base/relational.exp: print value of x>y<=z
PASS: gdb.base/relational.exp: print value of x>=y==z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: print value of x>=y!=z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x>=y<=z
PASS: gdb.base/relational.exp: print value of x<=y==z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: print value of x<=y!=z
PASS: gdb.base/relational.exp: print value of x==y!=z
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x>=(y<z)
PASS: gdb.base/relational.exp: print value of x>=(y!=z)
PASS: gdb.base/relational.exp: print value of x==(y==z)
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of (x==y)<z
Running ../../../gdb/testsuite/gdb.base/corefile.exp ...
Running ../../../gdb/testsuite/gdb.base/type-opaque.exp ...
Running ../../../gdb/testsuite/gdb.base/async.exp ...
Running ../../../gdb/testsuite/gdb.base/so-impl-ld.exp ...
Running ../../../gdb/testsuite/gdb.base/hbreak.exp ...
Running ../../../gdb/testsuite/gdb.base/solib-overlap.exp ...
Running ../../../gdb/testsuite/gdb.base/funcargs.exp ...
PASS: gdb.base/funcargs.exp: set print frame-arguments all
PASS: gdb.base/funcargs.exp: run to call0a
PASS: gdb.base/funcargs.exp: print c after run to call0a
PASS: gdb.base/funcargs.exp: print s after run to call0a
PASS: gdb.base/funcargs.exp: print i after run to call0a
PASS: gdb.base/funcargs.exp: print l after run to call0a
PASS: gdb.base/funcargs.exp: continue to call0b
PASS: gdb.base/funcargs.exp: continue to call0c
PASS: gdb.base/funcargs.exp: continue to call0d
PASS: gdb.base/funcargs.exp: continue to call0e
PASS: gdb.base/funcargs.exp: run to call1a
PASS: gdb.base/funcargs.exp: print uc
PASS: gdb.base/funcargs.exp: print us
PASS: gdb.base/funcargs.exp: print ui
PASS: gdb.base/funcargs.exp: print ul
PASS: gdb.base/funcargs.exp: continue to call1b
PASS: gdb.base/funcargs.exp: continue to call1c
PASS: gdb.base/funcargs.exp: continue to call1d
PASS: gdb.base/funcargs.exp: continue to call1e
PASS: gdb.base/funcargs.exp: run to call2a
PASS: gdb.base/funcargs.exp: print c after run to call2a
PASS: gdb.base/funcargs.exp: print f1 after run to call2a
PASS: gdb.base/funcargs.exp: print s after run to call2a
PASS: gdb.base/funcargs.exp: print d1 after run to call2a
PASS: gdb.base/funcargs.exp: print i after run to call2a
PASS: gdb.base/funcargs.exp: print f2 after run to call2a
PASS: gdb.base/funcargs.exp: print l after run to call2a
PASS: gdb.base/funcargs.exp: print d2 after run to call2a
PASS: gdb.base/funcargs.exp: continue to call2b
PASS: gdb.base/funcargs.exp: continue to call2c
PASS: gdb.base/funcargs.exp: continue to call2d
PASS: gdb.base/funcargs.exp: continue to call2e
PASS: gdb.base/funcargs.exp: continue to call2f
PASS: gdb.base/funcargs.exp: continue to call2g
PASS: gdb.base/funcargs.exp: continue to call2h
PASS: gdb.base/funcargs.exp: continue to call2i
PASS: gdb.base/funcargs.exp: run to call3a
PASS: gdb.base/funcargs.exp: print *cp
PASS: gdb.base/funcargs.exp: print *sp
PASS: gdb.base/funcargs.exp: print *ip
PASS: gdb.base/funcargs.exp: print *lp
PASS: gdb.base/funcargs.exp: continue to call3b
PASS: gdb.base/funcargs.exp: print *ucp
PASS: gdb.base/funcargs.exp: print *usp
PASS: gdb.base/funcargs.exp: print *uip
PASS: gdb.base/funcargs.exp: print *ulp
PASS: gdb.base/funcargs.exp: continue to call3c
PASS: gdb.base/funcargs.exp: print *fp
PASS: gdb.base/funcargs.exp: print *dp
PASS: gdb.base/funcargs.exp: run to call4a
PASS: gdb.base/funcargs.exp: print *stp
PASS: gdb.base/funcargs.exp: continue to call4b
PASS: gdb.base/funcargs.exp: print *unp (sizeof long == sizeof int)
PASS: gdb.base/funcargs.exp: locate actual args, structs/unions passed by reference
PASS: gdb.base/funcargs.exp: run to call5a
PASS: gdb.base/funcargs.exp: print st
PASS: gdb.base/funcargs.exp: continue to call5b (sizeof long == sizeof int)
PASS: gdb.base/funcargs.exp: print un (sizeof long == sizeof int)
PASS: gdb.base/funcargs.exp: run to call6a
PASS: gdb.base/funcargs.exp: backtrace from call6a
PASS: gdb.base/funcargs.exp: continue to call6b
PASS: gdb.base/funcargs.exp: backtrace from call6b
PASS: gdb.base/funcargs.exp: continue to call6c
PASS: gdb.base/funcargs.exp: backtrace from call6c
PASS: gdb.base/funcargs.exp: continue to call6d
PASS: gdb.base/funcargs.exp: backtrace from call6d
PASS: gdb.base/funcargs.exp: continue to call6e
PASS: gdb.base/funcargs.exp: backtrace from call6e
PASS: gdb.base/funcargs.exp: continue to call6f
PASS: gdb.base/funcargs.exp: backtrace from call6f
PASS: gdb.base/funcargs.exp: continue to call6g
PASS: gdb.base/funcargs.exp: backtrace from call6g
PASS: gdb.base/funcargs.exp: continue to call6h
PASS: gdb.base/funcargs.exp: backtrace from call6h
PASS: gdb.base/funcargs.exp: continue to call6i
PASS: gdb.base/funcargs.exp: backtrace from call6i
PASS: gdb.base/funcargs.exp: continue to call6j
PASS: gdb.base/funcargs.exp: backtrace from call6j
PASS: gdb.base/funcargs.exp: continue to call6k
PASS: gdb.base/funcargs.exp: backtrace from call6k
PASS: gdb.base/funcargs.exp: run to call7a
PASS: gdb.base/funcargs.exp: backtrace from call7a
PASS: gdb.base/funcargs.exp: continue to call7b
PASS: gdb.base/funcargs.exp: backtrace from call7b
PASS: gdb.base/funcargs.exp: continue to call7c
PASS: gdb.base/funcargs.exp: backtrace from call7c
PASS: gdb.base/funcargs.exp: continue to call7d
PASS: gdb.base/funcargs.exp: backtrace from call7d
PASS: gdb.base/funcargs.exp: continue to call7e
PASS: gdb.base/funcargs.exp: backtrace from call7e
PASS: gdb.base/funcargs.exp: continue to call7f
PASS: gdb.base/funcargs.exp: backtrace from call7f
PASS: gdb.base/funcargs.exp: continue to call7g
PASS: gdb.base/funcargs.exp: backtrace from call7g
PASS: gdb.base/funcargs.exp: continue to call7h
PASS: gdb.base/funcargs.exp: backtrace from call7h
PASS: gdb.base/funcargs.exp: continue to call7i
PASS: gdb.base/funcargs.exp: backtrace from call7i
PASS: gdb.base/funcargs.exp: continue to call7j
PASS: gdb.base/funcargs.exp: backtrace from call7j
PASS: gdb.base/funcargs.exp: continue to call7k
PASS: gdb.base/funcargs.exp: backtrace from call7k
PASS: gdb.base/funcargs.exp: run to hitbottom
PASS: gdb.base/funcargs.exp: recursive passing of structs by value
PASS: gdb.base/funcargs.exp: print c after runto localvars_after_alloca
PASS: gdb.base/funcargs.exp: print s after runto localvars_after_alloca
PASS: gdb.base/funcargs.exp: print i after runto localvars_after_alloca
PASS: gdb.base/funcargs.exp: print l after runto localvars_after_alloca
PASS: gdb.base/funcargs.exp: next in localvars_after_alloca()
PASS: gdb.base/funcargs.exp: print c in localvars_after_alloca
PASS: gdb.base/funcargs.exp: print s in localvars_after_alloca
PASS: gdb.base/funcargs.exp: print i in localvars_after_alloca
PASS: gdb.base/funcargs.exp: print l in localvars_after_alloca
PASS: gdb.base/funcargs.exp: backtrace after alloca
PASS: gdb.base/funcargs.exp: print c in call_after_alloca
PASS: gdb.base/funcargs.exp: print s in call_after_alloca
PASS: gdb.base/funcargs.exp: print i in call_after_alloca
PASS: gdb.base/funcargs.exp: print l in call_after_alloca
PASS: gdb.base/funcargs.exp: backtrace from call_after_alloca_subr
PASS: gdb.base/funcargs.exp: continue to call0a
PASS: gdb.base/funcargs.exp: print c in localvars_in_indirect_call
PASS: gdb.base/funcargs.exp: print s in localvars_in_indirect_call
PASS: gdb.base/funcargs.exp: print i in localvars_in_indirect_call
PASS: gdb.base/funcargs.exp: print l in localvars_in_indirect_call
PASS: gdb.base/funcargs.exp: backtrace in indirectly called function
PASS: gdb.base/funcargs.exp: finish from indirectly called function
PASS: gdb.base/funcargs.exp: stepping into indirectly called function
PASS: gdb.base/funcargs.exp: finish from marker_call_with_trampolines
PASS: gdb.base/funcargs.exp: stepping into function called with trampolines
PASS: gdb.base/funcargs.exp: backtrace through call with trampolines
PASS: gdb.base/funcargs.exp: stepping back to main from function called with trampolines
Running ../../../gdb/testsuite/gdb.base/charset.exp ...
PASS: gdb.base/charset.exp: show charset
PASS: gdb.base/charset.exp: show target-charset
PASS: gdb.base/charset.exp: check `show target-charset' against `show charset'
PASS: gdb.base/charset.exp: show host-charset
PASS: gdb.base/charset.exp: check `show host-charset' against `show charset'
PASS: gdb.base/charset.exp: try malformed `set charset'
PASS: gdb.base/charset.exp: try `set host-charset' with invalid charset
PASS: gdb.base/charset.exp: try `set target-charset' with invalid charset
PASS: gdb.base/charset.exp: capture valid host charsets
PASS: gdb.base/charset.exp: capture valid target charsets
PASS: gdb.base/charset.exp: try `set host-charset ASCII'
PASS: gdb.base/charset.exp: parse `show charset' after `set host-charset ASCII'
PASS: gdb.base/charset.exp: check effect of `set host-charset ASCII'
PASS: gdb.base/charset.exp: try `set target-charset ASCII'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ASCII'
PASS: gdb.base/charset.exp: check effect of `set target-charset ASCII'
PASS: gdb.base/charset.exp: try `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: check effect of `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: try `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: check effect of `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: try `set target-charset IBM1047'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset IBM1047'
PASS: gdb.base/charset.exp: check effect of `set target-charset IBM1047'
PASS: gdb.base/charset.exp: try `set host-charset ISO-8859-1'
PASS: gdb.base/charset.exp: parse `show charset' after `set host-charset ISO-8859-1'
PASS: gdb.base/charset.exp: check effect of `set host-charset ISO-8859-1'
PASS: gdb.base/charset.exp: try `set target-charset ASCII'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ASCII'
PASS: gdb.base/charset.exp: check effect of `set target-charset ASCII'
PASS: gdb.base/charset.exp: try `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: check effect of `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: try `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: check effect of `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: try `set target-charset IBM1047'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset IBM1047'
PASS: gdb.base/charset.exp: check effect of `set target-charset IBM1047'
PASS: gdb.base/charset.exp: try `set host-charset EBCDIC-US'
PASS: gdb.base/charset.exp: parse `show charset' after `set host-charset EBCDIC-US'
PASS: gdb.base/charset.exp: check effect of `set host-charset EBCDIC-US'
PASS: gdb.base/charset.exp: try `set target-charset ASCII'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ASCII'
PASS: gdb.base/charset.exp: check effect of `set target-charset ASCII'
PASS: gdb.base/charset.exp: try `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: check effect of `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: try `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: check effect of `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: try `set target-charset IBM1047'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset IBM1047'
PASS: gdb.base/charset.exp: check effect of `set target-charset IBM1047'
PASS: gdb.base/charset.exp: try `set host-charset IBM1047'
PASS: gdb.base/charset.exp: parse `show charset' after `set host-charset IBM1047'
PASS: gdb.base/charset.exp: check effect of `set host-charset IBM1047'
PASS: gdb.base/charset.exp: try `set target-charset ASCII'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ASCII'
PASS: gdb.base/charset.exp: check effect of `set target-charset ASCII'
PASS: gdb.base/charset.exp: try `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: check effect of `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: try `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: check effect of `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: try `set target-charset IBM1047'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset IBM1047'
PASS: gdb.base/charset.exp: check effect of `set target-charset IBM1047'
PASS: gdb.base/charset.exp: set breakpoint after all strings have been initialized
PASS: gdb.base/charset.exp: run until all strings have been initialized
PASS: gdb.base/charset.exp: get integer valueof "sizeof (wchar_t)" (4)
PASS: gdb.base/charset.exp: set host-charset ASCII
PASS: gdb.base/charset.exp: set target-charset ASCII
PASS: gdb.base/charset.exp: print the null character in ASCII
PASS: gdb.base/charset.exp: print string in ASCII
PASS: gdb.base/charset.exp: parse character literal in ASCII
PASS: gdb.base/charset.exp: check value of parsed character literal in ASCII
PASS: gdb.base/charset.exp: parse string literal in ASCII
PASS: gdb.base/charset.exp: check value of parsed string literal in ASCII
PASS: gdb.base/charset.exp: try printing '\a' in ASCII
PASS: gdb.base/charset.exp: check value of '\a' in ASCII
PASS: gdb.base/charset.exp: check value of "\a" in ASCII
PASS: gdb.base/charset.exp: try printing '\b' in ASCII
PASS: gdb.base/charset.exp: check value of '\b' in ASCII
PASS: gdb.base/charset.exp: check value of "\b" in ASCII
PASS: gdb.base/charset.exp: try printing '\f' in ASCII
PASS: gdb.base/charset.exp: check value of '\f' in ASCII
PASS: gdb.base/charset.exp: check value of "\f" in ASCII
PASS: gdb.base/charset.exp: try printing '\n' in ASCII
PASS: gdb.base/charset.exp: check value of '\n' in ASCII
PASS: gdb.base/charset.exp: check value of "\n" in ASCII
PASS: gdb.base/charset.exp: try printing '\r' in ASCII
PASS: gdb.base/charset.exp: check value of '\r' in ASCII
PASS: gdb.base/charset.exp: check value of "\r" in ASCII
PASS: gdb.base/charset.exp: try printing '\t' in ASCII
PASS: gdb.base/charset.exp: check value of '\t' in ASCII
PASS: gdb.base/charset.exp: check value of "\t" in ASCII
PASS: gdb.base/charset.exp: try printing '\v' in ASCII
PASS: gdb.base/charset.exp: check value of '\v' in ASCII
PASS: gdb.base/charset.exp: check value of "\v" in ASCII
PASS: gdb.base/charset.exp: print escape that doesn't exist in ASCII
PASS: gdb.base/charset.exp: check value of escape that doesn't exist in ASCII
PASS: gdb.base/charset.exp: set target-charset ISO-8859-1
PASS: gdb.base/charset.exp: print the null character in ISO-8859-1
PASS: gdb.base/charset.exp: print string in ISO-8859-1
PASS: gdb.base/charset.exp: parse character literal in ISO-8859-1
PASS: gdb.base/charset.exp: check value of parsed character literal in ISO-8859-1
PASS: gdb.base/charset.exp: parse string literal in ISO-8859-1
PASS: gdb.base/charset.exp: check value of parsed string literal in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\a' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\a' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\a" in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\b' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\b' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\b" in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\f' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\f' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\f" in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\n' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\n' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\n" in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\r' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\r' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\r" in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\t' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\t' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\t" in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\v' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\v' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\v" in ISO-8859-1
PASS: gdb.base/charset.exp: print escape that doesn't exist in ISO-8859-1
PASS: gdb.base/charset.exp: check value of escape that doesn't exist in ISO-8859-1
PASS: gdb.base/charset.exp: set target-charset EBCDIC-US
PASS: gdb.base/charset.exp: print the null character in EBCDIC-US
PASS: gdb.base/charset.exp: print string in EBCDIC-US
PASS: gdb.base/charset.exp: parse character literal in EBCDIC-US
PASS: gdb.base/charset.exp: check value of parsed character literal in EBCDIC-US
PASS: gdb.base/charset.exp: parse string literal in EBCDIC-US
PASS: gdb.base/charset.exp: check value of parsed string literal in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\a' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\a' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\a" in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\b' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\b' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\b" in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\f' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\f' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\f" in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\n' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\n' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\n" in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\r' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\r' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\r" in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\t' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\t' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\t" in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\v' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\v' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\v" in EBCDIC-US
PASS: gdb.base/charset.exp: print escape that doesn't exist in EBCDIC-US
PASS: gdb.base/charset.exp: check value of escape that doesn't exist in EBCDIC-US
PASS: gdb.base/charset.exp: set target-charset IBM1047
PASS: gdb.base/charset.exp: print the null character in IBM1047
PASS: gdb.base/charset.exp: print string in IBM1047
PASS: gdb.base/charset.exp: parse character literal in IBM1047
PASS: gdb.base/charset.exp: check value of parsed character literal in IBM1047
PASS: gdb.base/charset.exp: parse string literal in IBM1047
PASS: gdb.base/charset.exp: check value of parsed string literal in IBM1047
PASS: gdb.base/charset.exp: try printing '\a' in IBM1047
PASS: gdb.base/charset.exp: check value of '\a' in IBM1047
PASS: gdb.base/charset.exp: check value of "\a" in IBM1047
PASS: gdb.base/charset.exp: try printing '\b' in IBM1047
PASS: gdb.base/charset.exp: check value of '\b' in IBM1047
PASS: gdb.base/charset.exp: check value of "\b" in IBM1047
PASS: gdb.base/charset.exp: try printing '\f' in IBM1047
PASS: gdb.base/charset.exp: check value of '\f' in IBM1047
PASS: gdb.base/charset.exp: check value of "\f" in IBM1047
PASS: gdb.base/charset.exp: try printing '\n' in IBM1047
PASS: gdb.base/charset.exp: check value of '\n' in IBM1047
PASS: gdb.base/charset.exp: check value of "\n" in IBM1047
PASS: gdb.base/charset.exp: try printing '\r' in IBM1047
PASS: gdb.base/charset.exp: check value of '\r' in IBM1047
PASS: gdb.base/charset.exp: check value of "\r" in IBM1047
PASS: gdb.base/charset.exp: try printing '\t' in IBM1047
PASS: gdb.base/charset.exp: check value of '\t' in IBM1047
PASS: gdb.base/charset.exp: check value of "\t" in IBM1047
PASS: gdb.base/charset.exp: try printing '\v' in IBM1047
PASS: gdb.base/charset.exp: check value of '\v' in IBM1047
PASS: gdb.base/charset.exp: check value of "\v" in IBM1047
PASS: gdb.base/charset.exp: print escape that doesn't exist in IBM1047
PASS: gdb.base/charset.exp: check value of escape that doesn't exist in IBM1047
PASS: gdb.base/charset.exp: set target-wide-charset UTF-32
PASS: gdb.base/charset.exp: print the null character in UTF-32
PASS: gdb.base/charset.exp: print string in UTF-32
PASS: gdb.base/charset.exp: parse character literal in UTF-32
PASS: gdb.base/charset.exp: check value of parsed character literal in UTF-32
PASS: gdb.base/charset.exp: parse string literal in UTF-32
PASS: gdb.base/charset.exp: check value of parsed string literal in UTF-32
PASS: gdb.base/charset.exp: try printing '\a' in UTF-32
PASS: gdb.base/charset.exp: check value of '\a' in UTF-32
PASS: gdb.base/charset.exp: check value of "\a" in UTF-32
PASS: gdb.base/charset.exp: try printing '\b' in UTF-32
PASS: gdb.base/charset.exp: check value of '\b' in UTF-32
PASS: gdb.base/charset.exp: check value of "\b" in UTF-32
PASS: gdb.base/charset.exp: try printing '\f' in UTF-32
PASS: gdb.base/charset.exp: check value of '\f' in UTF-32
PASS: gdb.base/charset.exp: check value of "\f" in UTF-32
PASS: gdb.base/charset.exp: try printing '\n' in UTF-32
PASS: gdb.base/charset.exp: check value of '\n' in UTF-32
PASS: gdb.base/charset.exp: check value of "\n" in UTF-32
PASS: gdb.base/charset.exp: try printing '\r' in UTF-32
PASS: gdb.base/charset.exp: check value of '\r' in UTF-32
PASS: gdb.base/charset.exp: check value of "\r" in UTF-32
PASS: gdb.base/charset.exp: try printing '\t' in UTF-32
PASS: gdb.base/charset.exp: check value of '\t' in UTF-32
PASS: gdb.base/charset.exp: check value of "\t" in UTF-32
PASS: gdb.base/charset.exp: try printing '\v' in UTF-32
PASS: gdb.base/charset.exp: check value of '\v' in UTF-32
PASS: gdb.base/charset.exp: check value of "\v" in UTF-32
PASS: gdb.base/charset.exp: print escape that doesn't exist in UTF-32
PASS: gdb.base/charset.exp: check value of escape that doesn't exist in UTF-32
PASS: gdb.base/charset.exp: set target-charset UTF-8
PASS: gdb.base/charset.exp: non-representable target character
PASS: gdb.base/charset.exp: print '\x'
PASS: gdb.base/charset.exp: print '\u'
PASS: gdb.base/charset.exp: print '\9'
PASS: gdb.base/charset.exp: print "\1011"
PASS: gdb.base/charset.exp: basic wide string concatenation
PASS: gdb.base/charset.exp: narrow and wide string concatenation
PASS: gdb.base/charset.exp: wide and narrow string concatenation
PASS: gdb.base/charset.exp: wide string concatenation with escape
PASS: gdb.base/charset.exp: concatenate three strings with empty wide string
PASS: gdb.base/charset.exp: basic wide character
PASS: gdb.base/charset.exp: get integer valueof "sizeof (char16_t)" (2)
PASS: gdb.base/charset.exp: basic UTF-16 string concatenation
PASS: gdb.base/charset.exp: narrow and UTF-16 string concatenation
PASS: gdb.base/charset.exp: UTF-16 and narrow string concatenation
PASS: gdb.base/charset.exp: UTF-16 string concatenation with escape
PASS: gdb.base/charset.exp: concatenate three strings with empty UTF-16 string
PASS: gdb.base/charset.exp: basic UTF-16 character
PASS: gdb.base/charset.exp: get integer valueof "sizeof (char32_t)" (4)
PASS: gdb.base/charset.exp: basic UTF-32 string concatenation
PASS: gdb.base/charset.exp: narrow and UTF-32 string concatenation
PASS: gdb.base/charset.exp: UTF-32 and narrow string concatenation
PASS: gdb.base/charset.exp: UTF-32 string concatenation with escape
PASS: gdb.base/charset.exp: concatenate three strings with empty UTF-32 string
PASS: gdb.base/charset.exp: basic UTF-32 character
PASS: gdb.base/charset.exp: undefined concatenation of wide and UTF-16
PASS: gdb.base/charset.exp: undefined concatenation of wide and UTF-32
PASS: gdb.base/charset.exp: typedef to wchar_t
PASS: gdb.base/charset.exp: undefined concatenation of UTF-16 and UTF-32
PASS: gdb.base/charset.exp: set up for python printing of utf-16 string
PASS: gdb.base/charset.exp: extract utf-16 string using python
PASS: gdb.base/charset.exp: EVAL_SKIP cleanup handling regression test
Running ../../../gdb/testsuite/gdb.base/mips_pro.exp ...
PASS: gdb.base/mips_pro.exp: backtrace
Running ../../../gdb/testsuite/gdb.base/page.exp ...
PASS: gdb.base/page.exp: set pagination off
PASS: gdb.base/page.exp: pagination is off
PASS: gdb.base/page.exp: unpaged help
PASS: gdb.base/page.exp: set pagination on
PASS: gdb.base/page.exp: pagination is on
PASS: gdb.base/page.exp: set height 10
PASS: gdb.base/page.exp: paged help
PASS: gdb.base/page.exp: q
Running ../../../gdb/testsuite/gdb.base/find.exp ...
PASS: gdb.base/find.exp: breakpoint function in file
PASS: gdb.base/find.exp: run until function breakpoint
PASS: gdb.base/find.exp: find string pattern
PASS: gdb.base/find.exp: pattern not found at end of range
PASS: gdb.base/find.exp: pattern found at end of range
PASS: gdb.base/find.exp: max-count
PASS: gdb.base/find.exp: $_
PASS: gdb.base/find.exp: $numfound
PASS: gdb.base/find.exp: size,max-count, /1b
PASS: gdb.base/find.exp: size,max-count, /b1
PASS: gdb.base/find.exp: size,max-count, /b/1
PASS: gdb.base/find.exp: size,max-count, /1/b
PASS: gdb.base/find.exp: find byte pattern with end address
PASS: gdb.base/find.exp: find 16-bit pattern
PASS: gdb.base/find.exp: find 16-bit pattern
PASS: gdb.base/find.exp: find 32-bit pattern
PASS: gdb.base/find.exp: find 32-bit pattern
PASS: gdb.base/find.exp: find 64-bit pattern
PASS: gdb.base/find.exp: find 64-bit pattern
PASS: gdb.base/find.exp: find mixed-sized pattern
PASS: gdb.base/find.exp: search spanning large range
Running ../../../gdb/testsuite/gdb.base/checkpoint.exp ...
Running ../../../gdb/testsuite/gdb.base/structs2.exp ...
PASS: gdb.base/structs2.exp: set width 0
PASS: gdb.base/structs2.exp: structs2 sanity check (PRMS 13536)
PASS: gdb.base/structs2.exp: structs2 breakpoint set (PRMS 13536)
PASS: gdb.base/structs2.exp: structs2 continue1 (PRMS 13536)
PASS: gdb.base/structs2.exp: structs2 continue2 (PRMS 13536)
Running ../../../gdb/testsuite/gdb.base/interrupt.exp ...
Running ../../../gdb/testsuite/gdb.base/foll-fork.exp ...
Running ../../../gdb/testsuite/gdb.base/so-indr-cl.exp ...
Running ../../../gdb/testsuite/gdb.base/ena-dis-br.exp ...
PASS: gdb.base/ena-dis-br.exp: break marker1
PASS: gdb.base/ena-dis-br.exp: enable break marker1
PASS: gdb.base/ena-dis-br.exp: info break marker1
PASS: gdb.base/ena-dis-br.exp: continue to break marker1
PASS: gdb.base/ena-dis-br.exp: delete break marker1
PASS: gdb.base/ena-dis-br.exp: break marker2
PASS: gdb.base/ena-dis-br.exp: enable once break marker2
PASS: gdb.base/ena-dis-br.exp: info auto-disabled break marker2
PASS: gdb.base/ena-dis-br.exp: continue to auto-disabled break marker2
PASS: gdb.base/ena-dis-br.exp: info auto-disabled break marker2
PASS: gdb.base/ena-dis-br.exp: continue until exit at no stop
PASS: gdb.base/ena-dis-br.exp: rerun to main
PASS: gdb.base/ena-dis-br.exp: continue until exit at no stop at auto-disabled break marker2
PASS: gdb.base/ena-dis-br.exp: break marker3
PASS: gdb.base/ena-dis-br.exp: enable del break marker3
PASS: gdb.base/ena-dis-br.exp: info auto-deleted break marker2
PASS: gdb.base/ena-dis-br.exp: continue to auto-deleted break marker3
PASS: gdb.base/ena-dis-br.exp: info auto-deleted break marker3
PASS: gdb.base/ena-dis-br.exp: break marker4
PASS: gdb.base/ena-dis-br.exp: disable break marker4
PASS: gdb.base/ena-dis-br.exp: info break marker4
PASS: gdb.base/ena-dis-br.exp: break marker1
PASS: gdb.base/ena-dis-br.exp: ignore non-existent break
PASS: gdb.base/ena-dis-br.exp: ignore break with missing ignore count
PASS: gdb.base/ena-dis-br.exp: ignore break marker1 -1
PASS: gdb.base/ena-dis-br.exp: ignore break marker1 0
PASS: gdb.base/ena-dis-br.exp: ignore break marker1
PASS: gdb.base/ena-dis-br.exp: info ignored break marker1
PASS: gdb.base/ena-dis-br.exp: continue until exit at no stop at ignored break marker1
PASS: gdb.base/ena-dis-br.exp: rerun to main
PASS: gdb.base/ena-dis-br.exp: continue to break marker1, 2nd time
PASS: gdb.base/ena-dis-br.exp: break marker1
PASS: gdb.base/ena-dis-br.exp: ignore break marker1
PASS: gdb.base/ena-dis-br.exp: enable del break marker1
PASS: gdb.base/ena-dis-br.exp: info break marker1
PASS: gdb.base/ena-dis-br.exp: continue until exit at no stop at ignored & auto-deleted break marker1
PASS: gdb.base/ena-dis-br.exp: rerun to main
PASS: gdb.base/ena-dis-br.exp: continue to ignored & auto-deleted break marker1
PASS: gdb.base/ena-dis-br.exp: break marker1
PASS: gdb.base/ena-dis-br.exp: ignore break marker1
PASS: gdb.base/ena-dis-br.exp: disable break marker1
PASS: gdb.base/ena-dis-br.exp: continue until exit at no stop at ignored & disabled break marker1
PASS: gdb.base/ena-dis-br.exp: rerun to main
PASS: gdb.base/ena-dis-br.exp: info ignored & disabled break marker1
PASS: gdb.base/ena-dis-br.exp: prepare to continue with ignore count
PASS: gdb.base/ena-dis-br.exp: continue with ignore count
PASS: gdb.base/ena-dis-br.exp: step
PASS: gdb.base/ena-dis-br.exp: continue with ignore count, not stopped at bpt
Running ../../../gdb/testsuite/gdb.base/info-target.exp ...
PASS: gdb.base/info-target.exp: info target
Running ../../../gdb/testsuite/gdb.base/chng-syms.exp ...
PASS: gdb.base/chng-syms.exp: setting conditional breakpoint on function
PASS: gdb.base/chng-syms.exp: continue until exit at breakpoint first time through
PASS: gdb.base/chng-syms.exp: running with invalidated bpt condition after executable changes
Running ../../../gdb/testsuite/gdb.base/restore.exp ...
PASS: gdb.base/restore.exp: tbreak caller1
PASS: gdb.base/restore.exp: run to caller1
PASS: gdb.base/restore.exp: caller1 calls callee1; tbreak callee
PASS: gdb.base/restore.exp: caller1 calls callee1; continue to callee
PASS: gdb.base/restore.exp: caller1 calls callee1; return callee now
PASS: gdb.base/restore.exp: caller1 calls callee1; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller1 calls callee2; tbreak callee
PASS: gdb.base/restore.exp: caller1 calls callee2; continue to callee
PASS: gdb.base/restore.exp: caller1 calls callee2; return callee now
PASS: gdb.base/restore.exp: caller1 calls callee2; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller1 calls callee3; tbreak callee
PASS: gdb.base/restore.exp: caller1 calls callee3; continue to callee
PASS: gdb.base/restore.exp: caller1 calls callee3; return callee now
PASS: gdb.base/restore.exp: caller1 calls callee3; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller1 calls callee4; tbreak callee
PASS: gdb.base/restore.exp: caller1 calls callee4; continue to callee
PASS: gdb.base/restore.exp: caller1 calls callee4; return callee now
PASS: gdb.base/restore.exp: caller1 calls callee4; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller1 calls callee5; tbreak callee
PASS: gdb.base/restore.exp: caller1 calls callee5; continue to callee
PASS: gdb.base/restore.exp: caller1 calls callee5; return callee now
PASS: gdb.base/restore.exp: caller1 calls callee5; return restored l1 to 32492
PASS: gdb.base/restore.exp: tbreak caller2
PASS: gdb.base/restore.exp: run to caller2
PASS: gdb.base/restore.exp: caller2 calls callee1; tbreak callee
PASS: gdb.base/restore.exp: caller2 calls callee1; continue to callee
PASS: gdb.base/restore.exp: caller2 calls callee1; return callee now
PASS: gdb.base/restore.exp: caller2 calls callee1; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller2 calls callee1; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller2 calls callee2; tbreak callee
PASS: gdb.base/restore.exp: caller2 calls callee2; continue to callee
PASS: gdb.base/restore.exp: caller2 calls callee2; return callee now
PASS: gdb.base/restore.exp: caller2 calls callee2; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller2 calls callee2; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller2 calls callee3; tbreak callee
PASS: gdb.base/restore.exp: caller2 calls callee3; continue to callee
PASS: gdb.base/restore.exp: caller2 calls callee3; return callee now
PASS: gdb.base/restore.exp: caller2 calls callee3; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller2 calls callee3; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller2 calls callee4; tbreak callee
PASS: gdb.base/restore.exp: caller2 calls callee4; continue to callee
PASS: gdb.base/restore.exp: caller2 calls callee4; return callee now
PASS: gdb.base/restore.exp: caller2 calls callee4; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller2 calls callee4; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller2 calls callee5; tbreak callee
PASS: gdb.base/restore.exp: caller2 calls callee5; continue to callee
PASS: gdb.base/restore.exp: caller2 calls callee5; return callee now
PASS: gdb.base/restore.exp: caller2 calls callee5; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller2 calls callee5; return restored l2 to 32493
PASS: gdb.base/restore.exp: tbreak caller3
PASS: gdb.base/restore.exp: run to caller3
PASS: gdb.base/restore.exp: caller3 calls callee1; tbreak callee
PASS: gdb.base/restore.exp: caller3 calls callee1; continue to callee
PASS: gdb.base/restore.exp: caller3 calls callee1; return callee now
PASS: gdb.base/restore.exp: caller3 calls callee1; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller3 calls callee1; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller3 calls callee1; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller3 calls callee2; tbreak callee
PASS: gdb.base/restore.exp: caller3 calls callee2; continue to callee
PASS: gdb.base/restore.exp: caller3 calls callee2; return callee now
PASS: gdb.base/restore.exp: caller3 calls callee2; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller3 calls callee2; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller3 calls callee2; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller3 calls callee3; tbreak callee
PASS: gdb.base/restore.exp: caller3 calls callee3; continue to callee
PASS: gdb.base/restore.exp: caller3 calls callee3; return callee now
PASS: gdb.base/restore.exp: caller3 calls callee3; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller3 calls callee3; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller3 calls callee3; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller3 calls callee4; tbreak callee
PASS: gdb.base/restore.exp: caller3 calls callee4; continue to callee
PASS: gdb.base/restore.exp: caller3 calls callee4; return callee now
PASS: gdb.base/restore.exp: caller3 calls callee4; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller3 calls callee4; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller3 calls callee4; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller3 calls callee5; tbreak callee
PASS: gdb.base/restore.exp: caller3 calls callee5; continue to callee
PASS: gdb.base/restore.exp: caller3 calls callee5; return callee now
PASS: gdb.base/restore.exp: caller3 calls callee5; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller3 calls callee5; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller3 calls callee5; return restored l3 to 32494
PASS: gdb.base/restore.exp: tbreak caller4
PASS: gdb.base/restore.exp: run to caller4
PASS: gdb.base/restore.exp: caller4 calls callee1; tbreak callee
PASS: gdb.base/restore.exp: caller4 calls callee1; continue to callee
PASS: gdb.base/restore.exp: caller4 calls callee1; return callee now
PASS: gdb.base/restore.exp: caller4 calls callee1; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller4 calls callee1; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller4 calls callee1; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller4 calls callee1; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller4 calls callee2; tbreak callee
PASS: gdb.base/restore.exp: caller4 calls callee2; continue to callee
PASS: gdb.base/restore.exp: caller4 calls callee2; return callee now
PASS: gdb.base/restore.exp: caller4 calls callee2; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller4 calls callee2; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller4 calls callee2; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller4 calls callee2; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller4 calls callee3; tbreak callee
PASS: gdb.base/restore.exp: caller4 calls callee3; continue to callee
PASS: gdb.base/restore.exp: caller4 calls callee3; return callee now
PASS: gdb.base/restore.exp: caller4 calls callee3; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller4 calls callee3; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller4 calls callee3; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller4 calls callee3; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller4 calls callee4; tbreak callee
PASS: gdb.base/restore.exp: caller4 calls callee4; continue to callee
PASS: gdb.base/restore.exp: caller4 calls callee4; return callee now
PASS: gdb.base/restore.exp: caller4 calls callee4; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller4 calls callee4; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller4 calls callee4; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller4 calls callee4; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller4 calls callee5; tbreak callee
PASS: gdb.base/restore.exp: caller4 calls callee5; continue to callee
PASS: gdb.base/restore.exp: caller4 calls callee5; return callee now
PASS: gdb.base/restore.exp: caller4 calls callee5; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller4 calls callee5; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller4 calls callee5; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller4 calls callee5; return restored l4 to 32495
PASS: gdb.base/restore.exp: tbreak caller5
PASS: gdb.base/restore.exp: run to caller5
PASS: gdb.base/restore.exp: caller5 calls callee1; tbreak callee
PASS: gdb.base/restore.exp: caller5 calls callee1; continue to callee
PASS: gdb.base/restore.exp: caller5 calls callee1; return callee now
PASS: gdb.base/restore.exp: caller5 calls callee1; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller5 calls callee1; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller5 calls callee1; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller5 calls callee1; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller5 calls callee1; return restored l5 to 32496
PASS: gdb.base/restore.exp: caller5 calls callee2; tbreak callee
PASS: gdb.base/restore.exp: caller5 calls callee2; continue to callee
PASS: gdb.base/restore.exp: caller5 calls callee2; return callee now
PASS: gdb.base/restore.exp: caller5 calls callee2; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller5 calls callee2; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller5 calls callee2; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller5 calls callee2; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller5 calls callee2; return restored l5 to 32496
PASS: gdb.base/restore.exp: caller5 calls callee3; tbreak callee
PASS: gdb.base/restore.exp: caller5 calls callee3; continue to callee
PASS: gdb.base/restore.exp: caller5 calls callee3; return callee now
PASS: gdb.base/restore.exp: caller5 calls callee3; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller5 calls callee3; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller5 calls callee3; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller5 calls callee3; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller5 calls callee3; return restored l5 to 32496
PASS: gdb.base/restore.exp: caller5 calls callee4; tbreak callee
PASS: gdb.base/restore.exp: caller5 calls callee4; continue to callee
PASS: gdb.base/restore.exp: caller5 calls callee4; return callee now
PASS: gdb.base/restore.exp: caller5 calls callee4; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller5 calls callee4; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller5 calls callee4; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller5 calls callee4; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller5 calls callee4; return restored l5 to 32496
PASS: gdb.base/restore.exp: caller5 calls callee5; tbreak callee
PASS: gdb.base/restore.exp: caller5 calls callee5; continue to callee
PASS: gdb.base/restore.exp: caller5 calls callee5; return callee now
PASS: gdb.base/restore.exp: caller5 calls callee5; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller5 calls callee5; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller5 calls callee5; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller5 calls callee5; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller5 calls callee5; return restored l5 to 32496
Running ../../../gdb/testsuite/gdb.base/store.exp ...
PASS: gdb.base/store.exp: tbreak wack_charest
PASS: gdb.base/store.exp: continue to wack_charest
PASS: gdb.base/store.exp: var charest l; next charest
PASS: gdb.base/store.exp: var charest l; print old l, expecting -1 .*
PASS: gdb.base/store.exp: var charest l; print old r, expecting -2 .*
PASS: gdb.base/store.exp: var charest l; setting l to 4
PASS: gdb.base/store.exp: var charest l; print new l, expecting 4 ..004.
PASS: gdb.base/store.exp: var charest l; next over add call
PASS: gdb.base/store.exp: var charest l; print incremented l, expecting 2 ..002.
PASS: gdb.base/store.exp: tbreak wack_short
PASS: gdb.base/store.exp: continue to wack_short
PASS: gdb.base/store.exp: var short l; next short
PASS: gdb.base/store.exp: var short l; print old l, expecting -1
PASS: gdb.base/store.exp: var short l; print old r, expecting -2
PASS: gdb.base/store.exp: var short l; setting l to 4
PASS: gdb.base/store.exp: var short l; print new l, expecting 4
PASS: gdb.base/store.exp: var short l; next over add call
PASS: gdb.base/store.exp: var short l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak wack_int
PASS: gdb.base/store.exp: continue to wack_int
PASS: gdb.base/store.exp: var int l; next int
PASS: gdb.base/store.exp: var int l; print old l, expecting -1
PASS: gdb.base/store.exp: var int l; print old r, expecting -2
PASS: gdb.base/store.exp: var int l; setting l to 4
PASS: gdb.base/store.exp: var int l; print new l, expecting 4
PASS: gdb.base/store.exp: var int l; next over add call
PASS: gdb.base/store.exp: var int l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak wack_long
PASS: gdb.base/store.exp: continue to wack_long
PASS: gdb.base/store.exp: var long l; next long
PASS: gdb.base/store.exp: var long l; print old l, expecting -1
PASS: gdb.base/store.exp: var long l; print old r, expecting -2
PASS: gdb.base/store.exp: var long l; setting l to 4
PASS: gdb.base/store.exp: var long l; print new l, expecting 4
PASS: gdb.base/store.exp: var long l; next over add call
PASS: gdb.base/store.exp: var long l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak wack_longest
PASS: gdb.base/store.exp: continue to wack_longest
PASS: gdb.base/store.exp: var longest l; next longest
PASS: gdb.base/store.exp: var longest l; print old l, expecting -1
PASS: gdb.base/store.exp: var longest l; print old r, expecting -2
PASS: gdb.base/store.exp: var longest l; setting l to 4
PASS: gdb.base/store.exp: var longest l; print new l, expecting 4
PASS: gdb.base/store.exp: var longest l; next over add call
PASS: gdb.base/store.exp: var longest l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak wack_float
PASS: gdb.base/store.exp: continue to wack_float
PASS: gdb.base/store.exp: var float l; next float
PASS: gdb.base/store.exp: var float l; print old l, expecting -1
PASS: gdb.base/store.exp: var float l; print old r, expecting -2
PASS: gdb.base/store.exp: var float l; setting l to 4
PASS: gdb.base/store.exp: var float l; print new l, expecting 4
PASS: gdb.base/store.exp: var float l; next over add call
PASS: gdb.base/store.exp: var float l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak wack_double
PASS: gdb.base/store.exp: continue to wack_double
PASS: gdb.base/store.exp: var double l; next double
PASS: gdb.base/store.exp: var double l; print old l, expecting -1
PASS: gdb.base/store.exp: var double l; print old r, expecting -2
PASS: gdb.base/store.exp: var double l; setting l to 4
PASS: gdb.base/store.exp: var double l; print new l, expecting 4
PASS: gdb.base/store.exp: var double l; next over add call
PASS: gdb.base/store.exp: var double l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak wack_doublest
PASS: gdb.base/store.exp: continue to wack_doublest
PASS: gdb.base/store.exp: var doublest l; next doublest
PASS: gdb.base/store.exp: var doublest l; print old l, expecting -1
PASS: gdb.base/store.exp: var doublest l; print old r, expecting -2
PASS: gdb.base/store.exp: var doublest l; setting l to 4
PASS: gdb.base/store.exp: var doublest l; print new l, expecting 4
PASS: gdb.base/store.exp: var doublest l; next over add call
PASS: gdb.base/store.exp: var doublest l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak add_charest
PASS: gdb.base/store.exp: continue to add_charest
PASS: gdb.base/store.exp: upvar charest l; up
PASS: gdb.base/store.exp: upvar charest l; print old l, expecting -1 .*
PASS: gdb.base/store.exp: upvar charest l; print old r, expecting -2 .*
PASS: gdb.base/store.exp: upvar charest l; set l to 4
PASS: gdb.base/store.exp: upvar charest l; print new l, expecting 4 ..004.
PASS: gdb.base/store.exp: tbreak add_short
PASS: gdb.base/store.exp: continue to add_short
PASS: gdb.base/store.exp: upvar short l; up
PASS: gdb.base/store.exp: upvar short l; print old l, expecting -1
PASS: gdb.base/store.exp: upvar short l; print old r, expecting -2
PASS: gdb.base/store.exp: upvar short l; set l to 4
PASS: gdb.base/store.exp: upvar short l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak add_int
PASS: gdb.base/store.exp: continue to add_int
PASS: gdb.base/store.exp: upvar int l; up
PASS: gdb.base/store.exp: upvar int l; print old l, expecting -1
PASS: gdb.base/store.exp: upvar int l; print old r, expecting -2
PASS: gdb.base/store.exp: upvar int l; set l to 4
PASS: gdb.base/store.exp: upvar int l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak add_long
PASS: gdb.base/store.exp: continue to add_long
PASS: gdb.base/store.exp: upvar long l; up
PASS: gdb.base/store.exp: upvar long l; print old l, expecting -1
PASS: gdb.base/store.exp: upvar long l; print old r, expecting -2
PASS: gdb.base/store.exp: upvar long l; set l to 4
PASS: gdb.base/store.exp: upvar long l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak add_longest
PASS: gdb.base/store.exp: continue to add_longest
PASS: gdb.base/store.exp: upvar longest l; up
PASS: gdb.base/store.exp: upvar longest l; print old l, expecting -1
PASS: gdb.base/store.exp: upvar longest l; print old r, expecting -2
PASS: gdb.base/store.exp: upvar longest l; set l to 4
PASS: gdb.base/store.exp: upvar longest l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak add_float
PASS: gdb.base/store.exp: continue to add_float
PASS: gdb.base/store.exp: upvar float l; up
PASS: gdb.base/store.exp: upvar float l; print old l, expecting -1
PASS: gdb.base/store.exp: upvar float l; print old r, expecting -2
PASS: gdb.base/store.exp: upvar float l; set l to 4
PASS: gdb.base/store.exp: upvar float l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak add_double
PASS: gdb.base/store.exp: continue to add_double
PASS: gdb.base/store.exp: upvar double l; up
PASS: gdb.base/store.exp: upvar double l; print old l, expecting -1
PASS: gdb.base/store.exp: upvar double l; print old r, expecting -2
PASS: gdb.base/store.exp: upvar double l; set l to 4
PASS: gdb.base/store.exp: upvar double l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak add_doublest
PASS: gdb.base/store.exp: continue to add_doublest
PASS: gdb.base/store.exp: upvar doublest l; up
PASS: gdb.base/store.exp: upvar doublest l; print old l, expecting -1
PASS: gdb.base/store.exp: upvar doublest l; print old r, expecting -2
PASS: gdb.base/store.exp: upvar doublest l; set l to 4
PASS: gdb.base/store.exp: upvar doublest l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak wack_struct_1
PASS: gdb.base/store.exp: continue to wack_struct_1
PASS: gdb.base/store.exp: var struct 1 u; next to add_struct_1 call
PASS: gdb.base/store.exp: var struct 1 u; print old u, expecting {s = \{0}}
PASS: gdb.base/store.exp: var struct 1 u; set u to s_1
PASS: gdb.base/store.exp: var struct 1 u; print new u, expecting {s = \{1}}
PASS: gdb.base/store.exp: tbreak wack_struct_2
PASS: gdb.base/store.exp: continue to wack_struct_2
PASS: gdb.base/store.exp: var struct 2 u; next to add_struct_2 call
PASS: gdb.base/store.exp: var struct 2 u; print old u, expecting {s = \{0, 0}}
PASS: gdb.base/store.exp: var struct 2 u; set u to s_2
PASS: gdb.base/store.exp: var struct 2 u; print new u, expecting {s = \{1, 2}}
PASS: gdb.base/store.exp: tbreak wack_struct_3
PASS: gdb.base/store.exp: continue to wack_struct_3
PASS: gdb.base/store.exp: var struct 3 u; next to add_struct_3 call
PASS: gdb.base/store.exp: var struct 3 u; print old u, expecting {s = \{0, 0, 0}}
PASS: gdb.base/store.exp: var struct 3 u; set u to s_3
PASS: gdb.base/store.exp: var struct 3 u; print new u, expecting {s = \{1, 2, 3}}
PASS: gdb.base/store.exp: tbreak wack_struct_4
PASS: gdb.base/store.exp: continue to wack_struct_4
PASS: gdb.base/store.exp: var struct 4 u; next to add_struct_4 call
PASS: gdb.base/store.exp: var struct 4 u; print old u, expecting {s = \{0, 0, 0, 0}}
PASS: gdb.base/store.exp: var struct 4 u; set u to s_4
PASS: gdb.base/store.exp: var struct 4 u; print new u, expecting {s = \{1, 2, 3, 4}}
PASS: gdb.base/store.exp: tbreak add_struct_1
PASS: gdb.base/store.exp: continue to add_struct_1
PASS: gdb.base/store.exp: up struct 1 u; up
PASS: gdb.base/store.exp: up struct 1 u; print old u, expecting {s = \{0}}
PASS: gdb.base/store.exp: up struct 1 u; set u to s_1
PASS: gdb.base/store.exp: up struct 1 u; print new u, expecting {s = \{1}}
PASS: gdb.base/store.exp: tbreak add_struct_2
PASS: gdb.base/store.exp: continue to add_struct_2
PASS: gdb.base/store.exp: up struct 2 u; up
PASS: gdb.base/store.exp: up struct 2 u; print old u, expecting {s = \{0, 0}}
PASS: gdb.base/store.exp: up struct 2 u; set u to s_2
PASS: gdb.base/store.exp: up struct 2 u; print new u, expecting {s = \{1, 2}}
PASS: gdb.base/store.exp: tbreak add_struct_3
PASS: gdb.base/store.exp: continue to add_struct_3
PASS: gdb.base/store.exp: up struct 3 u; up
PASS: gdb.base/store.exp: up struct 3 u; print old u, expecting {s = \{0, 0, 0}}
PASS: gdb.base/store.exp: up struct 3 u; set u to s_3
PASS: gdb.base/store.exp: up struct 3 u; print new u, expecting {s = \{1, 2, 3}}
PASS: gdb.base/store.exp: tbreak add_struct_4
PASS: gdb.base/store.exp: continue to add_struct_4
PASS: gdb.base/store.exp: up struct 4 u; up
PASS: gdb.base/store.exp: up struct 4 u; print old u, expecting {s = \{0, 0, 0, 0}}
PASS: gdb.base/store.exp: up struct 4 u; set u to s_4
PASS: gdb.base/store.exp: up struct 4 u; print new u, expecting {s = \{1, 2, 3, 4}}
PASS: gdb.base/store.exp: tbreak wack_field_1
PASS: gdb.base/store.exp: continue field 1
PASS: gdb.base/store.exp: next field 1
PASS: gdb.base/store.exp: old field 1
PASS: gdb.base/store.exp: set variable u = F_1
PASS: gdb.base/store.exp: new field 1
PASS: gdb.base/store.exp: set variable u = F_1, u.i = f_1.i
PASS: gdb.base/store.exp: f_1.i
PASS: gdb.base/store.exp: set variable u = F_1, u.j = f_1.j
PASS: gdb.base/store.exp: f_1.j
PASS: gdb.base/store.exp: set variable u = F_1, u.k = f_1.k
PASS: gdb.base/store.exp: f_1.k
PASS: gdb.base/store.exp: set variable u = f_1, u.i = F_1.i
PASS: gdb.base/store.exp: F_1.i
PASS: gdb.base/store.exp: set variable u = f_1, u.j = F_1.j
PASS: gdb.base/store.exp: F_1.j
PASS: gdb.base/store.exp: set variable u = f_1, u.k = F_1.k
PASS: gdb.base/store.exp: F_1.k
PASS: gdb.base/store.exp: tbreak wack_field_2
PASS: gdb.base/store.exp: continue field 2
PASS: gdb.base/store.exp: next field 2
PASS: gdb.base/store.exp: old field 2
PASS: gdb.base/store.exp: set variable u = F_2
PASS: gdb.base/store.exp: new field 2
PASS: gdb.base/store.exp: set variable u = F_2, u.i = f_2.i
PASS: gdb.base/store.exp: f_2.i
PASS: gdb.base/store.exp: set variable u = F_2, u.j = f_2.j
PASS: gdb.base/store.exp: f_2.j
PASS: gdb.base/store.exp: set variable u = F_2, u.k = f_2.k
PASS: gdb.base/store.exp: f_2.k
PASS: gdb.base/store.exp: set variable u = f_2, u.i = F_2.i
PASS: gdb.base/store.exp: F_2.i
PASS: gdb.base/store.exp: set variable u = f_2, u.j = F_2.j
PASS: gdb.base/store.exp: F_2.j
PASS: gdb.base/store.exp: set variable u = f_2, u.k = F_2.k
PASS: gdb.base/store.exp: F_2.k
PASS: gdb.base/store.exp: tbreak wack_field_3
PASS: gdb.base/store.exp: continue field 3
PASS: gdb.base/store.exp: next field 3
PASS: gdb.base/store.exp: old field 3
PASS: gdb.base/store.exp: set variable u = F_3
PASS: gdb.base/store.exp: new field 3
PASS: gdb.base/store.exp: set variable u = F_3, u.i = f_3.i
PASS: gdb.base/store.exp: f_3.i
PASS: gdb.base/store.exp: set variable u = F_3, u.j = f_3.j
PASS: gdb.base/store.exp: f_3.j
PASS: gdb.base/store.exp: set variable u = F_3, u.k = f_3.k
PASS: gdb.base/store.exp: f_3.k
PASS: gdb.base/store.exp: set variable u = f_3, u.i = F_3.i
PASS: gdb.base/store.exp: F_3.i
PASS: gdb.base/store.exp: set variable u = f_3, u.j = F_3.j
PASS: gdb.base/store.exp: F_3.j
PASS: gdb.base/store.exp: set variable u = f_3, u.k = F_3.k
PASS: gdb.base/store.exp: F_3.k
PASS: gdb.base/store.exp: tbreak wack_field_4
PASS: gdb.base/store.exp: continue field 4
PASS: gdb.base/store.exp: next field 4
PASS: gdb.base/store.exp: old field 4
PASS: gdb.base/store.exp: set variable u = F_4
PASS: gdb.base/store.exp: new field 4
PASS: gdb.base/store.exp: set variable u = F_4, u.i = f_4.i
PASS: gdb.base/store.exp: f_4.i
PASS: gdb.base/store.exp: set variable u = F_4, u.j = f_4.j
PASS: gdb.base/store.exp: f_4.j
PASS: gdb.base/store.exp: set variable u = F_4, u.k = f_4.k
PASS: gdb.base/store.exp: f_4.k
PASS: gdb.base/store.exp: set variable u = f_4, u.i = F_4.i
PASS: gdb.base/store.exp: F_4.i
PASS: gdb.base/store.exp: set variable u = f_4, u.j = F_4.j
PASS: gdb.base/store.exp: F_4.j
PASS: gdb.base/store.exp: set variable u = f_4, u.k = F_4.k
PASS: gdb.base/store.exp: F_4.k
Running ../../../gdb/testsuite/gdb.base/sigaltstack.exp ...
Running ../../../gdb/testsuite/gdb.base/call-strs.exp ...
XFAIL: gdb.base/call-strs.exp: This target can not call functions (PRMS 2416)
Running ../../../gdb/testsuite/gdb.base/fullname.exp ...
PASS: gdb.base/fullname.exp: set breakpoint by full path before loading symbols - built absolute
PASS: gdb.base/fullname.exp: set breakpoint at main - built absolute
PASS: gdb.base/fullname.exp: set breakpoint by full path after loading symbols - built absolute
PASS: gdb.base/fullname.exp: set breakpoint by full path before loading symbols - built relative
PASS: gdb.base/fullname.exp: set breakpoint at main - built relative
PASS: gdb.base/fullname.exp: set breakpoint by full path after loading symbols - built relative
PASS: gdb.base/fullname.exp: set breakpoint by full path before loading symbols - built other
PASS: gdb.base/fullname.exp: set breakpoint at main - built other
PASS: gdb.base/fullname.exp: set breakpoint by full path after loading symbols - built other
Running ../../../gdb/testsuite/gdb.base/nofield.exp ...
PASS: gdb.base/nofield.exp: ptype struct not_empty
PASS: gdb.base/nofield.exp: ptype struct empty
PASS: gdb.base/nofield.exp: ptype union empty_union
Running ../../../gdb/testsuite/gdb.base/complex.exp ...
gdb compile failed, ../../../gdb/testsuite/gdb.base/complex.c:24: error: __complex__ type not currently supported
UNSUPPORTED: gdb.base/complex.exp: print complex packed value in C
UNSUPPORTED: gdb.base/complex.exp: print complex value in C
Running ../../../gdb/testsuite/gdb.base/bigcore.exp ...
UNTESTED: gdb.base/bigcore.exp: Remote system
Running ../../../gdb/testsuite/gdb.base/savedregs.exp ...
Running ../../../gdb/testsuite/gdb.base/pr11022.exp ...
PASS: gdb.base/pr11022.exp: set breakpoint
PASS: gdb.base/pr11022.exp: set watchpoint
PASS: gdb.base/pr11022.exp: breakpoint hit
PASS: gdb.base/pr11022.exp: watchpoint hit
PASS: gdb.base/pr11022.exp: breakpoint hit 2
PASS: gdb.base/pr11022.exp: set var x = 1
PASS: gdb.base/pr11022.exp: watchpoint hit 2
Running ../../../gdb/testsuite/gdb.base/whatis.exp ...
PASS: gdb.base/whatis.exp: whatis char
PASS: gdb.base/whatis.exp: whatis signed char
PASS: gdb.base/whatis.exp: whatis unsigned char
PASS: gdb.base/whatis.exp: whatis short
PASS: gdb.base/whatis.exp: whatis signed short
PASS: gdb.base/whatis.exp: whatis unsigned short
PASS: gdb.base/whatis.exp: whatis int
PASS: gdb.base/whatis.exp: whatis signed int
PASS: gdb.base/whatis.exp: whatis unsigned int
PASS: gdb.base/whatis.exp: whatis long
PASS: gdb.base/whatis.exp: whatis signed long
PASS: gdb.base/whatis.exp: whatis unsigned long
PASS: gdb.base/whatis.exp: whatis unsigned long long
PASS: gdb.base/whatis.exp: whatis float
PASS: gdb.base/whatis.exp: whatis double
PASS: gdb.base/whatis.exp: whatis char array
PASS: gdb.base/whatis.exp: whatis signed char array
PASS: gdb.base/whatis.exp: whatis unsigned char array
PASS: gdb.base/whatis.exp: whatis short array
PASS: gdb.base/whatis.exp: whatis signed short array
PASS: gdb.base/whatis.exp: whatis unsigned short array
PASS: gdb.base/whatis.exp: whatis int array
PASS: gdb.base/whatis.exp: whatis signed int array
PASS: gdb.base/whatis.exp: whatis unsigned int array
PASS: gdb.base/whatis.exp: whatis long array
PASS: gdb.base/whatis.exp: whatis signed long array
PASS: gdb.base/whatis.exp: whatis unsigned long array
PASS: gdb.base/whatis.exp: whatis unsigned long array
PASS: gdb.base/whatis.exp: whatis float array
PASS: gdb.base/whatis.exp: whatis double array
PASS: gdb.base/whatis.exp: whatis char pointer
PASS: gdb.base/whatis.exp: whatis signed char pointer
PASS: gdb.base/whatis.exp: whatis unsigned char pointer
PASS: gdb.base/whatis.exp: whatis short pointer
PASS: gdb.base/whatis.exp: whatis signed short pointer
PASS: gdb.base/whatis.exp: whatis unsigned short pointer
PASS: gdb.base/whatis.exp: whatis int pointer
PASS: gdb.base/whatis.exp: whatis signed int pointer
PASS: gdb.base/whatis.exp: whatis unsigned int pointer
PASS: gdb.base/whatis.exp: whatis long pointer
PASS: gdb.base/whatis.exp: whatis signed long pointer
PASS: gdb.base/whatis.exp: whatis unsigned long pointer
PASS: gdb.base/whatis.exp: whatis long long pointer
PASS: gdb.base/whatis.exp: whatis signed long long pointer
PASS: gdb.base/whatis.exp: whatis unsigned long long pointer
PASS: gdb.base/whatis.exp: whatis float pointer
PASS: gdb.base/whatis.exp: whatis double pointer
PASS: gdb.base/whatis.exp: whatis named structure
PASS: gdb.base/whatis.exp: whatis named structure using type name
PASS: gdb.base/whatis.exp: whatis unnamed structure
PASS: gdb.base/whatis.exp: whatis named union
PASS: gdb.base/whatis.exp: whatis named union using type name
PASS: gdb.base/whatis.exp: whatis unnamed union
PASS: gdb.base/whatis.exp: whatis char function
PASS: gdb.base/whatis.exp: whatis signed char function
PASS: gdb.base/whatis.exp: whatis unsigned char function
PASS: gdb.base/whatis.exp: whatis short function
PASS: gdb.base/whatis.exp: whatis signed short function
PASS: gdb.base/whatis.exp: whatis unsigned short function
PASS: gdb.base/whatis.exp: whatis int function
PASS: gdb.base/whatis.exp: whatis signed int function
PASS: gdb.base/whatis.exp: whatis unsigned int function
PASS: gdb.base/whatis.exp: whatis long function
PASS: gdb.base/whatis.exp: whatis signed long function
PASS: gdb.base/whatis.exp: whatis unsigned long function
PASS: gdb.base/whatis.exp: whatis long long function
PASS: gdb.base/whatis.exp: whatis signed long long function
PASS: gdb.base/whatis.exp: whatis unsigned long long function
PASS: gdb.base/whatis.exp: whatis float function
PASS: gdb.base/whatis.exp: whatis double function
PASS: gdb.base/whatis.exp: whatis complicated structure
PASS: gdb.base/whatis.exp: whatis complicated union
PASS: gdb.base/whatis.exp: whatis enumeration
PASS: gdb.base/whatis.exp: whatis enumeration using type name
PASS: gdb.base/whatis.exp: whatis outer structure
PASS: gdb.base/whatis.exp: whatis outer structure member
PASS: gdb.base/whatis.exp: whatis inner structure
PASS: gdb.base/whatis.exp: whatis inner structure member
PASS: gdb.base/whatis.exp: whatis inner union
PASS: gdb.base/whatis.exp: whatis inner union member
PASS: gdb.base/whatis.exp: whatis using typedef type name
PASS: gdb.base/whatis.exp: whatis applied to variable defined by typedef
Running ../../../gdb/testsuite/gdb.base/prelink.exp ...
Running ../../../gdb/testsuite/gdb.base/siginfo-obj.exp ...
Running ../../../gdb/testsuite/gdb.base/completion.exp ...
PASS: gdb.base/completion.exp: complete 'hfgfh'
PASS: gdb.base/completion.exp: complete 'show output'
PASS: gdb.base/completion.exp: complete 'show output-'
PASS: gdb.base/completion.exp: complete 'p'
PASS: gdb.base/completion.exp: complete 'p '
PASS: gdb.base/completion.exp: complete 'info t foo'
PASS: gdb.base/completion.exp: complete 'info t'
PASS: gdb.base/completion.exp: complete 'info t '
PASS: gdb.base/completion.exp: complete 'info asdfgh'
PASS: gdb.base/completion.exp: complete 'info asdfgh '
PASS: gdb.base/completion.exp: complete 'info'
PASS: gdb.base/completion.exp: complete 'info '
PASS: gdb.base/completion.exp: complete (2) 'info '
PASS: gdb.base/completion.exp: complete help info wat
PASS: gdb.base/completion.exp: complete 'p "break1'
XFAIL: gdb.base/completion.exp: complete 'p "break1.'
PASS: gdb.base/completion.exp: complete 'p 'arg'
PASS: gdb.base/completion.exp: complete (2) 'p 'arg'
PASS: gdb.base/completion.exp: complete 'p no_var_named_this-arg'
PASS: gdb.base/completion.exp: complete (2) 'p no_var_named_this-arg'
PASS: gdb.base/completion.exp: complete (2) 'p no_var_named_this-'
PASS: gdb.base/completion.exp: complete 'p values[0].a'
PASS: gdb.base/completion.exp: complete 'p values[0] . a'
PASS: gdb.base/completion.exp: complete 'p &values[0] -> a'
PASS: gdb.base/completion.exp: cd to ${srcdir}
PASS: gdb.base/completion.exp: directory completion
PASS: gdb.base/completion.exp: directory completion 2
PASS: gdb.base/completion.exp: Glob remaining of directory test
PASS: gdb.base/completion.exp: complete-command 'file ./gdb.base/compl'
PASS: gdb.base/completion.exp: complete 'file ./gdb.base/complet'
PASS: gdb.base/completion.exp: complete 'info func marke'
PASS: gdb.base/completion.exp: complete 'set follow-fork-mode'
PASS: gdb.base/completion.exp: Completing non-existing component
PASS: gdb.base/completion.exp: Completing non-existing component #2
Running ../../../gdb/testsuite/gdb.base/constvars.exp ...
PASS: gdb.base/constvars.exp: up from marker1
PASS: gdb.base/constvars.exp: ptype qux1
PASS: gdb.base/constvars.exp: print lave
PASS: gdb.base/constvars.exp: ptype lave
PASS: gdb.base/constvars.exp: print lavish
PASS: gdb.base/constvars.exp: ptype lavish
PASS: gdb.base/constvars.exp: print lax
PASS: gdb.base/constvars.exp: ptype lax
PASS: gdb.base/constvars.exp: print lecherous
PASS: gdb.base/constvars.exp: ptype lecherous
PASS: gdb.base/constvars.exp: print lechery
PASS: gdb.base/constvars.exp: ptype lechery
PASS: gdb.base/constvars.exp: print lectern
PASS: gdb.base/constvars.exp: ptype lectern
PASS: gdb.base/constvars.exp: print leeway
PASS: gdb.base/constvars.exp: ptype leeway
PASS: gdb.base/constvars.exp: print legacy
PASS: gdb.base/constvars.exp: ptype legacy
PASS: gdb.base/constvars.exp: print laconic
PASS: gdb.base/constvars.exp: ptype laconic
PASS: gdb.base/constvars.exp: print laggard
PASS: gdb.base/constvars.exp: ptype laggard
PASS: gdb.base/constvars.exp: print lagoon
PASS: gdb.base/constvars.exp: ptype lagoon
PASS: gdb.base/constvars.exp: print laity
PASS: gdb.base/constvars.exp: ptype laity
PASS: gdb.base/constvars.exp: print lambent
PASS: gdb.base/constvars.exp: ptype lambent
PASS: gdb.base/constvars.exp: print laminated
PASS: gdb.base/constvars.exp: ptype laminated
PASS: gdb.base/constvars.exp: print lampoon
PASS: gdb.base/constvars.exp: ptype lampoon
PASS: gdb.base/constvars.exp: print languid
PASS: gdb.base/constvars.exp: ptype languid
PASS: gdb.base/constvars.exp: print *legend
PASS: gdb.base/constvars.exp: ptype legend
PASS: gdb.base/constvars.exp: print *legerdemain
PASS: gdb.base/constvars.exp: ptype legerdemain
PASS: gdb.base/constvars.exp: print *leniency
PASS: gdb.base/constvars.exp: ptype leniency
PASS: gdb.base/constvars.exp: print *leonine
PASS: gdb.base/constvars.exp: ptype leonine
PASS: gdb.base/constvars.exp: print *lesion
PASS: gdb.base/constvars.exp: ptype lesion
PASS: gdb.base/constvars.exp: print *lethal
PASS: gdb.base/constvars.exp: ptype lethal
PASS: gdb.base/constvars.exp: print *lethargic
PASS: gdb.base/constvars.exp: ptype lethargic
PASS: gdb.base/constvars.exp: print *levity
PASS: gdb.base/constvars.exp: ptype levity
PASS: gdb.base/constvars.exp: print *lewd
PASS: gdb.base/constvars.exp: ptype lewd
PASS: gdb.base/constvars.exp: print *lexicographer
PASS: gdb.base/constvars.exp: ptype lexicographer
PASS: gdb.base/constvars.exp: print *lexicon
PASS: gdb.base/constvars.exp: ptype lexicon
PASS: gdb.base/constvars.exp: print *liaison
PASS: gdb.base/constvars.exp: ptype liaison
PASS: gdb.base/constvars.exp: print *libation
PASS: gdb.base/constvars.exp: ptype libation
PASS: gdb.base/constvars.exp: print *libelous
PASS: gdb.base/constvars.exp: ptype libelous
PASS: gdb.base/constvars.exp: print *libertine
PASS: gdb.base/constvars.exp: ptype libertine
PASS: gdb.base/constvars.exp: print *libidinous
PASS: gdb.base/constvars.exp: ptype libidinous
PASS: gdb.base/constvars.exp: print *languish
PASS: gdb.base/constvars.exp: ptype languish
PASS: gdb.base/constvars.exp: print *languor
PASS: gdb.base/constvars.exp: ptype languor
PASS: gdb.base/constvars.exp: print *lank
PASS: gdb.base/constvars.exp: ptype lank
PASS: gdb.base/constvars.exp: print *lapidary
PASS: gdb.base/constvars.exp: ptype lapidary
PASS: gdb.base/constvars.exp: print *larceny
PASS: gdb.base/constvars.exp: ptype larceny
PASS: gdb.base/constvars.exp: print *largess
PASS: gdb.base/constvars.exp: ptype largess
PASS: gdb.base/constvars.exp: print *lascivious
PASS: gdb.base/constvars.exp: ptype lascivious
PASS: gdb.base/constvars.exp: print *lassitude
PASS: gdb.base/constvars.exp: ptype lassitude
PASS: gdb.base/constvars.exp: print *lamprey
PASS: gdb.base/constvars.exp: ptype lamprey
PASS: gdb.base/constvars.exp: print *lariat
PASS: gdb.base/constvars.exp: ptype lariat
PASS: gdb.base/constvars.exp: print *laudanum
PASS: gdb.base/constvars.exp: ptype laudanum
PASS: gdb.base/constvars.exp: print *lecithin
PASS: gdb.base/constvars.exp: ptype lecithin
PASS: gdb.base/constvars.exp: print *leviathan
PASS: gdb.base/constvars.exp: ptype leviathan
PASS: gdb.base/constvars.exp: print *libretto
PASS: gdb.base/constvars.exp: ptype libretto
PASS: gdb.base/constvars.exp: print *lissome
PASS: gdb.base/constvars.exp: ptype lissome
PASS: gdb.base/constvars.exp: print *locust
PASS: gdb.base/constvars.exp: ptype locust
PASS: gdb.base/constvars.exp: ptype crass
PASS: gdb.base/constvars.exp: ptype crisp
Running ../../../gdb/testsuite/gdb.base/sigchld.exp ...
Running ../../../gdb/testsuite/gdb.base/sep.exp ...
PASS: gdb.base/sep.exp: list using location inside included file
PASS: gdb.base/sep.exp: breakpoint inside included file
Running ../../../gdb/testsuite/gdb.base/consecutive.exp ...
PASS: gdb.base/consecutive.exp: continue to breakpoint in foo
PASS: gdb.base/consecutive.exp: get breakpoint address for foo
PASS: gdb.base/consecutive.exp: set bp, 2nd instr
PASS: gdb.base/consecutive.exp: stopped at bp, 2nd instr
Running ../../../gdb/testsuite/gdb.base/expand-psymtabs.exp ...
PASS: gdb.base/expand-psymtabs.exp: Expand psymtabs
Running ../../../gdb/testsuite/gdb.base/attach.exp ...
Running ../../../gdb/testsuite/gdb.base/gdb1056.exp ...
PASS: gdb.base/gdb1056.exp: print 1/0
PASS: gdb.base/gdb1056.exp: Test unsigned division by zero
Running ../../../gdb/testsuite/gdb.base/ifelse.exp ...
PASS: gdb.base/ifelse.exp: if 1 with empty body
PASS: gdb.base/ifelse.exp: if 0 with empty body
PASS: gdb.base/ifelse.exp: if 1 .. else with empty body
PASS: gdb.base/ifelse.exp: if 0 .. else with empty body
PASS: gdb.base/ifelse.exp: create define with empty else
PASS: gdb.base/ifelse.exp: call original define
PASS: gdb.base/ifelse.exp: replace define with if .. else with empty body
PASS: gdb.base/ifelse.exp: call replacement define
Running ../../../gdb/testsuite/gdb.base/step-line.exp ...
FAIL: gdb.base/step-line.exp: break f1
FAIL: gdb.base/step-line.exp: continue to f1
FAIL: gdb.base/step-line.exp: next over dummy 1
FAIL: gdb.base/step-line.exp: next to dummy 2
FAIL: gdb.base/step-line.exp: next over dummy 2
FAIL: gdb.base/step-line.exp: step into f2
FAIL: gdb.base/step-line.exp: next over dummy 4
FAIL: gdb.base/step-line.exp: next to dummy 5
FAIL: gdb.base/step-line.exp: next to dummy 6
FAIL: gdb.base/step-line.exp: next over dummy 6
FAIL: gdb.base/step-line.exp: next to dummy 7
FAIL: gdb.base/step-line.exp: next to dummy 8
FAIL: gdb.base/step-line.exp: next over dummy 8
FAIL: gdb.base/step-line.exp: next to dummy 9
FAIL: gdb.base/step-line.exp: next to dummy 10
FAIL: gdb.base/step-line.exp: next over dummy 10
Running ../../../gdb/testsuite/gdb.base/frame-args.exp ...
PASS: gdb.base/frame-args.exp: set print frame-arguments all
PASS: gdb.base/frame-args.exp: frame 1 with print frame-arguments set to all
PASS: gdb.base/frame-args.exp: set print frame-arguments scalars
PASS: gdb.base/frame-args.exp: frame 1 with print frame-arguments set to scalars
PASS: gdb.base/frame-args.exp: set print frame-arguments none
PASS: gdb.base/frame-args.exp: frame 1 with print frame-arguments set to none
Running ../../../gdb/testsuite/gdb.base/watchpoint-hw.exp ...
Running ../../../gdb/testsuite/gdb.base/term.exp ...
Running ../../../gdb/testsuite/gdb.base/pending.exp ...
Running ../../../gdb/testsuite/gdb.base/sigall.exp ...
Running ../../../gdb/testsuite/gdb.base/cond-expr.exp ...
PASS: gdb.base/cond-expr.exp: print value of cond expr (const true)
PASS: gdb.base/cond-expr.exp: print value of cond expr (const false)
PASS: gdb.base/cond-expr.exp: set variable x=14
PASS: gdb.base/cond-expr.exp: set variable y=2
PASS: gdb.base/cond-expr.exp: set variable z=3
PASS: gdb.base/cond-expr.exp: print value of cond expr (var true)
PASS: gdb.base/cond-expr.exp: set variable x=0
PASS: gdb.base/cond-expr.exp: print value of cond expr (var false)
PASS: gdb.base/cond-expr.exp: print whatis of cond expr
Running ../../../gdb/testsuite/gdb.base/eval-skip.exp ...
PASS: gdb.base/eval-skip.exp: set variable x=14
PASS: gdb.base/eval-skip.exp: set variable y=2
PASS: gdb.base/eval-skip.exp: set variable z=2
PASS: gdb.base/eval-skip.exp: set variable w=3
PASS: gdb.base/eval-skip.exp: print value of (0 && (x+y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x-y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x*y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x/y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x%y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x&&y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x||y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x&y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x|y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x^y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x < y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x <= y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x>y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x>=y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x==y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x!=y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x<<31))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x>>31))
PASS: gdb.base/eval-skip.exp: print value of (0 && (!x))
PASS: gdb.base/eval-skip.exp: print value of (0 && (~x))
PASS: gdb.base/eval-skip.exp: print value of (0 && (-x))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x++))
PASS: gdb.base/eval-skip.exp: print value of (0 && (++x))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x--))
PASS: gdb.base/eval-skip.exp: print value of (0 && (--x))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x+=7))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x=y))
Running ../../../gdb/testsuite/gdb.base/watchpoint-cond-gone.exp ...
PASS: gdb.base/watchpoint-cond-gone.exp: set can-use-hw-watchpoints 0
PASS: gdb.base/watchpoint-cond-gone.exp: continue to breakpoint: Place to set the watchpoint
PASS: gdb.base/watchpoint-cond-gone.exp: Place the watchpoint
PASS: gdb.base/watchpoint-cond-gone.exp: Catch the no longer valid watchpoint
Running ../../../gdb/testsuite/gdb.base/remotetimeout.exp ...
Running ../../../gdb/testsuite/gdb.base/code-expr.exp ...
PASS: gdb.base/code-expr.exp: (@code char)
PASS: gdb.base/code-expr.exp: (@code signed char)
PASS: gdb.base/code-expr.exp: (@code unsigned char)
PASS: gdb.base/code-expr.exp: (@code short)
PASS: gdb.base/code-expr.exp: (@code signed short)
PASS: gdb.base/code-expr.exp: (@code unsigned short)
PASS: gdb.base/code-expr.exp: (@code int)
PASS: gdb.base/code-expr.exp: (@code signed int)
PASS: gdb.base/code-expr.exp: (@code unsigned int)
PASS: gdb.base/code-expr.exp: (@code long)
PASS: gdb.base/code-expr.exp: (@code signed long)
PASS: gdb.base/code-expr.exp: (@code unsigned long)
PASS: gdb.base/code-expr.exp: (@code long long)
PASS: gdb.base/code-expr.exp: (@code signed long long)
PASS: gdb.base/code-expr.exp: (@code unsigned long long)
PASS: gdb.base/code-expr.exp: (@code float)
PASS: gdb.base/code-expr.exp: (@code double)
PASS: gdb.base/code-expr.exp: (@data char)
PASS: gdb.base/code-expr.exp: (@data signed char)
PASS: gdb.base/code-expr.exp: (@data unsigned char)
PASS: gdb.base/code-expr.exp: (@data short)
PASS: gdb.base/code-expr.exp: (@data signed short)
PASS: gdb.base/code-expr.exp: (@data unsigned short)
PASS: gdb.base/code-expr.exp: (@data int)
PASS: gdb.base/code-expr.exp: (@data signed int)
PASS: gdb.base/code-expr.exp: (@data unsigned int)
PASS: gdb.base/code-expr.exp: (@data long)
PASS: gdb.base/code-expr.exp: (@data signed long)
PASS: gdb.base/code-expr.exp: (@data unsigned long)
PASS: gdb.base/code-expr.exp: (@data long long)
PASS: gdb.base/code-expr.exp: (@data signed long long)
PASS: gdb.base/code-expr.exp: (@data unsigned long long)
PASS: gdb.base/code-expr.exp: (@data float)
PASS: gdb.base/code-expr.exp: (@data double)
PASS: gdb.base/code-expr.exp: (char @code)
PASS: gdb.base/code-expr.exp: (signed char @code)
PASS: gdb.base/code-expr.exp: (unsigned char @code)
PASS: gdb.base/code-expr.exp: (short @code)
PASS: gdb.base/code-expr.exp: (signed short @code)
PASS: gdb.base/code-expr.exp: (unsigned short @code)
PASS: gdb.base/code-expr.exp: (int @code)
PASS: gdb.base/code-expr.exp: (signed int @code)
PASS: gdb.base/code-expr.exp: (unsigned int @code)
PASS: gdb.base/code-expr.exp: (long @code)
PASS: gdb.base/code-expr.exp: (signed long @code)
PASS: gdb.base/code-expr.exp: (unsigned long @code)
PASS: gdb.base/code-expr.exp: (long long @code)
PASS: gdb.base/code-expr.exp: (signed long long @code)
PASS: gdb.base/code-expr.exp: (unsigned long long @code)
PASS: gdb.base/code-expr.exp: (float @code)
PASS: gdb.base/code-expr.exp: (double @code)
PASS: gdb.base/code-expr.exp: (char @data)
PASS: gdb.base/code-expr.exp: (signed char @data)
PASS: gdb.base/code-expr.exp: (unsigned char @data)
PASS: gdb.base/code-expr.exp: (short @data)
PASS: gdb.base/code-expr.exp: (signed short @data)
PASS: gdb.base/code-expr.exp: (unsigned short @data)
PASS: gdb.base/code-expr.exp: (int @data)
PASS: gdb.base/code-expr.exp: (signed int @data)
PASS: gdb.base/code-expr.exp: (unsigned int @data)
PASS: gdb.base/code-expr.exp: (long @data)
PASS: gdb.base/code-expr.exp: (signed long @data)
PASS: gdb.base/code-expr.exp: (unsigned long @data)
PASS: gdb.base/code-expr.exp: (long long @data)
PASS: gdb.base/code-expr.exp: (signed long long @data)
PASS: gdb.base/code-expr.exp: (unsigned long long @data)
PASS: gdb.base/code-expr.exp: (float @data)
PASS: gdb.base/code-expr.exp: (double @data)
PASS: gdb.base/code-expr.exp: (@code enum misordered)
PASS: gdb.base/code-expr.exp: (enum misordered @code)
PASS: gdb.base/code-expr.exp: (@data enum misordered)
PASS: gdb.base/code-expr.exp: (enum misordered @data)
PASS: gdb.base/code-expr.exp: (@code int *)
PASS: gdb.base/code-expr.exp: (int @code *)
PASS: gdb.base/code-expr.exp: (int * @code)
PASS: gdb.base/code-expr.exp: (@code int * @code)
PASS: gdb.base/code-expr.exp: (int @code * @code)
PASS: gdb.base/code-expr.exp: (@code int **)
PASS: gdb.base/code-expr.exp: (int @code **)
PASS: gdb.base/code-expr.exp: (int ** @code)
PASS: gdb.base/code-expr.exp: (@code int * @code *)
PASS: gdb.base/code-expr.exp: (int @code * @code *)
PASS: gdb.base/code-expr.exp: (@code int * @code * @code)
PASS: gdb.base/code-expr.exp: (int @code * @code * @code)
PASS: gdb.base/code-expr.exp: (@code struct t_struct)
PASS: gdb.base/code-expr.exp: (@code union t_union)
PASS: gdb.base/code-expr.exp: (struct t_struct @code)
PASS: gdb.base/code-expr.exp: (union t_union @code)
PASS: gdb.base/code-expr.exp: (@code struct t_struct *)
PASS: gdb.base/code-expr.exp: (@code union t_union *)
PASS: gdb.base/code-expr.exp: (struct t_struct @code *)
PASS: gdb.base/code-expr.exp: (union t_union @code *)
PASS: gdb.base/code-expr.exp: (struct t_struct * @code)
PASS: gdb.base/code-expr.exp: (union t_union * @code)
PASS: gdb.base/code-expr.exp: (@code struct t_struct * @code)
PASS: gdb.base/code-expr.exp: (@code union t_union * @code)
PASS: gdb.base/code-expr.exp: (struct t_struct @code * @code)
PASS: gdb.base/code-expr.exp: (union t_union @code * @code)
Running ../../../gdb/testsuite/gdb.base/exe-lock.exp ...
PASS: gdb.base/exe-lock.exp: continue until program exits
Running ../../../gdb/testsuite/gdb.base/gcore-buffer-overflow.exp ...
PASS: gdb.base/gcore-buffer-overflow.exp: help gcore
PASS: gdb.base/gcore-buffer-overflow.exp: Set buffer exceeding arguments
UNSUPPORTED: gdb.base/gcore-buffer-overflow.exp: save a corefile
Running ../../../gdb/testsuite/gdb.base/solib-disc.exp ...
Running ../../../gdb/testsuite/gdb.base/commands.exp ...
PASS: gdb.base/commands.exp: set foo in gdbvar_simple_if_test
PASS: gdb.base/commands.exp: gdbvar_simple_if_test #1
PASS: gdb.base/commands.exp: gdbvar_simple_if_test #2
PASS: gdb.base/commands.exp: set foo in gdbvar_simple_while_test
PASS: gdb.base/commands.exp: gdbvar_simple_while_test #1
PASS: gdb.base/commands.exp: set foo in gdbvar complex_if_while_test
PASS: gdb.base/commands.exp: gdbvar_complex_if_while_test #1
PASS: gdb.base/commands.exp: set foo in user_defined_command_test
PASS: gdb.base/commands.exp: define mycommand in user_defined_command_test
PASS: gdb.base/commands.exp: enter commands in user_defined_command_test
PASS: gdb.base/commands.exp: execute user defined command in user_defined_command_test
PASS: gdb.base/commands.exp: display user command in user_defined_command_test
PASS: gdb.base/commands.exp: tried to deprecate non-existing command
PASS: gdb.base/commands.exp: maintenance deprecate p "new_p" /1/
PASS: gdb.base/commands.exp: p deprecated warning, with replacement
PASS: gdb.base/commands.exp: Deprecated warning goes away /1/
PASS: gdb.base/commands.exp: maintenance deprecate p "new_p" /2/
PASS: gdb.base/commands.exp: maintenance deprecate print "new_print"
PASS: gdb.base/commands.exp: both alias and command are deprecated
PASS: gdb.base/commands.exp: Deprecated warning goes away /2/
PASS: gdb.base/commands.exp: deprecate long command /1/
PASS: gdb.base/commands.exp: long command deprecated /1/
PASS: gdb.base/commands.exp: deprecate long command /2/
PASS: gdb.base/commands.exp: long command deprecated with no alternative /2/
PASS: gdb.base/commands.exp: deprecate with no arguments
PASS: gdb.base/commands.exp: stray_arg0_test #1
PASS: gdb.base/commands.exp: stray_arg0_test #2
PASS: gdb.base/commands.exp: stray_arg0_test #3
PASS: gdb.base/commands.exp: stray_arg0_test #4
PASS: gdb.base/commands.exp: source file with indented comment
PASS: gdb.base/commands.exp: recursive source test
PASS: gdb.base/commands.exp: set $tem in if_commands_test
PASS: gdb.base/commands.exp: if $tem == 2 - if_commands_test 1
PASS: gdb.base/commands.exp: break main - if_commands_test 1
PASS: gdb.base/commands.exp: else - if_commands_test 1
PASS: gdb.base/commands.exp: break factorial - if_commands_test 1
PASS: gdb.base/commands.exp: commands - if_commands_test 1
PASS: gdb.base/commands.exp: silent - if_commands_test 1
PASS: gdb.base/commands.exp: set $tem = 3 - if_commands_test 1
PASS: gdb.base/commands.exp: continue - if_commands_test 1
PASS: gdb.base/commands.exp: first end - if_commands_test 1
PASS: gdb.base/commands.exp: second end - if_commands_test 1
PASS: gdb.base/commands.exp: if $tem == 1 - if_commands_test 2
PASS: gdb.base/commands.exp: break main - if_commands_test 2
PASS: gdb.base/commands.exp: else - if_commands_test 2
PASS: gdb.base/commands.exp: break factorial - if_commands_test 2
PASS: gdb.base/commands.exp: commands - if_commands_test 2
PASS: gdb.base/commands.exp: silent - if_commands_test 2
PASS: gdb.base/commands.exp: set $tem = 3 - if_commands_test 2
PASS: gdb.base/commands.exp: continue - if_commands_test 2
PASS: gdb.base/commands.exp: first end - if_commands_test 2
PASS: gdb.base/commands.exp: second end - if_commands_test 2
PASS: gdb.base/commands.exp: define one
PASS: gdb.base/commands.exp: define hook-one
PASS: gdb.base/commands.exp: define one in redefine_hook_test
PASS: gdb.base/commands.exp: enter commands for one redefinition in redefine_hook_test
PASS: gdb.base/commands.exp: execute one command in redefine_hook_test
PASS: gdb.base/commands.exp: define backtrace in redefine_backtrace_test
PASS: gdb.base/commands.exp: enter commands in redefine_backtrace_test
PASS: gdb.base/commands.exp: execute backtrace command in redefine_backtrace_test
PASS: gdb.base/commands.exp: execute bt command in redefine_backtrace_test
Running ../../../gdb/testsuite/gdb.base/info-proc.exp ...
Running ../../../gdb/testsuite/gdb.base/watchpoints.exp ...
PASS: gdb.base/watchpoints.exp: watchpoint hit, first time
PASS: gdb.base/watchpoints.exp: watchpoint hit, first time
PASS: gdb.base/watchpoints.exp: Watchpoint hit count is 1
PASS: gdb.base/watchpoints.exp: watchpoint ival1 hit, second time
PASS: gdb.base/watchpoints.exp: Watchpoint ival1 hit count is 2
PASS: gdb.base/watchpoints.exp: watchpoint hit, second time
PASS: gdb.base/watchpoints.exp: Watchpoint hit count is 2
PASS: gdb.base/watchpoints.exp: watchpoint ival1 hit, third time
PASS: gdb.base/watchpoints.exp: Watchpoint ival1 hit count is 3
PASS: gdb.base/watchpoints.exp: watchpoint hit, third time
PASS: gdb.base/watchpoints.exp: Watchpoint hit count is 3
PASS: gdb.base/watchpoints.exp: watchpoint hit, fourth time
PASS: gdb.base/watchpoints.exp: Watchpoint hit count is 4
PASS: gdb.base/watchpoints.exp: watchpoint hit, fifth time
PASS: gdb.base/watchpoints.exp: Watchpoint hit count is 5
Running ../../../gdb/testsuite/gdb.base/trace-commands.exp ...
PASS: gdb.base/trace-commands.exp: show trace-commands says off
PASS: gdb.base/trace-commands.exp: source -v
PASS: gdb.base/trace-commands.exp: set trace-commands
PASS: gdb.base/trace-commands.exp: show trace-commands says on
PASS: gdb.base/trace-commands.exp: simple trace-commands test
PASS: gdb.base/trace-commands.exp: nested trace-commands test
PASS: gdb.base/trace-commands.exp: define user command
PASS: gdb.base/trace-commands.exp: nested trace-commands test with source
PASS: gdb.base/trace-commands.exp: depth resets on error part 1
PASS: gdb.base/trace-commands.exp: depth resets on error part 2
Running ../../../gdb/testsuite/gdb.base/longjmp.exp ...
gdb compile failed, In file included from ../../../gdb/testsuite/gdb.base/longjmp.c:19:
/work1/friss/tools/open64/osprey/targia32_k1/devimage/include/setjmp.h:14: error: parse error before "__jmpb"
/work1/friss/tools/open64/osprey/targia32_k1/devimage/include/setjmp.h:15: error: parse error before "__jmpb"
../../../gdb/testsuite/gdb.base/longjmp.c:21: error: parse error before "env"
../../../gdb/testsuite/gdb.base/longjmp.c:27: error: parse error before '*' token
../../../gdb/testsuite/gdb.base/longjmp.c: In function `call_longjmp':
../../../gdb/testsuite/gdb.base/longjmp.c:30: error: `buf' undeclared (first use in this function)
../../../gdb/testsuite/gdb.base/longjmp.c:30: error: (Each undeclared identifier is reported only once
../../../gdb/testsuite/gdb.base/longjmp.c:30: error: for each function it appears in.)
UNTESTED: gdb.base/longjmp.exp: longjmp.exp
Running ../../../gdb/testsuite/gdb.base/list.exp ...
PASS: gdb.base/list.exp: set width 0
PASS: gdb.base/list.exp: show default list size
UNSUPPORTED: gdb.base/list.exp: list default lines around main
PASS: gdb.base/list.exp: setting listsize to 1 #1
PASS: gdb.base/list.exp: show listsize 1 #1
PASS: gdb.base/list.exp: list line 1 with listsize 1
PASS: gdb.base/list.exp: list line 2 with listsize 1
PASS: gdb.base/list.exp: setting listsize to 2 #2
PASS: gdb.base/list.exp: show listsize 2 #2
PASS: gdb.base/list.exp: list line 1 with listsize 2
PASS: gdb.base/list.exp: list line 2 with listsize 2
PASS: gdb.base/list.exp: list line 3 with listsize 2
PASS: gdb.base/list.exp: setting listsize to 3 #3
PASS: gdb.base/list.exp: show listsize 3 #3
PASS: gdb.base/list.exp: list line 1 with listsize 3
PASS: gdb.base/list.exp: list line 2 with listsize 3
PASS: gdb.base/list.exp: list line 3 with listsize 3
PASS: gdb.base/list.exp: setting listsize to 4 #4
PASS: gdb.base/list.exp: show listsize 4 #4
PASS: gdb.base/list.exp: list line 1 with listsize 4
PASS: gdb.base/list.exp: list line 2 with listsize 4
PASS: gdb.base/list.exp: list line 3 with listsize 4
PASS: gdb.base/list.exp: list line 4 with listsize 4
PASS: gdb.base/list.exp: setting listsize to 100 #5
PASS: gdb.base/list.exp: show listsize 100 #5
PASS: gdb.base/list.exp: list line 1 with listsize 100
PASS: gdb.base/list.exp: list line 10 with listsize 100
PASS: gdb.base/list.exp: setting listsize to 0 #6
PASS: gdb.base/list.exp: show listsize unlimited #6
PASS: gdb.base/list.exp: listsize of 0 suppresses output
PASS: gdb.base/list.exp: setting listsize to -1 #7
PASS: gdb.base/list.exp: show listsize unlimited #7
XFAIL: gdb.base/list.exp: list line 1 with unlimited listsize
PASS: gdb.base/list.exp: setting listsize to 10 #8
PASS: gdb.base/list.exp: show listsize 10 #8
PASS: gdb.base/list.exp: list line 1 in include file
PASS: gdb.base/list.exp: list message for lines past EOF
PASS: gdb.base/list.exp: list filename:number (4 tests)
PASS: gdb.base/list.exp: list function in source file 1
PASS: gdb.base/list.exp: list function in source file 2
PASS: gdb.base/list.exp: list function in include file
PASS: gdb.base/list.exp: successive list commands to page forward (4 tests)
PASS: gdb.base/list.exp: 4 successive "list -" commands to page backwards
PASS: gdb.base/list.exp: repeat list commands to page forward using 'return' (4 tests)
PASS: gdb.base/list.exp: list range; filename:line1,filename:line2
PASS: gdb.base/list.exp: list range; line1,line2
PASS: gdb.base/list.exp: list range; upper bound past EOF
PASS: gdb.base/list.exp: list range; both bounds past EOF
PASS: gdb.base/list.exp: list range, must be same files
PASS: gdb.base/list.exp: list filename:function (5 tests)
PASS: gdb.base/list.exp: list 'list0.c:main'
XFAIL: gdb.base/list.exp: list filename:function; wrong filename rejected
PASS: gdb.base/list.exp: list filename:function; nonexistant file
PASS: gdb.base/list.exp: list filename:function; nonexistant function
PASS: gdb.base/list.exp: set listsize 4
PASS: gdb.base/list.exp: list long_line
PASS: gdb.base/list.exp: search 4321
PASS: gdb.base/list.exp: search 6789
PASS: gdb.base/list.exp: search extremely long line (> 5000 chars)
Running ../../../gdb/testsuite/gdb.base/watchpoint-solib.exp ...
Running ../../../gdb/testsuite/gdb.base/remote.exp ...
PASS: gdb.base/remote.exp: write-packet default
PASS: gdb.base/remote.exp: set write-packet - NULL
PASS: gdb.base/remote.exp: set remote memory-write-packet-size 20
PASS: gdb.base/remote.exp: set write-packet - small
PASS: gdb.base/remote.exp: set remote memory-write-packet-size 1
PASS: gdb.base/remote.exp: set write-packet - very-small
PASS: gdb.base/remote.exp: timed download `remote' - limit, 398 - set packet size
PASS: gdb.base/remote.exp: timed download `remote' - limit, 398
PASS: gdb.base/remote.exp: timed download `remote' - limit, 400 - set packet size
PASS: gdb.base/remote.exp: timed download `remote' - limit, 400
PASS: gdb.base/remote.exp: timed download `remote' - fixed, 0 - set packet size
PASS: gdb.base/remote.exp: timed download `remote' - fixed, 0 - set write size class
PASS: gdb.base/remote.exp: timed download `remote' - fixed, 16385 - set packet size
PASS: gdb.base/remote.exp: timed download `remote' - limit, 0 - set packet size
PASS: gdb.base/remote.exp: timed download `remote' - limit, 0
PASS: gdb.base/remote.exp: get integer valueof "sizeof (random_data)" (49152)
PASS: gdb.base/remote.exp: x/8ub random_data
PASS: gdb.base/remote.exp: x/8ub random_data + 400 - 4
PASS: gdb.base/remote.exp: x/8ub random_data + 16384 - 4
PASS: gdb.base/remote.exp: set remote memory-read-packet-size 16
PASS: gdb.base/remote.exp: show remote memory-read-packet-size
PASS: gdb.base/remote.exp: x/17ub random_data
Running ../../../gdb/testsuite/gdb.base/step-test.exp ...
PASS: gdb.base/step-test.exp: next 1
PASS: gdb.base/step-test.exp: step 1
PASS: gdb.base/step-test.exp: next 2
PASS: gdb.base/step-test.exp: step 3
PASS: gdb.base/step-test.exp: next 3
PASS: gdb.base/step-test.exp: next over
PASS: gdb.base/step-test.exp: step into
PASS: gdb.base/step-test.exp: step out
PASS: gdb.base/step-test.exp: stepi to next line
PASS: gdb.base/step-test.exp: stepi into function
PASS: gdb.base/step-test.exp: stepi into function's first source line
PASS: gdb.base/step-test.exp: stepi: finish call
PASS: gdb.base/step-test.exp: nexti over function
PASS: gdb.base/step-test.exp: set breakpoint at call to large_struct_by_value
PASS: gdb.base/step-test.exp: run to pass large struct
PASS: gdb.base/step-test.exp: large struct by value
PASS: gdb.base/step-test.exp: continue until exit at step-test.exp
Running ../../../gdb/testsuite/gdb.base/volatile.exp ...
PASS: gdb.base/volatile.exp: ptype vox
PASS: gdb.base/volatile.exp: ptype victuals
PASS: gdb.base/volatile.exp: ptype vixen
PASS: gdb.base/volatile.exp: ptype vitriol
PASS: gdb.base/volatile.exp: ptype vellum
PASS: gdb.base/volatile.exp: ptype valve
PASS: gdb.base/volatile.exp: ptype vacuity
PASS: gdb.base/volatile.exp: ptype vertigo
PASS: gdb.base/volatile.exp: ptype vampire
PASS: gdb.base/volatile.exp: ptype viper
PASS: gdb.base/volatile.exp: ptype vigour
PASS: gdb.base/volatile.exp: ptype vapour
PASS: gdb.base/volatile.exp: ptype ventricle
PASS: gdb.base/volatile.exp: ptype vigintillion
PASS: gdb.base/volatile.exp: ptype vocation
PASS: gdb.base/volatile.exp: ptype veracity
PASS: gdb.base/volatile.exp: ptype vapidity
PASS: gdb.base/volatile.exp: ptype velocity
PASS: gdb.base/volatile.exp: ptype veneer
PASS: gdb.base/volatile.exp: ptype video
PASS: gdb.base/volatile.exp: ptype vacuum
PASS: gdb.base/volatile.exp: ptype veniality
PASS: gdb.base/volatile.exp: ptype vitality
PASS: gdb.base/volatile.exp: ptype voracity
PASS: gdb.base/volatile.exp: ptype victor
PASS: gdb.base/volatile.exp: ptype vicar
PASS: gdb.base/volatile.exp: ptype victory
PASS: gdb.base/volatile.exp: ptype vicarage
PASS: gdb.base/volatile.exp: ptype vein
PASS: gdb.base/volatile.exp: ptype vogue
PASS: gdb.base/volatile.exp: ptype cavern
PASS: gdb.base/volatile.exp: ptype coverlet
PASS: gdb.base/volatile.exp: ptype caveat
PASS: gdb.base/volatile.exp: ptype covenant
PASS: gdb.base/volatile.exp: ptype vizier
PASS: gdb.base/volatile.exp: ptype vanadium
PASS: gdb.base/volatile.exp: ptype vane
PASS: gdb.base/volatile.exp: ptype veldt
PASS: gdb.base/volatile.exp: ptype cove
PASS: gdb.base/volatile.exp: ptype cavity
PASS: gdb.base/volatile.exp: ptype vagus
PASS: gdb.base/volatile.exp: ptype vagrancy
PASS: gdb.base/volatile.exp: ptype vagary
PASS: gdb.base/volatile.exp: ptype vendor
PASS: gdb.base/volatile.exp: ptype qux2
Running ../../../gdb/testsuite/gdb.base/gdb1555.exp ...
Running ../../../gdb/testsuite/gdb.base/sepsymtab.exp ...
UNSUPPORTED: gdb.base/sepsymtab.exp: cannot produce separate debug info files
Running ../../../gdb/testsuite/gdb.base/subst.exp ...
PASS: gdb.base/subst.exp: deactivate GDB's confirmation interface
PASS: gdb.base/subst.exp: show substitute-path, no rule entered yet
PASS: gdb.base/subst.exp: show substitute-path from, no rule entered yet
PASS: gdb.base/subst.exp: show substitute-path, too many arguments
PASS: gdb.base/subst.exp: unset substitute-path from, no rule entered yet
PASS: gdb.base/subst.exp: unset substitute-path, no rule entered yet
PASS: gdb.base/subst.exp: unset substitute-path from, no rule entered yet
PASS: gdb.base/subst.exp: unset substitute-path, too many arguments
PASS: gdb.base/subst.exp: set substitute-path, too many arguments
PASS: gdb.base/subst.exp: set substitute-path, too few arguments
PASS: gdb.base/subst.exp: set substitute-path, first argument is empty string
PASS: gdb.base/subst.exp: add from -> to substitution rule
PASS: gdb.base/subst.exp: add from1 -> to1 substitution rule
PASS: gdb.base/subst.exp: add source -> destination substitution rule
PASS: gdb.base/subst.exp: add depuis -> vers substitution rule
PASS: gdb.base/subst.exp: add substitution rule to empty string
PASS: gdb.base/subst.exp: show substitute-path after all paths added
PASS: gdb.base/subst.exp: show substitute-path from, after all paths added
PASS: gdb.base/subst.exp: show substitute-path depuis, after all paths added
PASS: gdb.base/subst.exp: show substitute-path garbage, after all paths added
PASS: gdb.base/subst.exp: unset substitute-path from
PASS: gdb.base/subst.exp: show substitute-path after from rule removed
PASS: gdb.base/subst.exp: unset substitute-path from after the rule was removed
PASS: gdb.base/subst.exp: unset substitute-path depuis (middle of list)
PASS: gdb.base/subst.exp: show substitute-path after depuis rule removed
PASS: gdb.base/subst.exp: unset substitute-path empty (end of list)
PASS: gdb.base/subst.exp: show substitute-path after empty rule removed
PASS: gdb.base/subst.exp: remove all remaining substitution rules
PASS: gdb.base/subst.exp: show substitute-path after all remaining rules removed
Running ../../../gdb/testsuite/gdb.base/maint.exp ...
PASS: gdb.base/maint.exp: maint check-symtabs
PASS: gdb.base/maint.exp: maint space
PASS: gdb.base/maint.exp: maint space 1
PASS: gdb.base/maint.exp: maint time
PASS: gdb.base/maint.exp: maint time 1
PASS: gdb.base/maint.exp: maint time 0
PASS: gdb.base/maint.exp: maint space 0
PASS: gdb.base/maint.exp: maint demangle
PASS: gdb.base/maint.exp: maint demangle
PASS: gdb.base/maint.exp: maint print statistics
PASS: gdb.base/maint.exp: maint print dummy-frames
PASS: gdb.base/maint.exp: maint print objfiles: header
PASS: gdb.base/maint.exp: maint print objfiles: psymtabs
PASS: gdb.base/maint.exp: maint print objfiles: symtabs
PASS: gdb.base/maint.exp: maint print psymbols w/o args
PASS: gdb.base/maint.exp: maint print psymbols 1
PASS: gdb.base/maint.exp: shell rm -f psymbols_output
PASS: gdb.base/maint.exp: maint print msymbols w/o args
PASS: gdb.base/maint.exp: maint print msymbols
PASS: gdb.base/maint.exp: shell rm -f msymbols_output
PASS: gdb.base/maint.exp: cd to objdir
PASS: gdb.base/maint.exp: maint print msymbols
PASS: gdb.base/maint.exp: shell rm -f msymbols_output2
PASS: gdb.base/maint.exp: cd to mydir
PASS: gdb.base/maint.exp: maint print symbols w/o args
PASS: gdb.base/maint.exp: maint print symbols
PASS: gdb.base/maint.exp: shell rm -f symbols_output
PASS: gdb.base/maint.exp: maint print type
PASS: gdb.base/maint.exp: maint info sections
PASS: gdb.base/maint.exp: maint info sections .text
PASS: gdb.base/maint.exp: maint info sections CODE
PASS: gdb.base/maint.exp: maint info sections DATA
PASS: gdb.base/maint.exp: maint info breakpoints
PASS: gdb.base/maint.exp: maint print w/o args
PASS: gdb.base/maint.exp: maint info w/o args
PASS: gdb.base/maint.exp: maint w/o args
PASS: gdb.base/maint.exp: help maint
PASS: gdb.base/maint.exp: help maint check-symtabs
PASS: gdb.base/maint.exp: help maint space
PASS: gdb.base/maint.exp: help maint time
PASS: gdb.base/maint.exp: help maint demangle
PASS: gdb.base/maint.exp: help maint dump-me
PASS: gdb.base/maint.exp: help maint internal-error
PASS: gdb.base/maint.exp: help maint internal-warning
PASS: gdb.base/maint.exp: help maint print statistics
PASS: gdb.base/maint.exp: help maint print dummy-frames
PASS: gdb.base/maint.exp: help maint print objfiles
PASS: gdb.base/maint.exp: help maint print psymbols
PASS: gdb.base/maint.exp: help maint print msymbols
PASS: gdb.base/maint.exp: help maint print symbols
PASS: gdb.base/maint.exp: help maint print type
PASS: gdb.base/maint.exp: help maint info sections
PASS: gdb.base/maint.exp: help maint info breakpoints
PASS: gdb.base/maint.exp: help maint info
PASS: gdb.base/maint.exp: help maint print
PASS: gdb.base/maint.exp: help maint
PASS: gdb.base/maint.exp: maint dump-me
PASS: gdb.base/maint.exp: maint internal-error
PASS: gdb.base/maint.exp: internal-error resync
Running ../../../gdb/testsuite/gdb.base/pointers.exp ...
PASS: gdb.base/pointers.exp: continuing after dummy()
PASS: gdb.base/pointers.exp: set pointer to beginning of array
PASS: gdb.base/pointers.exp: set pointer to end of array
PASS: gdb.base/pointers.exp: print object pointed to
PASS: gdb.base/pointers.exp: print object pointed to
PASS: gdb.base/pointers.exp: pointer1==pointer2
PASS: gdb.base/pointers.exp: pointer1!=pointer2
PASS: gdb.base/pointers.exp: pointer1<=pointer2
PASS: gdb.base/pointers.exp: pointer1>=pointer2
PASS: gdb.base/pointers.exp: pointer1<pointer2
PASS: gdb.base/pointers.exp: pointer1>pointer2
PASS: gdb.base/pointers.exp: set y = *v_int_pointer++
PASS: gdb.base/pointers.exp: pointer assignment and increment
PASS: gdb.base/pointers.exp: set y = *--v_int_pointer2
PASS: gdb.base/pointers.exp: pointer decrement and assignment
PASS: gdb.base/pointers.exp: set y =v_int_pointer-v_int_pointer2
PASS: gdb.base/pointers.exp: pointer1-pointer2
PASS: gdb.base/pointers.exp: set v_int_pointer=v_int_array
PASS: gdb.base/pointers.exp: print array element through pointer
PASS: gdb.base/pointers.exp: print array element through pointer
PASS: gdb.base/pointers.exp: print array element through pointer
PASS: gdb.base/pointers.exp: print array element through pointer
PASS: gdb.base/pointers.exp: print array element through pointer
PASS: gdb.base/pointers.exp: increment rptr
PASS: gdb.base/pointers.exp: print array element through pointer
PASS: gdb.base/pointers.exp: print array element through pointer
PASS: gdb.base/pointers.exp: print array element through pointer
PASS: gdb.base/pointers.exp: print array element w/ pointer arithmetic
PASS: gdb.base/pointers.exp: print through ptr to ptr
PASS: gdb.base/pointers.exp: continue to marker1
PASS: gdb.base/pointers.exp: up from marker1
PASS: gdb.base/pointers.exp: print value of *pUC
PASS: gdb.base/pointers.exp: ptype pUC
PASS: gdb.base/pointers.exp: print value of *pS
PASS: gdb.base/pointers.exp: ptype pS
PASS: gdb.base/pointers.exp: print value of *pUS
PASS: gdb.base/pointers.exp: ptype pUS
PASS: gdb.base/pointers.exp: print value of *pI
PASS: gdb.base/pointers.exp: ptype pI
PASS: gdb.base/pointers.exp: print value of *pUI
PASS: gdb.base/pointers.exp: ptype pUI
PASS: gdb.base/pointers.exp: print value of *pL
PASS: gdb.base/pointers.exp: ptype pL
PASS: gdb.base/pointers.exp: print value of *pUL
PASS: gdb.base/pointers.exp: ptype pUL
PASS: gdb.base/pointers.exp: print value of *pF
PASS: gdb.base/pointers.exp: ptype pF
PASS: gdb.base/pointers.exp: print value of *pD
PASS: gdb.base/pointers.exp: ptype pD
PASS: gdb.base/pointers.exp: print value of ******ppppppC
PASS: gdb.base/pointers.exp: ptype pC
PASS: gdb.base/pointers.exp: ptype ppC
PASS: gdb.base/pointers.exp: ptype pppC
PASS: gdb.base/pointers.exp: ptype ppppC
PASS: gdb.base/pointers.exp: ptype pppppC
PASS: gdb.base/pointers.exp: ptype ppppppC
PASS: gdb.base/pointers.exp: p instance.array_variable + 0
Running ../../../gdb/testsuite/gdb.base/call-rt-st.exp ...
XFAIL: gdb.base/call-rt-st.exp: This target can not call functions (PRMS 2416)
Running ../../../gdb/testsuite/gdb.base/radix.exp ...
PASS: gdb.base/radix.exp: initialize radix, input radix 2
PASS: gdb.base/radix.exp: set input-radix 2
PASS: gdb.base/radix.exp: show radix, input radix 2
PASS: gdb.base/radix.exp: print 010; expect 8; input radix 2
PASS: gdb.base/radix.exp: print 20.; expect 20; input radix 2
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; input radix 2
PASS: gdb.base/radix.exp: print 0xf; expect 15; input radix 2
PASS: gdb.base/radix.exp: print 0; expect 0; input radix 2
PASS: gdb.base/radix.exp: print 1; expect 1; input radix 2
PASS: gdb.base/radix.exp: print -1; expect -1; input radix 2
PASS: gdb.base/radix.exp: print 10; expect 2; input radix 2
PASS: gdb.base/radix.exp: print 11; expect 3; input radix 2
PASS: gdb.base/radix.exp: print -10; expect -2; input radix 2
PASS: gdb.base/radix.exp: print -11; expect -3; input radix 2
PASS: gdb.base/radix.exp: print 100; expect 4; input radix 2
PASS: gdb.base/radix.exp: print 101; expect 5; input radix 2
PASS: gdb.base/radix.exp: print -100; expect -4; input radix 2
PASS: gdb.base/radix.exp: print -101; expect -5; input radix 2
PASS: gdb.base/radix.exp: print 10101; expect 21; input radix 2
PASS: gdb.base/radix.exp: print 4; expect Invalid number "4"\.; input radix 2
PASS: gdb.base/radix.exp: print -2; expect Invalid number "2"\.; input radix 2
PASS: gdb.base/radix.exp: initialize radix, input radix 3
PASS: gdb.base/radix.exp: set input-radix 3
PASS: gdb.base/radix.exp: show radix, input radix 3
PASS: gdb.base/radix.exp: print 010; expect 8; input radix 3
PASS: gdb.base/radix.exp: print 20.; expect 20; input radix 3
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; input radix 3
PASS: gdb.base/radix.exp: print 0xf; expect 15; input radix 3
PASS: gdb.base/radix.exp: print 0; expect 0; input radix 3
PASS: gdb.base/radix.exp: print 1; expect 1; input radix 3
PASS: gdb.base/radix.exp: print -1; expect -1; input radix 3
PASS: gdb.base/radix.exp: print 10; expect 3; input radix 3
PASS: gdb.base/radix.exp: print 11; expect 4; input radix 3
PASS: gdb.base/radix.exp: print -10; expect -3; input radix 3
PASS: gdb.base/radix.exp: print -11; expect -4; input radix 3
PASS: gdb.base/radix.exp: print 100; expect 9; input radix 3
PASS: gdb.base/radix.exp: print 101; expect 10; input radix 3
PASS: gdb.base/radix.exp: print -100; expect -9; input radix 3
PASS: gdb.base/radix.exp: print -101; expect -10; input radix 3
PASS: gdb.base/radix.exp: print 10101; expect 91; input radix 3
PASS: gdb.base/radix.exp: print 2; expect 2; input radix 3
PASS: gdb.base/radix.exp: print 20; expect 6; input radix 3
PASS: gdb.base/radix.exp: print 3; expect Invalid number "3"\.; input radix 3
PASS: gdb.base/radix.exp: print 30; expect Invalid number "30"\.; input radix 2
PASS: gdb.base/radix.exp: initialize radix, input radix 8
PASS: gdb.base/radix.exp: set input-radix 8
PASS: gdb.base/radix.exp: show radix, input radix 8
PASS: gdb.base/radix.exp: print 010; expect 8; input radix 8
PASS: gdb.base/radix.exp: print 20.; expect 20; input radix 8
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; input radix 8
PASS: gdb.base/radix.exp: print 0xf; expect 15; input radix 8
PASS: gdb.base/radix.exp: print 0; expect 0; input radix 8
PASS: gdb.base/radix.exp: print 1; expect 1; input radix 8
PASS: gdb.base/radix.exp: print -1; expect -1; input radix 8
PASS: gdb.base/radix.exp: print 10; expect 8; input radix 8
PASS: gdb.base/radix.exp: print 11; expect 9; input radix 8
PASS: gdb.base/radix.exp: print -10; expect -8; input radix 8
PASS: gdb.base/radix.exp: print -11; expect -9; input radix 8
PASS: gdb.base/radix.exp: print 100; expect 64; input radix 8
PASS: gdb.base/radix.exp: print 101; expect 65; input radix 8
PASS: gdb.base/radix.exp: print -100; expect -64; input radix 8
PASS: gdb.base/radix.exp: print -101; expect -65; input radix 8
PASS: gdb.base/radix.exp: print 10101; expect 4161; input radix 8
PASS: gdb.base/radix.exp: print 20; expect 16; input radix 8
PASS: gdb.base/radix.exp: print -20; expect -16; input radix 8
PASS: gdb.base/radix.exp: print 8; expect Invalid number "8".; input radix 8
PASS: gdb.base/radix.exp: print -9; expect Invalid number "9".; input radix 8
PASS: gdb.base/radix.exp: initialize radix, input radix 10
PASS: gdb.base/radix.exp: set input-radix 10
PASS: gdb.base/radix.exp: show radix, input radix 10
PASS: gdb.base/radix.exp: print 010; expect 8; input radix 10
PASS: gdb.base/radix.exp: print 20.; expect 20; input radix 10
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; input radix 10
PASS: gdb.base/radix.exp: print 0xf; expect 15; input radix 10
PASS: gdb.base/radix.exp: print 0; expect 0; input radix 10
PASS: gdb.base/radix.exp: print 1; expect 1; input radix 10
PASS: gdb.base/radix.exp: print -1; expect -1; input radix 10
PASS: gdb.base/radix.exp: print 10; expect 10; input radix 10
PASS: gdb.base/radix.exp: print 11; expect 11; input radix 10
PASS: gdb.base/radix.exp: print -10; expect -10; input radix 10
PASS: gdb.base/radix.exp: print -11; expect -11; input radix 10
PASS: gdb.base/radix.exp: print 100; expect 100; input radix 10
PASS: gdb.base/radix.exp: print 101; expect 101; input radix 10
PASS: gdb.base/radix.exp: print -100; expect -100; input radix 10
PASS: gdb.base/radix.exp: print -101; expect -101; input radix 10
PASS: gdb.base/radix.exp: print 10101; expect 10101; input radix 10
PASS: gdb.base/radix.exp: print -12; expect -12; input radix 10
PASS: gdb.base/radix.exp: initialize radix, input radix 16
PASS: gdb.base/radix.exp: set input-radix 16
PASS: gdb.base/radix.exp: show radix, input radix 16
PASS: gdb.base/radix.exp: print 010; expect 8; input radix 16
PASS: gdb.base/radix.exp: print 20.; expect 20; input radix 16
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; input radix 16
PASS: gdb.base/radix.exp: print 0xf; expect 15; input radix 16
PASS: gdb.base/radix.exp: print 0; expect 0; input radix 16
PASS: gdb.base/radix.exp: print 1; expect 1; input radix 16
PASS: gdb.base/radix.exp: print -1; expect -1; input radix 16
PASS: gdb.base/radix.exp: print 10; expect 16; input radix 16
PASS: gdb.base/radix.exp: print 11; expect 17; input radix 16
PASS: gdb.base/radix.exp: print -10; expect -16; input radix 16
PASS: gdb.base/radix.exp: print -11; expect -17; input radix 16
PASS: gdb.base/radix.exp: print 100; expect 256; input radix 16
PASS: gdb.base/radix.exp: print 101; expect 257; input radix 16
PASS: gdb.base/radix.exp: print -100; expect -256; input radix 16
PASS: gdb.base/radix.exp: print -101; expect -257; input radix 16
PASS: gdb.base/radix.exp: print 10101; expect 65793; input radix 16
PASS: gdb.base/radix.exp: initialize radix, output radix 8
PASS: gdb.base/radix.exp: set output-radix 8
PASS: gdb.base/radix.exp: show radix, output radix 8
PASS: gdb.base/radix.exp: print 010; expect 010; output radix 8
PASS: gdb.base/radix.exp: print 0xf; expect 17; output radix 8
PASS: gdb.base/radix.exp: print 10; expect 12; output radix 8
PASS: gdb.base/radix.exp: print 100; expect 144; output radix 8
KFAIL: gdb.base/radix.exp: print 20.; expect 24; output radix 8 (PRMS: gdb/1715)
PASS: gdb.base/radix.exp: print (int) 20.; expect 24; output radix 8
PASS: gdb.base/radix.exp: initialize radix, output radix 10
PASS: gdb.base/radix.exp: set output-radix 10
PASS: gdb.base/radix.exp: show radix, output radix 10
PASS: gdb.base/radix.exp: print 010; expect 8; output radix 10
PASS: gdb.base/radix.exp: print 0xf; expect 15; output radix 10
PASS: gdb.base/radix.exp: print 10; expect 10; output radix 10
PASS: gdb.base/radix.exp: print 100; expect 100; output radix 10
PASS: gdb.base/radix.exp: print 20.; expect 20; output radix 10
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; output radix 10
PASS: gdb.base/radix.exp: initialize radix, output radix 16
PASS: gdb.base/radix.exp: set output-radix 16
PASS: gdb.base/radix.exp: show radix, output radix 16
PASS: gdb.base/radix.exp: print 010; expect 8; output radix 16
PASS: gdb.base/radix.exp: print 0xf; expect f; output radix 16
PASS: gdb.base/radix.exp: print 10; expect a; output radix 16
PASS: gdb.base/radix.exp: print 100; expect 64; output radix 16
KFAIL: gdb.base/radix.exp: print 20.; expect 14; output radix 16 (PRMS: gdb/1715)
PASS: gdb.base/radix.exp: print (int) 20.; expect 14; output radix 16
PASS: gdb.base/radix.exp: Reset radices
PASS: gdb.base/radix.exp: Reject input-radix 0
PASS: gdb.base/radix.exp: Input radix unchanged after rejecting 0
PASS: gdb.base/radix.exp: Reject input-radix 1
PASS: gdb.base/radix.exp: Input radix unchanged after rejecting 1
PASS: gdb.base/radix.exp: Reject output-radix 0
PASS: gdb.base/radix.exp: Output radix unchanged after rejecting 0
PASS: gdb.base/radix.exp: Reject output-radix 1
PASS: gdb.base/radix.exp: Output radix unchanged after rejecting 1
PASS: gdb.base/radix.exp: set radix 7 rejected
PASS: gdb.base/radix.exp: Output radix unchanged after rejection through set radix command
Running ../../../gdb/testsuite/gdb.base/gcore.exp ...
PASS: gdb.base/gcore.exp: help gcore
PASS: gdb.base/gcore.exp: set breakpoint at terminal_func
PASS: gdb.base/gcore.exp: continue to terminal_func
UNSUPPORTED: gdb.base/gcore.exp: save a corefile
Running ../../../gdb/testsuite/gdb.base/siginfo.exp ...
Running ../../../gdb/testsuite/gdb.base/arrayidx.exp ...
PASS: gdb.base/arrayidx.exp: Set print array-indexes to off
PASS: gdb.base/arrayidx.exp: Print array with array-indexes off
PASS: gdb.base/arrayidx.exp: Set print array-indexes to on
PASS: gdb.base/arrayidx.exp: Print array with array-indexes on
Running ../../../gdb/testsuite/gdb.base/valgrind-db-attach.exp ...
PASS: gdb.base/valgrind-db-attach.exp: spawn valgrind
ERROR: Process no longer exists
UNRESOLVED: gdb.base/valgrind-db-attach.exp: valgrind started
Running ../../../gdb/testsuite/gdb.base/sizeof.exp ...
Running ../../../gdb/testsuite/gdb.base/dump.exp ...
PASS: gdb.base/dump.exp: inaccessible memory is reported
PASS: gdb.base/dump.exp: endianness: little
PASS: gdb.base/dump.exp: dump array as value, default
PASS: gdb.base/dump.exp: dump struct as value, default
PASS: gdb.base/dump.exp: dump array as value, binary
PASS: gdb.base/dump.exp: dump struct as value, binary
PASS: gdb.base/dump.exp: dump array as value, srec
PASS: gdb.base/dump.exp: dump struct as value, srec
PASS: gdb.base/dump.exp: dump array as value, intel hex
PASS: gdb.base/dump.exp: dump struct as value, intel hex
PASS: gdb.base/dump.exp: dump array as value, tekhex
PASS: gdb.base/dump.exp: dump struct as value, tekhex
PASS: gdb.base/dump.exp: capture /x &intarray[0]
PASS: gdb.base/dump.exp: capture /x &intarray[32]
PASS: gdb.base/dump.exp: capture /x &intstruct
PASS: gdb.base/dump.exp: capture /x &intstruct + 1
PASS: gdb.base/dump.exp: capture intarray
PASS: gdb.base/dump.exp: capture intstruct
PASS: gdb.base/dump.exp: dump array as memory, default
PASS: gdb.base/dump.exp: dump struct as memory, default
PASS: gdb.base/dump.exp: dump array as memory, binary
PASS: gdb.base/dump.exp: dump struct as memory, binary
PASS: gdb.base/dump.exp: dump array as memory, srec
PASS: gdb.base/dump.exp: dump struct as memory, srec
PASS: gdb.base/dump.exp: dump array as memory, ihex
PASS: gdb.base/dump.exp: dump struct as memory, ihex
PASS: gdb.base/dump.exp: dump array as memory, tekhex
PASS: gdb.base/dump.exp: dump struct as memory, tekhex
PASS: gdb.base/dump.exp: dump array as mem, srec, expressions
PASS: gdb.base/dump.exp: setting little endianness
PASS: gdb.base/dump.exp: file binfile; capture intarray
PASS: gdb.base/dump.exp: start with intarray un-initialized
PASS: gdb.base/dump.exp: file binfile; capture intstruct
PASS: gdb.base/dump.exp: start with intstruct un-initialized
PASS: gdb.base/dump.exp: reload array as value, srec; capture intarray
PASS: gdb.base/dump.exp: reload array as value, srec; value restored ok
PASS: gdb.base/dump.exp: reload struct as value, srec; capture intstruct
PASS: gdb.base/dump.exp: reload struct as value, srec; value restored ok
PASS: gdb.base/dump.exp: reload array as memory, srec; capture intarray
PASS: gdb.base/dump.exp: reload array as memory, srec; value restored ok
PASS: gdb.base/dump.exp: reload struct as memory, srec; capture intstruct
PASS: gdb.base/dump.exp: reload struct as memory, srec; value restored ok
PASS: gdb.base/dump.exp: reload array as value, intel hex; capture intarray
PASS: gdb.base/dump.exp: reload array as value, intel hex; value restored ok
PASS: gdb.base/dump.exp: reload struct as value, intel hex; capture intstruct
PASS: gdb.base/dump.exp: reload struct as value, intel hex; value restored ok
PASS: gdb.base/dump.exp: reload array as memory, intel hex; capture intarray
PASS: gdb.base/dump.exp: reload array as memory, intel hex; value restored ok
PASS: gdb.base/dump.exp: reload struct as memory, intel hex; capture intstruct
PASS: gdb.base/dump.exp: reload struct as memory, intel hex; value restored ok
PASS: gdb.base/dump.exp: reload array as value, tekhex; capture intarray
PASS: gdb.base/dump.exp: reload array as value, tekhex; value restored ok
PASS: gdb.base/dump.exp: reload struct as value, tekhex; capture intstruct
PASS: gdb.base/dump.exp: reload struct as value, tekhex; value restored ok
PASS: gdb.base/dump.exp: reload array as memory, tekhex; capture intarray
PASS: gdb.base/dump.exp: reload array as memory, tekhex; value restored ok
PASS: gdb.base/dump.exp: reload struct as memory, tekhex; capture intstruct
PASS: gdb.base/dump.exp: reload struct as memory, tekhex; value restored ok
PASS: gdb.base/dump.exp: load binfile; capture intarray
PASS: gdb.base/dump.exp: start with intarray un-initialized, runto main
PASS: gdb.base/dump.exp: load binfile; capture intstruct
PASS: gdb.base/dump.exp: start with intstruct un-initialized, runto main
PASS: gdb.base/dump.exp: array as value, srec; file restored ok
PASS: gdb.base/dump.exp: array as value, srec; capture intarray
PASS: gdb.base/dump.exp: array as value, srec; value restored ok
PASS: gdb.base/dump.exp: struct as value, srec; file restored ok
PASS: gdb.base/dump.exp: struct as value, srec; capture intstruct
PASS: gdb.base/dump.exp: struct as value, srec; value restored ok
FAIL: gdb.base/dump.exp: zero all
PASS: gdb.base/dump.exp: array as memory, srec; file restored ok
PASS: gdb.base/dump.exp: array as memory, srec; capture intarray
PASS: gdb.base/dump.exp: array as memory, srec; value restored ok
PASS: gdb.base/dump.exp: struct as memory, srec; file restored ok
PASS: gdb.base/dump.exp: struct as memory, srec; capture intstruct
PASS: gdb.base/dump.exp: struct as memory, srec; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as value, ihex; file restored ok
PASS: gdb.base/dump.exp: array as value, ihex; capture intarray
PASS: gdb.base/dump.exp: array as value, ihex; value restored ok
PASS: gdb.base/dump.exp: struct as value, ihex; file restored ok
PASS: gdb.base/dump.exp: struct as value, ihex; capture intstruct
PASS: gdb.base/dump.exp: struct as value, ihex; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as memory, ihex; file restored ok
PASS: gdb.base/dump.exp: array as memory, ihex; capture intarray
PASS: gdb.base/dump.exp: array as memory, ihex; value restored ok
PASS: gdb.base/dump.exp: struct as memory, ihex; file restored ok
PASS: gdb.base/dump.exp: struct as memory, ihex; capture intstruct
PASS: gdb.base/dump.exp: struct as memory, ihex; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as value, tekhex; file restored ok
PASS: gdb.base/dump.exp: array as value, tekhex; capture intarray
PASS: gdb.base/dump.exp: array as value, tekhex; value restored ok
PASS: gdb.base/dump.exp: struct as value, tekhex; file restored ok
PASS: gdb.base/dump.exp: struct as value, tekhex; capture intstruct
PASS: gdb.base/dump.exp: struct as value, tekhex; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as memory, tekhex; file restored ok
PASS: gdb.base/dump.exp: array as memory, tekhex; capture intarray
PASS: gdb.base/dump.exp: array as memory, tekhex; value restored ok
PASS: gdb.base/dump.exp: struct as memory, tekhex; file restored ok
PASS: gdb.base/dump.exp: struct as memory, tekhex; capture intstruct
PASS: gdb.base/dump.exp: struct as memory, tekhex; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as value, binary; file restored ok
PASS: gdb.base/dump.exp: array as value, binary; capture intarray
PASS: gdb.base/dump.exp: array as value, binary; value restored ok
PASS: gdb.base/dump.exp: struct as value, binary; file restored ok
PASS: gdb.base/dump.exp: struct as value, binary; capture intstruct
PASS: gdb.base/dump.exp: struct as value, binary; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as memory, binary; file restored ok
PASS: gdb.base/dump.exp: array as memory, binary; capture intarray
PASS: gdb.base/dump.exp: array as memory, binary; value restored ok
PASS: gdb.base/dump.exp: struct as memory, binary; file restored ok
PASS: gdb.base/dump.exp: struct as memory, binary; capture intstruct
PASS: gdb.base/dump.exp: struct as memory, binary; value restored ok
PASS: gdb.base/dump.exp: capture /x &intarray2[0]
PASS: gdb.base/dump.exp: capture /x &intstruct2
PASS: gdb.base/dump.exp: capture (char *) &intarray2 - (char *) &intarray
PASS: gdb.base/dump.exp: capture (char *) &intstruct2 - (char *) &intstruct
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array copy, srec; file restored ok
PASS: gdb.base/dump.exp: array copy, srec; capture intarray2
PASS: gdb.base/dump.exp: array copy, srec; value restored ok
PASS: gdb.base/dump.exp: struct copy, srec; file restored ok
PASS: gdb.base/dump.exp: struct copy, srec; capture intstruct2
PASS: gdb.base/dump.exp: struct copy, srec; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array copy, ihex; file restored ok
PASS: gdb.base/dump.exp: array copy, ihex; capture intarray2
PASS: gdb.base/dump.exp: array copy, ihex; value restored ok
PASS: gdb.base/dump.exp: struct copy, ihex; file restored ok
PASS: gdb.base/dump.exp: struct copy, ihex; capture intstruct2
PASS: gdb.base/dump.exp: struct copy, ihex; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array copy, tekhex; file restored ok
PASS: gdb.base/dump.exp: array copy, tekhex; capture intarray2
PASS: gdb.base/dump.exp: array copy, tekhex; value restored ok
PASS: gdb.base/dump.exp: struct copy, tekhex; file restored ok
PASS: gdb.base/dump.exp: struct copy, tekhex; capture intstruct2
PASS: gdb.base/dump.exp: struct copy, tekhex; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array copy, binary; file restored ok
PASS: gdb.base/dump.exp: array copy, binary; capture intarray2
PASS: gdb.base/dump.exp: array copy, binary; value restored ok
PASS: gdb.base/dump.exp: struct copy, binary; file restored ok
PASS: gdb.base/dump.exp: struct copy, binary; capture intstruct2
PASS: gdb.base/dump.exp: struct copy, binary; value restored ok
PASS: gdb.base/dump.exp: capture /x &intarray[3]
PASS: gdb.base/dump.exp: capture /x &intarray[4]
PASS: gdb.base/dump.exp: capture /x (char *) &intarray[3] - (char *) &intarray[0]
PASS: gdb.base/dump.exp: capture /x (char *) &intarray[4] - (char *) &intarray[0]
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array partial, srec; file restored ok
PASS: gdb.base/dump.exp: array partial, srec; capture intarray[3]
PASS: gdb.base/dump.exp: array partial, srec; value restored ok
FAIL: gdb.base/dump.exp: element 2 not changed - 1
FAIL: gdb.base/dump.exp: element 4 not changed - 1
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array partial, ihex; file restored ok
PASS: gdb.base/dump.exp: array partial, ihex; capture intarray[3]
PASS: gdb.base/dump.exp: array partial, ihex; value restored ok
FAIL: gdb.base/dump.exp: element 2 not changed - 2
FAIL: gdb.base/dump.exp: element 4 not changed - 2
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array partial, tekhex; file restored ok
PASS: gdb.base/dump.exp: array partial, tekhex; capture intarray[3]
PASS: gdb.base/dump.exp: array partial, tekhex; value restored ok
FAIL: gdb.base/dump.exp: element 2 not changed - 3
FAIL: gdb.base/dump.exp: element 4 not changed - 3
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array partial, binary; file restored ok
PASS: gdb.base/dump.exp: array partial, binary; capture intarray[3]
PASS: gdb.base/dump.exp: array partial, binary; value restored ok
FAIL: gdb.base/dump.exp: element 2 not changed - 4
FAIL: gdb.base/dump.exp: element 4 not changed - 4
PASS: gdb.base/dump.exp: array partial with expressions; file restored ok
PASS: gdb.base/dump.exp: array partial with expressions; capture intarray2[3]
PASS: gdb.base/dump.exp: array partial with expressions; value restored ok
FAIL: gdb.base/dump.exp: element 2 not changed, == 4
FAIL: gdb.base/dump.exp: element 4 not changed, == 4
Running ../../../gdb/testsuite/gdb.base/setshow.exp ...
PASS: gdb.base/setshow.exp: default annotation_level is zero
PASS: gdb.base/setshow.exp: set annotate 2
PASS: gdb.base/setshow.exp: show annotate (2)
PASS: gdb.base/setshow.exp: annotation_level 2
PASS: gdb.base/setshow.exp: set annotate 1
PASS: gdb.base/setshow.exp: show annotate (1)
PASS: gdb.base/setshow.exp: annotation_level 1
PASS: gdb.base/setshow.exp: set annotate 0
PASS: gdb.base/setshow.exp: show annotate (0)
PASS: gdb.base/setshow.exp: annotation_level 0
PASS: gdb.base/setshow.exp: set args
PASS: gdb.base/setshow.exp: show args
PASS: gdb.base/setshow.exp: set check range on
PASS: gdb.base/setshow.exp: show check range (on)
PASS: gdb.base/setshow.exp: set check range off
PASS: gdb.base/setshow.exp: show check range (off)
PASS: gdb.base/setshow.exp: set check range auto
PASS: gdb.base/setshow.exp: show check range (auto)
PASS: gdb.base/setshow.exp: set check type on
PASS: gdb.base/setshow.exp: show check type (on)
PASS: gdb.base/setshow.exp: set check type off
PASS: gdb.base/setshow.exp: show check type (off)
PASS: gdb.base/setshow.exp: set check type auto
PASS: gdb.base/setshow.exp: show check type (auto)
PASS: gdb.base/setshow.exp: set complaints 100
PASS: gdb.base/setshow.exp: show complaints (100)
PASS: gdb.base/setshow.exp: set complaints 0
PASS: gdb.base/setshow.exp: show complaints (0)
PASS: gdb.base/setshow.exp: set confirm off
PASS: gdb.base/setshow.exp: show confirm (off)
PASS: gdb.base/setshow.exp: set confirm on
PASS: gdb.base/setshow.exp: show confirm (on)
PASS: gdb.base/setshow.exp: set editing off
PASS: gdb.base/setshow.exp: show editing (off)
PASS: gdb.base/setshow.exp: set environment FOOBARBAZ
PASS: gdb.base/setshow.exp: show environment FOOBARBAZ
PASS: gdb.base/setshow.exp: set height 100
PASS: gdb.base/setshow.exp: show height
PASS: gdb.base/setshow.exp: set history expansion on
PASS: gdb.base/setshow.exp: show history expansion
PASS: gdb.base/setshow.exp: set history filename foobar.baz
PASS: gdb.base/setshow.exp: show history filename (foobar.baz)
PASS: gdb.base/setshow.exp: set history save on
PASS: gdb.base/setshow.exp: show history save (on)
PASS: gdb.base/setshow.exp: set history size 100
PASS: gdb.base/setshow.exp: show history size (100)
PASS: gdb.base/setshow.exp: set language asm
PASS: gdb.base/setshow.exp: show language (asm)
PASS: gdb.base/setshow.exp: set language java
PASS: gdb.base/setshow.exp: show language (java)
PASS: gdb.base/setshow.exp: complete set language minimal
PASS: gdb.base/setshow.exp: set language auto
PASS: gdb.base/setshow.exp: show language (auto)
PASS: gdb.base/setshow.exp: set listsize 100
PASS: gdb.base/setshow.exp: show listsize (100)
PASS: gdb.base/setshow.exp: set prompt (FooBarBaz)
PASS: gdb.base/setshow.exp: show prompt (FooBarBaz)
PASS: gdb.base/setshow.exp: set prompt (gdb)
PASS: gdb.base/setshow.exp: set radix 11
PASS: gdb.base/setshow.exp: set radix 16
PASS: gdb.base/setshow.exp: show radix (16)
PASS: gdb.base/setshow.exp: set radix 10
PASS: gdb.base/setshow.exp: show radix (10)
PASS: gdb.base/setshow.exp: set width 90
PASS: gdb.base/setshow.exp: show width (90)
PASS: gdb.base/setshow.exp: set write on
PASS: gdb.base/setshow.exp: show write (on)
PASS: gdb.base/setshow.exp: set symbol-reloading on
PASS: gdb.base/setshow.exp: show symbol-reloading (on)
PASS: gdb.base/setshow.exp: show user
PASS: gdb.base/setshow.exp: set verbose on
PASS: gdb.base/setshow.exp: show verbose (on)
PASS: gdb.base/setshow.exp: set verbose off
PASS: gdb.base/setshow.exp: show verbose (off)
Running ../../../gdb/testsuite/gdb.base/cvexpr.exp ...
PASS: gdb.base/cvexpr.exp: (const char)
PASS: gdb.base/cvexpr.exp: (const signed char)
PASS: gdb.base/cvexpr.exp: (const unsigned char)
PASS: gdb.base/cvexpr.exp: (const short)
PASS: gdb.base/cvexpr.exp: (const signed short)
PASS: gdb.base/cvexpr.exp: (const unsigned short)
PASS: gdb.base/cvexpr.exp: (const int)
PASS: gdb.base/cvexpr.exp: (const signed int)
PASS: gdb.base/cvexpr.exp: (const unsigned int)
PASS: gdb.base/cvexpr.exp: (const long)
PASS: gdb.base/cvexpr.exp: (const signed long)
PASS: gdb.base/cvexpr.exp: (const unsigned long)
PASS: gdb.base/cvexpr.exp: (const long long)
PASS: gdb.base/cvexpr.exp: (const signed long long)
PASS: gdb.base/cvexpr.exp: (const unsigned long long)
PASS: gdb.base/cvexpr.exp: (const float)
PASS: gdb.base/cvexpr.exp: (const double)
PASS: gdb.base/cvexpr.exp: (volatile char)
PASS: gdb.base/cvexpr.exp: (volatile signed char)
PASS: gdb.base/cvexpr.exp: (volatile unsigned char)
PASS: gdb.base/cvexpr.exp: (volatile short)
PASS: gdb.base/cvexpr.exp: (volatile signed short)
PASS: gdb.base/cvexpr.exp: (volatile unsigned short)
PASS: gdb.base/cvexpr.exp: (volatile int)
PASS: gdb.base/cvexpr.exp: (volatile signed int)
PASS: gdb.base/cvexpr.exp: (volatile unsigned int)
PASS: gdb.base/cvexpr.exp: (volatile long)
PASS: gdb.base/cvexpr.exp: (volatile signed long)
PASS: gdb.base/cvexpr.exp: (volatile unsigned long)
PASS: gdb.base/cvexpr.exp: (volatile long long)
PASS: gdb.base/cvexpr.exp: (volatile signed long long)
PASS: gdb.base/cvexpr.exp: (volatile unsigned long long)
PASS: gdb.base/cvexpr.exp: (volatile float)
PASS: gdb.base/cvexpr.exp: (volatile double)
PASS: gdb.base/cvexpr.exp: (const volatile int)
PASS: gdb.base/cvexpr.exp: (volatile const int)
PASS: gdb.base/cvexpr.exp: (const int volatile)
PASS: gdb.base/cvexpr.exp: (volatile int const)
PASS: gdb.base/cvexpr.exp: (int const volatile)
PASS: gdb.base/cvexpr.exp: (int volatile const)
PASS: gdb.base/cvexpr.exp: (const volatile int *)
PASS: gdb.base/cvexpr.exp: (volatile const int *)
PASS: gdb.base/cvexpr.exp: (const int volatile)
PASS: gdb.base/cvexpr.exp: (volatile int const *)
PASS: gdb.base/cvexpr.exp: (int const volatile *)
PASS: gdb.base/cvexpr.exp: (int volatile const *)
PASS: gdb.base/cvexpr.exp: (int * const volatile)
PASS: gdb.base/cvexpr.exp: (int * volatile const)
PASS: gdb.base/cvexpr.exp: (char const)
PASS: gdb.base/cvexpr.exp: (signed char const)
PASS: gdb.base/cvexpr.exp: (unsigned char const)
PASS: gdb.base/cvexpr.exp: (short const)
PASS: gdb.base/cvexpr.exp: (signed short const)
PASS: gdb.base/cvexpr.exp: (unsigned short const)
PASS: gdb.base/cvexpr.exp: (int const)
PASS: gdb.base/cvexpr.exp: (signed int const)
PASS: gdb.base/cvexpr.exp: (unsigned int const)
PASS: gdb.base/cvexpr.exp: (long const)
PASS: gdb.base/cvexpr.exp: (signed long const)
PASS: gdb.base/cvexpr.exp: (unsigned long const)
PASS: gdb.base/cvexpr.exp: (long long const)
PASS: gdb.base/cvexpr.exp: (signed long long const)
PASS: gdb.base/cvexpr.exp: (unsigned long long const)
PASS: gdb.base/cvexpr.exp: (float const)
PASS: gdb.base/cvexpr.exp: (double const)
PASS: gdb.base/cvexpr.exp: (char volatile)
PASS: gdb.base/cvexpr.exp: (signed char volatile)
PASS: gdb.base/cvexpr.exp: (unsigned char volatile)
PASS: gdb.base/cvexpr.exp: (short volatile)
PASS: gdb.base/cvexpr.exp: (signed short volatile)
PASS: gdb.base/cvexpr.exp: (unsigned short volatile)
PASS: gdb.base/cvexpr.exp: (int volatile)
PASS: gdb.base/cvexpr.exp: (signed int volatile)
PASS: gdb.base/cvexpr.exp: (unsigned int volatile)
PASS: gdb.base/cvexpr.exp: (long volatile)
PASS: gdb.base/cvexpr.exp: (signed long volatile)
PASS: gdb.base/cvexpr.exp: (unsigned long volatile)
PASS: gdb.base/cvexpr.exp: (long long volatile)
PASS: gdb.base/cvexpr.exp: (signed long long volatile)
PASS: gdb.base/cvexpr.exp: (unsigned long long volatile)
PASS: gdb.base/cvexpr.exp: (float volatile)
PASS: gdb.base/cvexpr.exp: (double volatile)
PASS: gdb.base/cvexpr.exp: (const enum misordered)
PASS: gdb.base/cvexpr.exp: (enum misordered const)
PASS: gdb.base/cvexpr.exp: (volatile enum misordered)
PASS: gdb.base/cvexpr.exp: (enum misordered volatile)
PASS: gdb.base/cvexpr.exp: (const int *)
PASS: gdb.base/cvexpr.exp: (int const *)
PASS: gdb.base/cvexpr.exp: (int * const)
PASS: gdb.base/cvexpr.exp: (const int * const)
PASS: gdb.base/cvexpr.exp: (int const * const)
PASS: gdb.base/cvexpr.exp: (const int **)
PASS: gdb.base/cvexpr.exp: (int const **)
PASS: gdb.base/cvexpr.exp: (int ** const)
PASS: gdb.base/cvexpr.exp: (const int * const *)
PASS: gdb.base/cvexpr.exp: (int const * const *)
PASS: gdb.base/cvexpr.exp: (const int * const * const)
PASS: gdb.base/cvexpr.exp: (int const * const * const)
PASS: gdb.base/cvexpr.exp: (const struct t_struct)
PASS: gdb.base/cvexpr.exp: (const union t_union)
PASS: gdb.base/cvexpr.exp: (struct t_struct const)
PASS: gdb.base/cvexpr.exp: (union t_union const)
PASS: gdb.base/cvexpr.exp: (const struct t_struct *)
PASS: gdb.base/cvexpr.exp: (const union t_union *)
PASS: gdb.base/cvexpr.exp: (struct t_struct const *)
PASS: gdb.base/cvexpr.exp: (union t_union const *)
PASS: gdb.base/cvexpr.exp: (struct t_struct * const)
PASS: gdb.base/cvexpr.exp: (union t_union * const)
PASS: gdb.base/cvexpr.exp: (const struct t_struct * const)
PASS: gdb.base/cvexpr.exp: (const union t_union * const)
PASS: gdb.base/cvexpr.exp: (struct t_struct const * const)
PASS: gdb.base/cvexpr.exp: (union t_union const * const)
Running ../../../gdb/testsuite/gdb.base/printcmds.exp ...
PASS: gdb.base/printcmds.exp: print $pc
PASS: gdb.base/printcmds.exp: print "abc"
PASS: gdb.base/printcmds.exp: print sizeof ("abc")
PASS: gdb.base/printcmds.exp: ptype "abc"
PASS: gdb.base/printcmds.exp: print $cvar = "abc"
PASS: gdb.base/printcmds.exp: print sizeof ($cvar)
PASS: gdb.base/printcmds.exp: print $pc (with file)
PASS: gdb.base/printcmds.exp: set print sevenbit-strings
PASS: gdb.base/printcmds.exp: set print address off
PASS: gdb.base/printcmds.exp: set width 0
PASS: gdb.base/printcmds.exp: set language c
PASS: gdb.base/printcmds.exp: show language
PASS: gdb.base/printcmds.exp: p ctable1[120] #1
PASS: gdb.base/printcmds.exp: p 123
PASS: gdb.base/printcmds.exp: p -123
PASS: gdb.base/printcmds.exp: p/d 123
PASS: gdb.base/printcmds.exp: p 0123
PASS: gdb.base/printcmds.exp: p 00123
PASS: gdb.base/printcmds.exp: p -0123
PASS: gdb.base/printcmds.exp: p/o 0123
PASS: gdb.base/printcmds.exp: p 0x123
PASS: gdb.base/printcmds.exp: p -0x123
PASS: gdb.base/printcmds.exp: p 0x0123
PASS: gdb.base/printcmds.exp: p -0x0123
PASS: gdb.base/printcmds.exp: p 0xABCDEF
PASS: gdb.base/printcmds.exp: p 0xabcdef
PASS: gdb.base/printcmds.exp: p 0xAbCdEf
PASS: gdb.base/printcmds.exp: p/x 0x123
PASS: gdb.base/printcmds.exp: p 0b0
PASS: gdb.base/printcmds.exp: p 0b1111
PASS: gdb.base/printcmds.exp: p 0B1111
PASS: gdb.base/printcmds.exp: p -0b1111
PASS: gdb.base/printcmds.exp: reject p 0x
PASS: gdb.base/printcmds.exp: reject p 0b
PASS: gdb.base/printcmds.exp: p ''
PASS: gdb.base/printcmds.exp: p '''
PASS: gdb.base/printcmds.exp: reject p '\'
PASS: gdb.base/printcmds.exp: reject p '\\\'
PASS: gdb.base/printcmds.exp: reject p DEADBEEF
PASS: gdb.base/printcmds.exp: reject p 123DEADBEEF
PASS: gdb.base/printcmds.exp: reject p 123foobar.bazfoo3
PASS: gdb.base/printcmds.exp: reject p 123EEEEEEEEEEEEEEEEE33333k333
PASS: gdb.base/printcmds.exp: check for floating addition
PASS: gdb.base/printcmds.exp: reject p 09
PASS: gdb.base/printcmds.exp: reject p 079
PASS: gdb.base/printcmds.exp: reject p 0xG
PASS: gdb.base/printcmds.exp: reject p 0xAG
PASS: gdb.base/printcmds.exp: reject p 0b2
PASS: gdb.base/printcmds.exp: reject p 0b12
PASS: gdb.base/printcmds.exp: p 'a'
PASS: gdb.base/printcmds.exp: p/c 'a'
PASS: gdb.base/printcmds.exp: p/x 'a'
PASS: gdb.base/printcmds.exp: p/d 'a'
PASS: gdb.base/printcmds.exp: p/t 'a'
PASS: gdb.base/printcmds.exp: p '\141'
PASS: gdb.base/printcmds.exp: p/x '\377'
PASS: gdb.base/printcmds.exp: p '\''
PASS: gdb.base/printcmds.exp: p '\\'
PASS: gdb.base/printcmds.exp: p ctable1[0]
PASS: gdb.base/printcmds.exp: p ctable1[1]
PASS: gdb.base/printcmds.exp: p ctable1[2]
PASS: gdb.base/printcmds.exp: p ctable1[3]
PASS: gdb.base/printcmds.exp: p ctable1[4]
PASS: gdb.base/printcmds.exp: p ctable1[5]
PASS: gdb.base/printcmds.exp: p ctable1[6]
PASS: gdb.base/printcmds.exp: p ctable1[7]
PASS: gdb.base/printcmds.exp: p ctable1[8]
PASS: gdb.base/printcmds.exp: p ctable1[9]
PASS: gdb.base/printcmds.exp: p ctable1[10]
PASS: gdb.base/printcmds.exp: p ctable1[11]
PASS: gdb.base/printcmds.exp: p ctable1[12]
PASS: gdb.base/printcmds.exp: p ctable1[13]
PASS: gdb.base/printcmds.exp: p ctable1[14]
PASS: gdb.base/printcmds.exp: p ctable1[15]
PASS: gdb.base/printcmds.exp: p ctable1[16]
PASS: gdb.base/printcmds.exp: p ctable1[17]
PASS: gdb.base/printcmds.exp: p ctable1[18]
PASS: gdb.base/printcmds.exp: p ctable1[19]
PASS: gdb.base/printcmds.exp: p ctable1[20]
PASS: gdb.base/printcmds.exp: p ctable1[21]
PASS: gdb.base/printcmds.exp: p ctable1[22]
PASS: gdb.base/printcmds.exp: p ctable1[23]
PASS: gdb.base/printcmds.exp: p ctable1[24]
PASS: gdb.base/printcmds.exp: p ctable1[25]
PASS: gdb.base/printcmds.exp: p ctable1[26]
PASS: gdb.base/printcmds.exp: p ctable1[27]
PASS: gdb.base/printcmds.exp: p ctable1[28]
PASS: gdb.base/printcmds.exp: p ctable1[29]
PASS: gdb.base/printcmds.exp: p ctable1[30]
PASS: gdb.base/printcmds.exp: p ctable1[31]
PASS: gdb.base/printcmds.exp: p ctable1[32]
PASS: gdb.base/printcmds.exp: p ctable1[33]
PASS: gdb.base/printcmds.exp: p ctable1[34]
PASS: gdb.base/printcmds.exp: p ctable1[35]
PASS: gdb.base/printcmds.exp: p ctable1[36]
PASS: gdb.base/printcmds.exp: p ctable1[37]
PASS: gdb.base/printcmds.exp: p ctable1[38]
PASS: gdb.base/printcmds.exp: p ctable1[39]
PASS: gdb.base/printcmds.exp: p ctable1[40]
PASS: gdb.base/printcmds.exp: p ctable1[41]
PASS: gdb.base/printcmds.exp: p ctable1[42]
PASS: gdb.base/printcmds.exp: p ctable1[43]
PASS: gdb.base/printcmds.exp: p ctable1[44]
PASS: gdb.base/printcmds.exp: p ctable1[45]
PASS: gdb.base/printcmds.exp: p ctable1[46]
PASS: gdb.base/printcmds.exp: p ctable1[47]
PASS: gdb.base/printcmds.exp: p ctable1[48]
PASS: gdb.base/printcmds.exp: p ctable1[49]
PASS: gdb.base/printcmds.exp: p ctable1[50]
PASS: gdb.base/printcmds.exp: p ctable1[51]
PASS: gdb.base/printcmds.exp: p ctable1[52]
PASS: gdb.base/printcmds.exp: p ctable1[53]
PASS: gdb.base/printcmds.exp: p ctable1[54]
PASS: gdb.base/printcmds.exp: p ctable1[55]
PASS: gdb.base/printcmds.exp: p ctable1[56]
PASS: gdb.base/printcmds.exp: p ctable1[57]
PASS: gdb.base/printcmds.exp: p ctable1[58]
PASS: gdb.base/printcmds.exp: p ctable1[59]
PASS: gdb.base/printcmds.exp: p ctable1[60]
PASS: gdb.base/printcmds.exp: p ctable1[61]
PASS: gdb.base/printcmds.exp: p ctable1[62]
PASS: gdb.base/printcmds.exp: p ctable1[63]
PASS: gdb.base/printcmds.exp: p ctable1[64]
PASS: gdb.base/printcmds.exp: p ctable1[65]
PASS: gdb.base/printcmds.exp: p ctable1[66]
PASS: gdb.base/printcmds.exp: p ctable1[67]
PASS: gdb.base/printcmds.exp: p ctable1[68]
PASS: gdb.base/printcmds.exp: p ctable1[69]
PASS: gdb.base/printcmds.exp: p ctable1[70]
PASS: gdb.base/printcmds.exp: p ctable1[71]
PASS: gdb.base/printcmds.exp: p ctable1[72]
PASS: gdb.base/printcmds.exp: p ctable1[73]
PASS: gdb.base/printcmds.exp: p ctable1[74]
PASS: gdb.base/printcmds.exp: p ctable1[75]
PASS: gdb.base/printcmds.exp: p ctable1[76]
PASS: gdb.base/printcmds.exp: p ctable1[77]
PASS: gdb.base/printcmds.exp: p ctable1[78]
PASS: gdb.base/printcmds.exp: p ctable1[79]
PASS: gdb.base/printcmds.exp: p ctable1[80]
PASS: gdb.base/printcmds.exp: p ctable1[81]
PASS: gdb.base/printcmds.exp: p ctable1[82]
PASS: gdb.base/printcmds.exp: p ctable1[83]
PASS: gdb.base/printcmds.exp: p ctable1[84]
PASS: gdb.base/printcmds.exp: p ctable1[85]
PASS: gdb.base/printcmds.exp: p ctable1[86]
PASS: gdb.base/printcmds.exp: p ctable1[87]
PASS: gdb.base/printcmds.exp: p ctable1[88]
PASS: gdb.base/printcmds.exp: p ctable1[89]
PASS: gdb.base/printcmds.exp: p ctable1[90]
PASS: gdb.base/printcmds.exp: p ctable1[91]
PASS: gdb.base/printcmds.exp: p ctable1[92]
PASS: gdb.base/printcmds.exp: p ctable1[93]
PASS: gdb.base/printcmds.exp: p ctable1[94]
PASS: gdb.base/printcmds.exp: p ctable1[95]
PASS: gdb.base/printcmds.exp: p ctable1[96]
PASS: gdb.base/printcmds.exp: p ctable1[97]
PASS: gdb.base/printcmds.exp: p ctable1[98]
PASS: gdb.base/printcmds.exp: p ctable1[99]
PASS: gdb.base/printcmds.exp: p ctable1[100]
PASS: gdb.base/printcmds.exp: p ctable1[101]
PASS: gdb.base/printcmds.exp: p ctable1[102]
PASS: gdb.base/printcmds.exp: p ctable1[103]
PASS: gdb.base/printcmds.exp: p ctable1[104]
PASS: gdb.base/printcmds.exp: p ctable1[105]
PASS: gdb.base/printcmds.exp: p ctable1[106]
PASS: gdb.base/printcmds.exp: p ctable1[107]
PASS: gdb.base/printcmds.exp: p ctable1[108]
PASS: gdb.base/printcmds.exp: p ctable1[109]
PASS: gdb.base/printcmds.exp: p ctable1[110]
PASS: gdb.base/printcmds.exp: p ctable1[111]
PASS: gdb.base/printcmds.exp: p ctable1[112]
PASS: gdb.base/printcmds.exp: p ctable1[113]
PASS: gdb.base/printcmds.exp: p ctable1[114]
PASS: gdb.base/printcmds.exp: p ctable1[115]
PASS: gdb.base/printcmds.exp: p ctable1[116]
PASS: gdb.base/printcmds.exp: p ctable1[117]
PASS: gdb.base/printcmds.exp: p ctable1[118]
PASS: gdb.base/printcmds.exp: p ctable1[119]
PASS: gdb.base/printcmds.exp: p ctable1[120]
PASS: gdb.base/printcmds.exp: p ctable1[121]
PASS: gdb.base/printcmds.exp: p ctable1[122]
PASS: gdb.base/printcmds.exp: p ctable1[123]
PASS: gdb.base/printcmds.exp: p ctable1[124]
PASS: gdb.base/printcmds.exp: p ctable1[125]
PASS: gdb.base/printcmds.exp: p ctable1[126]
PASS: gdb.base/printcmds.exp: p ctable1[127]
PASS: gdb.base/printcmds.exp: p ctable1[128]
PASS: gdb.base/printcmds.exp: p ctable1[129]
PASS: gdb.base/printcmds.exp: p ctable1[130]
PASS: gdb.base/printcmds.exp: p ctable1[131]
PASS: gdb.base/printcmds.exp: p ctable1[132]
PASS: gdb.base/printcmds.exp: p ctable1[133]
PASS: gdb.base/printcmds.exp: p ctable1[134]
PASS: gdb.base/printcmds.exp: p ctable1[135]
PASS: gdb.base/printcmds.exp: p ctable1[136]
PASS: gdb.base/printcmds.exp: p ctable1[137]
PASS: gdb.base/printcmds.exp: p ctable1[138]
PASS: gdb.base/printcmds.exp: p ctable1[139]
PASS: gdb.base/printcmds.exp: p ctable1[140]
PASS: gdb.base/printcmds.exp: p ctable1[141]
PASS: gdb.base/printcmds.exp: p ctable1[142]
PASS: gdb.base/printcmds.exp: p ctable1[143]
PASS: gdb.base/printcmds.exp: p ctable1[144]
PASS: gdb.base/printcmds.exp: p ctable1[145]
PASS: gdb.base/printcmds.exp: p ctable1[146]
PASS: gdb.base/printcmds.exp: p ctable1[147]
PASS: gdb.base/printcmds.exp: p ctable1[148]
PASS: gdb.base/printcmds.exp: p ctable1[149]
PASS: gdb.base/printcmds.exp: p ctable1[150]
PASS: gdb.base/printcmds.exp: p ctable1[151]
PASS: gdb.base/printcmds.exp: p ctable1[152]
PASS: gdb.base/printcmds.exp: p ctable1[153]
PASS: gdb.base/printcmds.exp: p ctable1[154]
PASS: gdb.base/printcmds.exp: p ctable1[155]
PASS: gdb.base/printcmds.exp: p ctable1[156]
PASS: gdb.base/printcmds.exp: p ctable1[157]
PASS: gdb.base/printcmds.exp: p ctable1[158]
PASS: gdb.base/printcmds.exp: p ctable1[159]
PASS: gdb.base/printcmds.exp: p ctable1[160]
PASS: gdb.base/printcmds.exp: p ctable1[161]
PASS: gdb.base/printcmds.exp: p ctable1[162]
PASS: gdb.base/printcmds.exp: p ctable1[163]
PASS: gdb.base/printcmds.exp: p ctable1[164]
PASS: gdb.base/printcmds.exp: p ctable1[165]
PASS: gdb.base/printcmds.exp: p ctable1[166]
PASS: gdb.base/printcmds.exp: p ctable1[167]
PASS: gdb.base/printcmds.exp: p ctable1[168]
PASS: gdb.base/printcmds.exp: p ctable1[169]
PASS: gdb.base/printcmds.exp: p ctable1[170]
PASS: gdb.base/printcmds.exp: p ctable1[171]
PASS: gdb.base/printcmds.exp: p ctable1[172]
PASS: gdb.base/printcmds.exp: p ctable1[173]
PASS: gdb.base/printcmds.exp: p ctable1[174]
PASS: gdb.base/printcmds.exp: p ctable1[175]
PASS: gdb.base/printcmds.exp: p ctable1[176]
PASS: gdb.base/printcmds.exp: p ctable1[177]
PASS: gdb.base/printcmds.exp: p ctable1[178]
PASS: gdb.base/printcmds.exp: p ctable1[179]
PASS: gdb.base/printcmds.exp: p ctable1[180]
PASS: gdb.base/printcmds.exp: p ctable1[181]
PASS: gdb.base/printcmds.exp: p ctable1[182]
PASS: gdb.base/printcmds.exp: p ctable1[183]
PASS: gdb.base/printcmds.exp: p ctable1[184]
PASS: gdb.base/printcmds.exp: p ctable1[185]
PASS: gdb.base/printcmds.exp: p ctable1[186]
PASS: gdb.base/printcmds.exp: p ctable1[187]
PASS: gdb.base/printcmds.exp: p ctable1[188]
PASS: gdb.base/printcmds.exp: p ctable1[189]
PASS: gdb.base/printcmds.exp: p ctable1[190]
PASS: gdb.base/printcmds.exp: p ctable1[191]
PASS: gdb.base/printcmds.exp: p ctable1[192]
PASS: gdb.base/printcmds.exp: p ctable1[193]
PASS: gdb.base/printcmds.exp: p ctable1[194]
PASS: gdb.base/printcmds.exp: p ctable1[195]
PASS: gdb.base/printcmds.exp: p ctable1[196]
PASS: gdb.base/printcmds.exp: p ctable1[197]
PASS: gdb.base/printcmds.exp: p ctable1[198]
PASS: gdb.base/printcmds.exp: p ctable1[199]
PASS: gdb.base/printcmds.exp: p ctable1[200]
PASS: gdb.base/printcmds.exp: p ctable1[201]
PASS: gdb.base/printcmds.exp: p ctable1[202]
PASS: gdb.base/printcmds.exp: p ctable1[203]
PASS: gdb.base/printcmds.exp: p ctable1[204]
PASS: gdb.base/printcmds.exp: p ctable1[205]
PASS: gdb.base/printcmds.exp: p ctable1[206]
PASS: gdb.base/printcmds.exp: p ctable1[207]
PASS: gdb.base/printcmds.exp: p ctable1[208]
PASS: gdb.base/printcmds.exp: p ctable1[209]
PASS: gdb.base/printcmds.exp: p ctable1[210]
PASS: gdb.base/printcmds.exp: p ctable1[211]
PASS: gdb.base/printcmds.exp: p ctable1[212]
PASS: gdb.base/printcmds.exp: p ctable1[213]
PASS: gdb.base/printcmds.exp: p ctable1[214]
PASS: gdb.base/printcmds.exp: p ctable1[215]
PASS: gdb.base/printcmds.exp: p ctable1[216]
PASS: gdb.base/printcmds.exp: p ctable1[217]
PASS: gdb.base/printcmds.exp: p ctable1[218]
PASS: gdb.base/printcmds.exp: p ctable1[219]
PASS: gdb.base/printcmds.exp: p ctable1[220]
PASS: gdb.base/printcmds.exp: p ctable1[221]
PASS: gdb.base/printcmds.exp: p ctable1[222]
PASS: gdb.base/printcmds.exp: p ctable1[223]
PASS: gdb.base/printcmds.exp: p ctable1[224]
PASS: gdb.base/printcmds.exp: p ctable1[225]
PASS: gdb.base/printcmds.exp: p ctable1[226]
PASS: gdb.base/printcmds.exp: p ctable1[227]
PASS: gdb.base/printcmds.exp: p ctable1[228]
PASS: gdb.base/printcmds.exp: p ctable1[229]
PASS: gdb.base/printcmds.exp: p ctable1[230]
PASS: gdb.base/printcmds.exp: p ctable1[231]
PASS: gdb.base/printcmds.exp: p ctable1[232]
PASS: gdb.base/printcmds.exp: p ctable1[233]
PASS: gdb.base/printcmds.exp: p ctable1[234]
PASS: gdb.base/printcmds.exp: p ctable1[235]
PASS: gdb.base/printcmds.exp: p ctable1[236]
PASS: gdb.base/printcmds.exp: p ctable1[237]
PASS: gdb.base/printcmds.exp: p ctable1[238]
PASS: gdb.base/printcmds.exp: p ctable1[239]
PASS: gdb.base/printcmds.exp: p ctable1[240]
PASS: gdb.base/printcmds.exp: p ctable1[241]
PASS: gdb.base/printcmds.exp: p ctable1[242]
PASS: gdb.base/printcmds.exp: p ctable1[243]
PASS: gdb.base/printcmds.exp: p ctable1[244]
PASS: gdb.base/printcmds.exp: p ctable1[245]
PASS: gdb.base/printcmds.exp: p ctable1[246]
PASS: gdb.base/printcmds.exp: p ctable1[247]
PASS: gdb.base/printcmds.exp: p ctable1[248]
PASS: gdb.base/printcmds.exp: p ctable1[249]
PASS: gdb.base/printcmds.exp: p ctable1[250]
PASS: gdb.base/printcmds.exp: p ctable1[251]
PASS: gdb.base/printcmds.exp: p ctable1[252]
PASS: gdb.base/printcmds.exp: p ctable1[253]
PASS: gdb.base/printcmds.exp: p ctable1[254]
PASS: gdb.base/printcmds.exp: p ctable1[255]
PASS: gdb.base/printcmds.exp: set print elements 1
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: set print elements 2
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: set print elements 3
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: set print elements 4
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: set print elements 5
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: set print elements 6
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: set print elements 7
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: set print elements 8
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: set print elements 9
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: set print elements 10
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: set print elements 11
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: set print elements 12
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: set print elements 13
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: set print elements 14
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: set print elements 15
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: set print elements 16
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: set print elements 0
PASS: gdb.base/printcmds.exp: p teststring with elements set to 0
PASS: gdb.base/printcmds.exp: set print elements 1
PASS: gdb.base/printcmds.exp: p teststring with elements set to 1
PASS: gdb.base/printcmds.exp: set print elements 5
PASS: gdb.base/printcmds.exp: p teststring with elements set to 5
PASS: gdb.base/printcmds.exp: set print elements 19
PASS: gdb.base/printcmds.exp: p teststring with elements set to 19
PASS: gdb.base/printcmds.exp: set print elements 20
PASS: gdb.base/printcmds.exp: p teststring with elements set to 20
PASS: gdb.base/printcmds.exp: set print elements 8
PASS: gdb.base/printcmds.exp: p &ctable1[0]
PASS: gdb.base/printcmds.exp: p &ctable1[1]
PASS: gdb.base/printcmds.exp: p &ctable1[1*8]
PASS: gdb.base/printcmds.exp: p &ctable1[2*8]
PASS: gdb.base/printcmds.exp: p &ctable1[3*8]
PASS: gdb.base/printcmds.exp: p &ctable1[4*8]
PASS: gdb.base/printcmds.exp: p &ctable1[5*8]
PASS: gdb.base/printcmds.exp: p &ctable1[6*8]
PASS: gdb.base/printcmds.exp: p &ctable1[7*8]
PASS: gdb.base/printcmds.exp: p &ctable1[8*8]
PASS: gdb.base/printcmds.exp: p &ctable1[9*8]
PASS: gdb.base/printcmds.exp: p &ctable1[10*8]
PASS: gdb.base/printcmds.exp: p &ctable1[11*8]
PASS: gdb.base/printcmds.exp: p &ctable1[12*8]
PASS: gdb.base/printcmds.exp: p &ctable1[13*8]
PASS: gdb.base/printcmds.exp: p &ctable1[14*8]
PASS: gdb.base/printcmds.exp: p &ctable1[15*8]
PASS: gdb.base/printcmds.exp: p &ctable1[16*8]
PASS: gdb.base/printcmds.exp: p &ctable1[17*8]
PASS: gdb.base/printcmds.exp: p &ctable1[18*8]
PASS: gdb.base/printcmds.exp: p &ctable1[19*8]
PASS: gdb.base/printcmds.exp: p &ctable1[20*8]
PASS: gdb.base/printcmds.exp: p &ctable1[21*8]
PASS: gdb.base/printcmds.exp: p &ctable1[22*8]
PASS: gdb.base/printcmds.exp: p &ctable1[23*8]
PASS: gdb.base/printcmds.exp: p &ctable1[24*8]
PASS: gdb.base/printcmds.exp: p &ctable1[25*8]
PASS: gdb.base/printcmds.exp: p &ctable1[26*8]
PASS: gdb.base/printcmds.exp: p &ctable1[27*8]
PASS: gdb.base/printcmds.exp: p &ctable1[28*8]
PASS: gdb.base/printcmds.exp: p &ctable1[29*8]
PASS: gdb.base/printcmds.exp: p &ctable1[30*8]
PASS: gdb.base/printcmds.exp: p &ctable1[31*8]
PASS: gdb.base/printcmds.exp: set print elements 24
PASS: gdb.base/printcmds.exp: set print elements 24
PASS: gdb.base/printcmds.exp: p a1[0]
PASS: gdb.base/printcmds.exp: p a1[9]
PASS: gdb.base/printcmds.exp: p a2
PASS: gdb.base/printcmds.exp: p a2[0]
PASS: gdb.base/printcmds.exp: p a2[3]
PASS: gdb.base/printcmds.exp: set print null-stop on
PASS: gdb.base/printcmds.exp: print a2 with null-stop on
PASS: gdb.base/printcmds.exp: set print null-stop off
PASS: gdb.base/printcmds.exp: p int1dim[0]@2
PASS: gdb.base/printcmds.exp: p int1dim[0]@2@3
PASS: gdb.base/printcmds.exp: set print elements 24
PASS: gdb.base/printcmds.exp: set print address on
PASS: gdb.base/printcmds.exp: p arrays
PASS: gdb.base/printcmds.exp: p parrays
PASS: gdb.base/printcmds.exp: p parrays->array1
PASS: gdb.base/printcmds.exp: p &parrays->array1
PASS: gdb.base/printcmds.exp: p parrays->array2
PASS: gdb.base/printcmds.exp: p &parrays->array2
PASS: gdb.base/printcmds.exp: p parrays->array3
PASS: gdb.base/printcmds.exp: p &parrays->array3
PASS: gdb.base/printcmds.exp: p parrays->array4
PASS: gdb.base/printcmds.exp: p &parrays->array4
PASS: gdb.base/printcmds.exp: p parrays->array5
PASS: gdb.base/printcmds.exp: p &parrays->array5
PASS: gdb.base/printcmds.exp: set print address off
PASS: gdb.base/printcmds.exp: set print elements 50
XFAIL: gdb.base/printcmds.exp: This target can not call functions (PRMS 2416)
XFAIL: gdb.base/printcmds.exp: This target can not call functions (PRMS 2416)
PASS: gdb.base/printcmds.exp: printf "x=%d,y=%d,z=%d\n", 5, 6, 7
PASS: gdb.base/printcmds.exp: printf "string=%.4sxx\n", teststring
PASS: gdb.base/printcmds.exp: printf "string=%sxx\n", teststring
PASS: gdb.base/printcmds.exp: printf "%f is fun\n", 1.0
PASS: gdb.base/printcmds.exp: printf "x=%d,y=%f,z=%d\n", 5, 6.0, 7
PASS: gdb.base/printcmds.exp: printf "%x %f, %c %x, %x, %f\n", 0xbad, -99.541, 'z', 0xfeedface, 0xdeadbeef, 5.0
PASS: gdb.base/printcmds.exp: printf "%c\n", "x"[1,0]
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1.2df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",-1.2df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1.234567df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",-1.234567df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1234567.df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",-1234567.df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1.2E1df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1.2E10df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1.2E-10df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1.2E96df
PASS: gdb.base/printcmds.exp: printf "%Df\n",1.2dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",-1.2dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",1.234567890123456dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",-1.234567890123456dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",1234567890123456.dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",-1234567890123456.dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",1.2E1dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",1.2E10dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",1.2E-10dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",1.2E384dd
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1.2dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",-1.2dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1.234567890123456789012345678901234dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",-1.234567890123456789012345678901234dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1234567890123456789012345678901234.dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",-1234567890123456789012345678901234.dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1.2E1dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1.2E10dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1.2E-10dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1.2E6144dl
Running ../../../gdb/testsuite/gdb.base/sepdebug.exp ...
UNSUPPORTED: gdb.base/sepdebug.exp: cannot produce separate debug info files
Running ../../../gdb/testsuite/gdb.base/bfp-test.exp ...
PASS: gdb.base/bfp-test.exp: continue to breakpoint: return
PASS: gdb.base/bfp-test.exp: The original value of b32 is 1.5
PASS: gdb.base/bfp-test.exp: The original value of b64 is 2.25
PASS: gdb.base/bfp-test.exp: The original value of b128 is 3.375
PASS: gdb.base/bfp-test.exp: Try to change b32 to -1.5 with 'print b32=-1.5f'
PASS: gdb.base/bfp-test.exp: Try to change b64 to -2.25 with 'print b64=-2.25f'
PASS: gdb.base/bfp-test.exp: Try to change b128 to -3.375 with 'print b128=-3.375l'
PASS: gdb.base/bfp-test.exp: set variable b32 = 10.5f
PASS: gdb.base/bfp-test.exp: set variable b64 = 20.25f
PASS: gdb.base/bfp-test.exp: set variable b128 = 30.375l
PASS: gdb.base/bfp-test.exp: The value of b32 is changed to 10.5
PASS: gdb.base/bfp-test.exp: The value of b64 is changed to 20.25
PASS: gdb.base/bfp-test.exp: The value of b128 is changed to 30.375
PASS: gdb.base/bfp-test.exp: set variable b32 = 100.5a
PASS: gdb.base/bfp-test.exp: set variable b64 = 200.25x
PASS: gdb.base/bfp-test.exp: set variable b128 = 300.375fl
PASS: gdb.base/bfp-test.exp: set variable b128 = 300.375fff
Running ../../../gdb/testsuite/gdb.base/miscexprs.exp ...
PASS: gdb.base/miscexprs.exp: up from marker1
PASS: gdb.base/miscexprs.exp: print value of &ibig.i[0]
PASS: gdb.base/miscexprs.exp: print value of &cbig.c[0]
PASS: gdb.base/miscexprs.exp: print value of &fbig.f[0]
PASS: gdb.base/miscexprs.exp: print value of &dbig.d[0]
PASS: gdb.base/miscexprs.exp: print value of &sbig.s[0]
PASS: gdb.base/miscexprs.exp: print value of &lbig.l[0]
PASS: gdb.base/miscexprs.exp: print value of ibig.i[100] | 1
PASS: gdb.base/miscexprs.exp: print value of sbig.s[90] & 127
PASS: gdb.base/miscexprs.exp: print value of !ibig.i[100]
PASS: gdb.base/miscexprs.exp: print value of !sbig.s[90]
PASS: gdb.base/miscexprs.exp: print value of !ibig.i[100]
PASS: gdb.base/miscexprs.exp: print value of !ibig.i[100]
PASS: gdb.base/miscexprs.exp: print value of !sbig.s[90] * 10
PASS: gdb.base/miscexprs.exp: print value of ibig.i[100] * sbig.s[90]
PASS: gdb.base/miscexprs.exp: print value of fbig.f[100] * dbig.d[202]
PASS: gdb.base/miscexprs.exp: print value of !(sbig.s[90] * 2)
PASS: gdb.base/miscexprs.exp: print value of sizeof(sbig)
PASS: gdb.base/miscexprs.exp: print value of sizeof(cbig)
PASS: gdb.base/miscexprs.exp: print value of sizeof(lbig)/sizeof(long)
PASS: gdb.base/miscexprs.exp: print value of ibig.i[100] << 2
PASS: gdb.base/miscexprs.exp: print value of sbig.s[90] >> 4
PASS: gdb.base/miscexprs.exp: print value of lbig.l[333] >> 6
Running ../../../gdb/testsuite/gdb.base/breakpoint-shadow.exp ...
PASS: gdb.base/breakpoint-shadow.exp: set breakpoint always-inserted on
PASS: gdb.base/breakpoint-shadow.exp: show breakpoint always-inserted
PASS: gdb.base/breakpoint-shadow.exp: disassembly without breakpoints
PASS: gdb.base/breakpoint-shadow.exp: First breakpoint placed
PASS: gdb.base/breakpoint-shadow.exp: Second breakpoint placed
PASS: gdb.base/breakpoint-shadow.exp: disassembly with breakpoints
Running ../../../gdb/testsuite/gdb.base/relativedebug.exp ...
Running ../../../gdb/testsuite/gdb.base/call-signal-resume.exp ...
Running ../../../gdb/testsuite/gdb.base/callexit.exp ...
XFAIL: gdb.base/callexit.exp: This target can not call functions (PRMS 2416)
Running ../../../gdb/testsuite/gdb.base/reread.exp ...
PASS: gdb.base/reread.exp: breakpoint foo in first file (PRMS 13484)
PASS: gdb.base/reread.exp: run to foo() (PRMS 13484)
UNSUPPORTED: gdb.base/reread.exp: run to foo() second time
UNSUPPORTED: gdb.base/reread.exp: second pass: GDB should check for changes before running
Running ../../../gdb/testsuite/gdb.base/return2.exp ...
PASS: gdb.base/return2.exp: set break on void_func
PASS: gdb.base/return2.exp: continue to void_func
PASS: gdb.base/return2.exp: return from void_func
PASS: gdb.base/return2.exp: void function returned successfully
PASS: gdb.base/return2.exp: set break on char_func
PASS: gdb.base/return2.exp: continue to char_func
PASS: gdb.base/return2.exp: return from char_func
PASS: gdb.base/return2.exp: char value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
PASS: gdb.base/return2.exp: set break on short_func
PASS: gdb.base/return2.exp: continue to short_func
PASS: gdb.base/return2.exp: return from short_func
PASS: gdb.base/return2.exp: short value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
PASS: gdb.base/return2.exp: set break on int_func
PASS: gdb.base/return2.exp: continue to int_func
PASS: gdb.base/return2.exp: return from int_func
PASS: gdb.base/return2.exp: int value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
PASS: gdb.base/return2.exp: set break on long_func
PASS: gdb.base/return2.exp: continue to long_func
PASS: gdb.base/return2.exp: return from long_func
PASS: gdb.base/return2.exp: long value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
PASS: gdb.base/return2.exp: set break on long_long_func
PASS: gdb.base/return2.exp: continue to long_long_func
PASS: gdb.base/return2.exp: return from long_long_func
PASS: gdb.base/return2.exp: long_long value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
PASS: gdb.base/return2.exp: set break on float_func
PASS: gdb.base/return2.exp: continue to float_func
PASS: gdb.base/return2.exp: return from float_func
PASS: gdb.base/return2.exp: float value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
PASS: gdb.base/return2.exp: set break on double_func
PASS: gdb.base/return2.exp: continue to double_func
PASS: gdb.base/return2.exp: return from double_func
PASS: gdb.base/return2.exp: double value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
Running ../../../gdb/testsuite/gdb.base/break-interp.exp ...
Running ../../../gdb/testsuite/gdb.base/solib-weak.exp ...
Running ../../../gdb/testsuite/gdb.base/shreloc.exp ...
Running ../../../gdb/testsuite/gdb.base/source.exp ...
PASS: gdb.base/source.exp: script contains error
Running ../../../gdb/testsuite/gdb.base/prologue.exp ...
Running ../../../gdb/testsuite/gdb.base/gdb1250.exp ...
PASS: gdb.base/gdb1250.exp: backtrace from abort
Running ../../../gdb/testsuite/gdb.base/catch-syscall.exp ...
Running ../../../gdb/testsuite/gdb.base/solib-symbol.exp ...
Running ../../../gdb/testsuite/gdb.base/setvar.exp ...
PASS: gdb.base/setvar.exp: set variable char=0
PASS: gdb.base/setvar.exp: set variable char=1
PASS: gdb.base/setvar.exp: set variable char=7 (Bel)
PASS: gdb.base/setvar.exp: set variable char=32 (SPC)
PASS: gdb.base/setvar.exp: set variable char=65 ('A')
PASS: gdb.base/setvar.exp: set variable char=97 ('a')
PASS: gdb.base/setvar.exp: set variable char=126 ('~')
PASS: gdb.base/setvar.exp: set variable char=127 (8-bit)
PASS: gdb.base/setvar.exp: set variable signed char=0
PASS: gdb.base/setvar.exp: set variable signed char=1
PASS: gdb.base/setvar.exp: set variable signed char=7 (Bel)
PASS: gdb.base/setvar.exp: set variable signed char=32 (SPC)
PASS: gdb.base/setvar.exp: set variable signed char=65 ('A')
PASS: gdb.base/setvar.exp: set variable signed char=97 ('a')
PASS: gdb.base/setvar.exp: set variable signed char=126 ('~')
PASS: gdb.base/setvar.exp: set variable signed char=127 (8-bit)
PASS: gdb.base/setvar.exp: set variable v_signed_char=-1
PASS: gdb.base/setvar.exp: set variable signed char=-1 (-1)
PASS: gdb.base/setvar.exp: set variable v_signed_char=0xFF
PASS: gdb.base/setvar.exp: set variable signed char=0xFF (0xFF)
PASS: gdb.base/setvar.exp: set variable unsigned char=0
PASS: gdb.base/setvar.exp: set variable unsigned char=1
PASS: gdb.base/setvar.exp: set variable unsigned char=7 (Bel)
PASS: gdb.base/setvar.exp: set variable unsigned char=32 (SPC)
PASS: gdb.base/setvar.exp: set variable unsigned char=65 ('A')
PASS: gdb.base/setvar.exp: set variable unsigned char=97 ('a')
PASS: gdb.base/setvar.exp: set variable unsigned char=126 ('~')
PASS: gdb.base/setvar.exp: set variable unsigned char=255 (8-bit)
PASS: gdb.base/setvar.exp: set variable short=0
PASS: gdb.base/setvar.exp: set variable short=1
PASS: gdb.base/setvar.exp: set variable short=-1 (minus)
PASS: gdb.base/setvar.exp: set variable signed short=0
PASS: gdb.base/setvar.exp: set variable signed short=1
PASS: gdb.base/setvar.exp: set variable signed short=-1 (minus)
PASS: gdb.base/setvar.exp: set variable unsigned short=0
PASS: gdb.base/setvar.exp: set variable unsigned short=1
PASS: gdb.base/setvar.exp: set variable unsigned short=~0 (minus)
PASS: gdb.base/setvar.exp: set variable int=0
PASS: gdb.base/setvar.exp: set variable int=1
PASS: gdb.base/setvar.exp: set variable int=-1 (minus)
PASS: gdb.base/setvar.exp: set variable signed int=0
PASS: gdb.base/setvar.exp: set variable signed int=1
PASS: gdb.base/setvar.exp: set variable signed int=-1 (minus)
PASS: gdb.base/setvar.exp: set variable unsigned int=0
PASS: gdb.base/setvar.exp: set variable unsigned int=1
PASS: gdb.base/setvar.exp: set variable unsigned int=~0 (minus)
PASS: gdb.base/setvar.exp: set variable long=0
PASS: gdb.base/setvar.exp: set variable long=1
PASS: gdb.base/setvar.exp: set variable long=-1 (minus)
PASS: gdb.base/setvar.exp: set variable signed long=0
PASS: gdb.base/setvar.exp: set variable signed long=1
PASS: gdb.base/setvar.exp: set variable signed long=-1 (minus)
PASS: gdb.base/setvar.exp: set variable unsigned long=0
PASS: gdb.base/setvar.exp: set variable unsigned long=1
PASS: gdb.base/setvar.exp: set variable unsigned long=~0 (minus)
PASS: gdb.base/setvar.exp: set variable float=0
PASS: gdb.base/setvar.exp: set variable float=1
PASS: gdb.base/setvar.exp: set variable float=-1 (minus)
PASS: gdb.base/setvar.exp: set variable double=0
PASS: gdb.base/setvar.exp: set variable double=1
PASS: gdb.base/setvar.exp: set variable double=-1 (minus)
PASS: gdb.base/setvar.exp: set variable char array="hi" (string)
PASS: gdb.base/setvar.exp: set variable signed char array="hi" (string)
PASS: gdb.base/setvar.exp: set variable unsigned char array="hi" (string)
PASS: gdb.base/setvar.exp: set variable short array
PASS: gdb.base/setvar.exp: set variable signed short array
PASS: gdb.base/setvar.exp: set variable unsigned short array
PASS: gdb.base/setvar.exp: set variable int array
PASS: gdb.base/setvar.exp: set variable signed int array
PASS: gdb.base/setvar.exp: set variable unsigned int array
PASS: gdb.base/setvar.exp: set variable long array
PASS: gdb.base/setvar.exp: set variable signed long array
PASS: gdb.base/setvar.exp: set variable unsigned long array
PASS: gdb.base/setvar.exp: set variable float array
PASS: gdb.base/setvar.exp: set variable double array
PASS: gdb.base/setvar.exp: set variable char pointer="hi" (string)
PASS: gdb.base/setvar.exp: set variable char pointer="hi" (string) (#2)
PASS: gdb.base/setvar.exp: set variable signed char pointer="hi" (string)
PASS: gdb.base/setvar.exp: set variable signed char pointer="hi" (string) (#2)
PASS: gdb.base/setvar.exp: set variable unsigned char pointer="hi" (string)
PASS: gdb.base/setvar.exp: set variable unsigned char pointer="hi" (string) (#2)
PASS: gdb.base/setvar.exp: set variable short pointer
PASS: gdb.base/setvar.exp: set variable short pointer (#2)
PASS: gdb.base/setvar.exp: set v_signed_short_pointer=v_signed_short_array
PASS: gdb.base/setvar.exp: set variable *(v_signed_short_pointer)=123
PASS: gdb.base/setvar.exp: set variable *(v_signed_short_pointer+1)=-456
PASS: gdb.base/setvar.exp: set variable signed short pointer
PASS: gdb.base/setvar.exp: print *(v_signed_short_pointer+1)
PASS: gdb.base/setvar.exp: set v_unsigned_short_pointer=v_unsigned_short_array
PASS: gdb.base/setvar.exp: set variable *(v_unsigned_short_pointer)=123
PASS: gdb.base/setvar.exp: set variable *(v_unsigned_short_pointer+1)=-456
PASS: gdb.base/setvar.exp: set variable unsigned short pointer
PASS: gdb.base/setvar.exp: print *(v_unsigned_short_pointer+1)
PASS: gdb.base/setvar.exp: set variable int pointer
PASS: gdb.base/setvar.exp: set variable int pointer (#2)
PASS: gdb.base/setvar.exp: set variable signed int pointer
PASS: gdb.base/setvar.exp: set variable signed int pointer (#2)
PASS: gdb.base/setvar.exp: set variable unsigned int pointer
PASS: gdb.base/setvar.exp: print variable unsigned int pointer+1
PASS: gdb.base/setvar.exp: set variable long pointer
PASS: gdb.base/setvar.exp: set variable long pointer (#2)
PASS: gdb.base/setvar.exp: set variable signed long pointer
PASS: gdb.base/setvar.exp: set variable signed long pointer (#2)
PASS: gdb.base/setvar.exp: set variable unsigned long pointer
PASS: gdb.base/setvar.exp: set variable unsigned long pointer (#2)
PASS: gdb.base/setvar.exp: set variable float pointer
PASS: gdb.base/setvar.exp: set variable float pointer (#2)
PASS: gdb.base/setvar.exp: set variable double pointer
PASS: gdb.base/setvar.exp: set variable double pointer (#2)
PASS: gdb.base/setvar.exp: set variable structure char member
PASS: gdb.base/setvar.exp: set variable structure short member
PASS: gdb.base/setvar.exp: set variable structure int member
PASS: gdb.base/setvar.exp: set variable structure long member
PASS: gdb.base/setvar.exp: set variable structure float member
PASS: gdb.base/setvar.exp: set variable structure double member
PASS: gdb.base/setvar.exp: set print structure #1
PASS: gdb.base/setvar.exp: set print structure #2
PASS: gdb.base/setvar.exp: set print structure #3
PASS: gdb.base/setvar.exp: print sef.field=sm1
PASS: gdb.base/setvar.exp: print sef.field (sm1)
PASS: gdb.base/setvar.exp: print sef.field=s1
PASS: gdb.base/setvar.exp: print sef.field (s1)
PASS: gdb.base/setvar.exp: print uef.field=u2
PASS: gdb.base/setvar.exp: print uef.field (u2)
PASS: gdb.base/setvar.exp: print uef.field=u1
PASS: gdb.base/setvar.exp: print uef.field (u1)
PASS: gdb.base/setvar.exp: print sef.field=7
PASS: gdb.base/setvar.exp: print uef.field=6
Running ../../../gdb/testsuite/gdb.base/siginfo-addr.exp ...
Running ../../../gdb/testsuite/gdb.base/float.exp ...
PASS: gdb.base/float.exp: info float (unknown target)
Running ../../../gdb/testsuite/gdb.base/call-sc.exp ...
XFAIL: gdb.base/call-sc.exp: This target can not call functions
Running ../../../gdb/testsuite/gdb.base/foll-exec.exp ...
Running ../../../gdb/testsuite/gdb.base/readline.exp ...
PASS: gdb.base/readline.exp: Simple operate-and-get-next - send p 1
PASS: gdb.base/readline.exp: Simple operate-and-get-next - send p 2
PASS: gdb.base/readline.exp: Simple operate-and-get-next - send p 3
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-p to p 3
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-p to p 2
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-p to p 1
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-o for p 1
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-o for p 2
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-o for p 3
PASS: gdb.base/readline.exp: Simple operate-and-get-next - final prompt
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - send if 1 > 0
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - send p 5
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - send end
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - C-p to end
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - C-p to p 5
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - C-p to if 1 > 0
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - C-o for if 1 > 0
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - C-o for p 5
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - C-o for end
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - final prompt
PASS: gdb.base/readline.exp: print 42
PASS: gdb.base/readline.exp: arrow keys with secondary prompt
PASS: gdb.base/readline.exp: Simple operate-and-get-next - send p 7
PASS: gdb.base/readline.exp: Simple operate-and-get-next - send p 8
PASS: gdb.base/readline.exp: Simple operate-and-get-next - send p 9
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-p to p 9
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-p to p 8
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-p to p 7
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-o for p 7
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-o for p 8
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-o for p 9
PASS: gdb.base/readline.exp: Simple operate-and-get-next - final prompt
Running ../../../gdb/testsuite/gdb.base/regs.exp ...
Running ../../../gdb/testsuite/gdb.base/macscp.exp ...
gdb compile failed, k1cc WARNING:  -g3 conflicts with -g; using latter value (-g)
UNTESTED: gdb.base/macscp.exp: macscp.exp
Running ../../../gdb/testsuite/gdb.base/structs.exp ...
XFAIL: gdb.base/structs.exp: This target can not call functions
Running ../../../gdb/testsuite/gdb.base/bang.exp ...
PASS: gdb.base/bang.exp: run program
Running ../../../gdb/testsuite/gdb.base/dfp-exprs.exp ...
PASS: gdb.base/dfp-exprs.exp: p 1.2df
PASS: gdb.base/dfp-exprs.exp: p -1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.234567df
PASS: gdb.base/dfp-exprs.exp: p -1.234567df
PASS: gdb.base/dfp-exprs.exp: p 1234567.df
PASS: gdb.base/dfp-exprs.exp: p -1234567.df
PASS: gdb.base/dfp-exprs.exp: p 1.2E1df
PASS: gdb.base/dfp-exprs.exp: p 1.2E10df
PASS: gdb.base/dfp-exprs.exp: p 1.2E-10df
PASS: gdb.base/dfp-exprs.exp: p 1.2E96df
PASS: gdb.base/dfp-exprs.exp: p 1.2dd
PASS: gdb.base/dfp-exprs.exp: p -1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.234567890123456dd
PASS: gdb.base/dfp-exprs.exp: p -1.234567890123456dd
PASS: gdb.base/dfp-exprs.exp: p 1234567890123456.dd
PASS: gdb.base/dfp-exprs.exp: p -1234567890123456.dd
PASS: gdb.base/dfp-exprs.exp: p 1.2E1dd
PASS: gdb.base/dfp-exprs.exp: p 1.2E10dd
PASS: gdb.base/dfp-exprs.exp: p 1.2E-10dd
PASS: gdb.base/dfp-exprs.exp: p 1.2E384dd
PASS: gdb.base/dfp-exprs.exp: p 1.2dl
PASS: gdb.base/dfp-exprs.exp: p -1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.234567890123456789012345678901234dl
PASS: gdb.base/dfp-exprs.exp: p -1.234567890123456789012345678901234dl
PASS: gdb.base/dfp-exprs.exp: p 1234567890123456789012345678901234.dl
PASS: gdb.base/dfp-exprs.exp: p -1234567890123456789012345678901234.dl
PASS: gdb.base/dfp-exprs.exp: p 1.2E1dl
PASS: gdb.base/dfp-exprs.exp: p 1.2E10dl
PASS: gdb.base/dfp-exprs.exp: p 1.2E-10dl
PASS: gdb.base/dfp-exprs.exp: p 1.2E6144dl
PASS: gdb.base/dfp-exprs.exp: p 1.4df + 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.4df - 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.4df * 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.4df / 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.4dd + 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.4dd - 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.4dd * 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.4dd / 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.4dl + 1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.4dl - 1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.4dl * 1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.4dl / 1.2dl
PASS: gdb.base/dfp-exprs.exp: ptype 2.df + 2.df
PASS: gdb.base/dfp-exprs.exp: ptype 2.dd + 2.dd
PASS: gdb.base/dfp-exprs.exp: ptype 2.dl + 2.dl
PASS: gdb.base/dfp-exprs.exp: p 2.1df + 2.7dd
PASS: gdb.base/dfp-exprs.exp: p 2.1dd + 2.7df
PASS: gdb.base/dfp-exprs.exp: p 2.6df + 2.7dl
PASS: gdb.base/dfp-exprs.exp: p 2.6dl + 2.7df
PASS: gdb.base/dfp-exprs.exp: p 2.3dd + 2.2dl
PASS: gdb.base/dfp-exprs.exp: p 2.3dl + 2.2dd
PASS: gdb.base/dfp-exprs.exp: ptype 2.df + 2.dd
PASS: gdb.base/dfp-exprs.exp: ptype 2.df + 2.dl
PASS: gdb.base/dfp-exprs.exp: ptype 2.dd + 2.dl
PASS: gdb.base/dfp-exprs.exp: p 1.2df + 1
PASS: gdb.base/dfp-exprs.exp: p 2 + 1.7dd
PASS: gdb.base/dfp-exprs.exp: p 3 + 2.1dl
PASS: gdb.base/dfp-exprs.exp: ptype 1.2df + 1
PASS: gdb.base/dfp-exprs.exp: ptype 2 + 1.7dd
PASS: gdb.base/dfp-exprs.exp: ptype 3 + 2.1dl
PASS: gdb.base/dfp-exprs.exp: p 1.2df + 2ll
PASS: gdb.base/dfp-exprs.exp: p 1.2df + 1.2f
PASS: gdb.base/dfp-exprs.exp: p !0.df
PASS: gdb.base/dfp-exprs.exp: p !0.dd
PASS: gdb.base/dfp-exprs.exp: p !0.dl
PASS: gdb.base/dfp-exprs.exp: p !0.5df
PASS: gdb.base/dfp-exprs.exp: p !0.5dd
PASS: gdb.base/dfp-exprs.exp: p !0.5dl
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dd == 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.2dd == 1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dl == 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.2dl == 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.3dd
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.3dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dd == 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2dd == 1.3dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dl == 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2dl == 1.3dd
PASS: gdb.base/dfp-exprs.exp: p +1.2df
PASS: gdb.base/dfp-exprs.exp: p +1.2dd
PASS: gdb.base/dfp-exprs.exp: p +1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.2df < 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2df < 1.3dd
PASS: gdb.base/dfp-exprs.exp: p 1.2dl < 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2dd < 1.3dd
PASS: gdb.base/dfp-exprs.exp: p 1.2dd < 1.3dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dl < 1.3dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dl < 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2df > 1
PASS: gdb.base/dfp-exprs.exp: p 1.2dl > 2
PASS: gdb.base/dfp-exprs.exp: p 2 > 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 2 > 3.1dl
PASS: gdb.base/dfp-exprs.exp: p (float) -0.1df
PASS: gdb.base/dfp-exprs.exp: p (int) 8.3dd
PASS: gdb.base/dfp-exprs.exp: p (_Decimal64) 3.1
PASS: gdb.base/dfp-exprs.exp: p (_Decimal128) 3.7df
PASS: gdb.base/dfp-exprs.exp: p (_Decimal32) 4
Running ../../../gdb/testsuite/gdb.base/lineinc.exp ...
PASS: gdb.base/lineinc.exp: tolerate macro info with multiple #inclusions per line
Running ../../../gdb/testsuite/gdb.base/auxv.exp ...
Running ../../../gdb/testsuite/gdb.base/help.exp ...
PASS: gdb.base/help.exp: test set height
PASS: gdb.base/help.exp: help add-symbol-file
PASS: gdb.base/help.exp: help advance
PASS: gdb.base/help.exp: help aliases
PASS: gdb.base/help.exp: help append
PASS: gdb.base/help.exp: help append binary
PASS: gdb.base/help.exp: help append memory
PASS: gdb.base/help.exp: help append value
PASS: gdb.base/help.exp: help append binary memory
PASS: gdb.base/help.exp: help append binary value
PASS: gdb.base/help.exp: help attach
PASS: gdb.base/help.exp: help breakpoint "b" abbreviation
PASS: gdb.base/help.exp: help breakpoint "br" abbreviation
PASS: gdb.base/help.exp: help breakpoint "bre" abbreviation
PASS: gdb.base/help.exp: help breakpoint "brea" abbreviation
PASS: gdb.base/help.exp: help breakpoint "break" abbreviation
PASS: gdb.base/help.exp: help breakpoints
PASS: gdb.base/help.exp: help backtrace "bt" abbreviation
PASS: gdb.base/help.exp: help backtrace
PASS: gdb.base/help.exp: help continue "c" abbreviation
PASS: gdb.base/help.exp: help continue
PASS: gdb.base/help.exp: help call
PASS: gdb.base/help.exp: help catch
PASS: gdb.base/help.exp: help cd
PASS: gdb.base/help.exp: help clear
PASS: gdb.base/help.exp: help commands
PASS: gdb.base/help.exp: help condition
PASS: gdb.base/help.exp: help core-file
PASS: gdb.base/help.exp: help delete "d" abbreviation
PASS: gdb.base/help.exp: help delete
PASS: gdb.base/help.exp: help data
PASS: gdb.base/help.exp: help define
PASS: gdb.base/help.exp: help delete breakpoints
PASS: gdb.base/help.exp: help delete display
PASS: gdb.base/help.exp: help detach
PASS: gdb.base/help.exp: help directory
PASS: gdb.base/help.exp: help disable "dis" abbreviation
PASS: gdb.base/help.exp: help disable "disa" abbreviation
PASS: gdb.base/help.exp: help disable
PASS: gdb.base/help.exp: help disable breakpoints
PASS: gdb.base/help.exp: help disable display
PASS: gdb.base/help.exp: help disassemble
PASS: gdb.base/help.exp: help display
PASS: gdb.base/help.exp: help do
PASS: gdb.base/help.exp: help document
PASS: gdb.base/help.exp: help down
PASS: gdb.base/help.exp: help down-silently
PASS: gdb.base/help.exp: help dump
PASS: gdb.base/help.exp: help dump binary
PASS: gdb.base/help.exp: help dump ihex
PASS: gdb.base/help.exp: help dump memory
PASS: gdb.base/help.exp: help dump srec
PASS: gdb.base/help.exp: help dump tekhex
PASS: gdb.base/help.exp: help dump value
PASS: gdb.base/help.exp: help dump binary memory
PASS: gdb.base/help.exp: help dump binary value
PASS: gdb.base/help.exp: help dump ihex memory
PASS: gdb.base/help.exp: help dump ihex value
PASS: gdb.base/help.exp: help dump srec memory
PASS: gdb.base/help.exp: help dump srec value
PASS: gdb.base/help.exp: help dump tekhex memory
PASS: gdb.base/help.exp: help dump tekhex value
PASS: gdb.base/help.exp: help echo
PASS: gdb.base/help.exp: help enable breakpoints delete
PASS: gdb.base/help.exp: help enable breakpoints once
PASS: gdb.base/help.exp: help enable breakpoints
PASS: gdb.base/help.exp: help enable delete
PASS: gdb.base/help.exp: help enable display
PASS: gdb.base/help.exp: help enable once
PASS: gdb.base/help.exp: help enable
PASS: gdb.base/help.exp: help exec-file
PASS: gdb.base/help.exp: help frame "f" abbreviation
PASS: gdb.base/help.exp: help frame
PASS: gdb.base/help.exp: help fg
PASS: gdb.base/help.exp: help file
PASS: gdb.base/help.exp: help files
PASS: gdb.base/help.exp: help finish
PASS: gdb.base/help.exp: help forward-search
PASS: gdb.base/help.exp: help gcore
PASS: gdb.base/help.exp: help gcore
PASS: gdb.base/help.exp: help help "h" abbreviation
PASS: gdb.base/help.exp: help help
PASS: gdb.base/help.exp: help handle
PASS: gdb.base/help.exp: help info "i" abbreviation
PASS: gdb.base/help.exp: help info
PASS: gdb.base/help.exp: help ignore
PASS: gdb.base/help.exp: help info address
PASS: gdb.base/help.exp: help info all-registers
PASS: gdb.base/help.exp: help info args
PASS: gdb.base/help.exp: help info breakpoints
PASS: gdb.base/help.exp: help info catch
PASS: gdb.base/help.exp: help info copying
PASS: gdb.base/help.exp: help info display
PASS: gdb.base/help.exp: help info frame "f" abbreviation
PASS: gdb.base/help.exp: help info frame
PASS: gdb.base/help.exp: help info files
PASS: gdb.base/help.exp: help info float
PASS: gdb.base/help.exp: help info functions
PASS: gdb.base/help.exp: help info line
PASS: gdb.base/help.exp: help info locals
PASS: gdb.base/help.exp: help info program
PASS: gdb.base/help.exp: help info registers
PASS: gdb.base/help.exp: help info stack "s" abbreviation
PASS: gdb.base/help.exp: help info stack
PASS: gdb.base/help.exp: help info set
PASS: gdb.base/help.exp: help info signals
PASS: gdb.base/help.exp: help info source
PASS: gdb.base/help.exp: help info sources
PASS: gdb.base/help.exp: help info symbol
PASS: gdb.base/help.exp: help info target
PASS: gdb.base/help.exp: help info terminal
PASS: gdb.base/help.exp: help info types
PASS: gdb.base/help.exp: help info variables
PASS: gdb.base/help.exp: help info warranty
PASS: gdb.base/help.exp: help info watchpoints
PASS: gdb.base/help.exp: help inspect
PASS: gdb.base/help.exp: help jump
PASS: gdb.base/help.exp: help kill
PASS: gdb.base/help.exp: help list "l" abbreviation
PASS: gdb.base/help.exp: help list
PASS: gdb.base/help.exp: help load
PASS: gdb.base/help.exp: help make
PASS: gdb.base/help.exp: help next "n" abbreviation
PASS: gdb.base/help.exp: help next
PASS: gdb.base/help.exp: help nexti
PASS: gdb.base/help.exp: help obscure
PASS: gdb.base/help.exp: help output
PASS: gdb.base/help.exp: help overlay
PASS: gdb.base/help.exp: help overlay off
PASS: gdb.base/help.exp: help overlay manual
PASS: gdb.base/help.exp: help overlay auto
PASS: gdb.base/help.exp: help overlay list
PASS: gdb.base/help.exp: help overlay map
PASS: gdb.base/help.exp: help overlay unmap
PASS: gdb.base/help.exp: help overlay load
PASS: gdb.base/help.exp: help print "p" abbreviation
PASS: gdb.base/help.exp: help print
PASS: gdb.base/help.exp: help path
PASS: gdb.base/help.exp: help printcmds
PASS: gdb.base/help.exp: help printf
PASS: gdb.base/help.exp: help ptype
PASS: gdb.base/help.exp: help pwd
PASS: gdb.base/help.exp: help quit "q" abbreviation
PASS: gdb.base/help.exp: help quit
PASS: gdb.base/help.exp: help run "r" abbreviation
PASS: gdb.base/help.exp: help run
PASS: gdb.base/help.exp: help rbreak
PASS: gdb.base/help.exp: help restore
PASS: gdb.base/help.exp: help return
PASS: gdb.base/help.exp: help reverse-search
PASS: gdb.base/help.exp: help running
PASS: gdb.base/help.exp: help step "s" abbreviation
PASS: gdb.base/help.exp: help step #1
PASS: gdb.base/help.exp: help search
PASS: gdb.base/help.exp: help section
PASS: gdb.base/help.exp: help set annotate
PASS: gdb.base/help.exp: help set args
PASS: gdb.base/help.exp: help set check "c" abbreviation
PASS: gdb.base/help.exp: help set check "ch" abbreviation
PASS: gdb.base/help.exp: help set check
PASS: gdb.base/help.exp: help set check range
PASS: gdb.base/help.exp: help set check type
PASS: gdb.base/help.exp: help set complaints
PASS: gdb.base/help.exp: help set confirm
PASS: gdb.base/help.exp: help set editing
PASS: gdb.base/help.exp: help set environment
PASS: gdb.base/help.exp: help set height
PASS: gdb.base/help.exp: help set history expansion
PASS: gdb.base/help.exp: help set history filename
PASS: gdb.base/help.exp: help set history save
PASS: gdb.base/help.exp: help set history size
PASS: gdb.base/help.exp: help set history
PASS: gdb.base/help.exp: help set language
PASS: gdb.base/help.exp: help set listsize
PASS: gdb.base/help.exp: help set print "p" abbreviation
PASS: gdb.base/help.exp: help set print "pr" abbreviation
PASS: gdb.base/help.exp: help set print
PASS: gdb.base/help.exp: help set print address
PASS: gdb.base/help.exp: help set print array
PASS: gdb.base/help.exp: help set print asm-demangle
PASS: gdb.base/help.exp: help set print demangle
PASS: gdb.base/help.exp: help set print elements
PASS: gdb.base/help.exp: help set print object
PASS: gdb.base/help.exp: help set print pretty
PASS: gdb.base/help.exp: help set print sevenbit-strings
PASS: gdb.base/help.exp: help set print union
PASS: gdb.base/help.exp: help set print vtbl
PASS: gdb.base/help.exp: help set prompt
PASS: gdb.base/help.exp: help set radix
PASS: gdb.base/help.exp: help set symbol-reloading
PASS: gdb.base/help.exp: help set variable
PASS: gdb.base/help.exp: help set verbose
PASS: gdb.base/help.exp: help set width
PASS: gdb.base/help.exp: help set write
PASS: gdb.base/help.exp: help set
PASS: gdb.base/help.exp: help shell
PASS: gdb.base/help.exp: help show annotate
PASS: gdb.base/help.exp: help show args
PASS: gdb.base/help.exp: help show check "c" abbreviation
PASS: gdb.base/help.exp: help show check
PASS: gdb.base/help.exp: help show check range
PASS: gdb.base/help.exp: help show check type
PASS: gdb.base/help.exp: help show commands
PASS: gdb.base/help.exp: help show complaints
PASS: gdb.base/help.exp: help show confirm
PASS: gdb.base/help.exp: help show convenience
PASS: gdb.base/help.exp: help show directories
PASS: gdb.base/help.exp: help show editing
PASS: gdb.base/help.exp: help show environment
PASS: gdb.base/help.exp: help show height
PASS: gdb.base/help.exp: help show history expansion
PASS: gdb.base/help.exp: help show history filename
PASS: gdb.base/help.exp: help show history save
PASS: gdb.base/help.exp: help show history size
PASS: gdb.base/help.exp: help show history
PASS: gdb.base/help.exp: help show language
PASS: gdb.base/help.exp: help show listsize
PASS: gdb.base/help.exp: help show print "p" abbreviation
PASS: gdb.base/help.exp: help show print "pr" abbreviation
PASS: gdb.base/help.exp: help show print "p" abbreviation
PASS: gdb.base/help.exp: help show paths
PASS: gdb.base/help.exp: help show print address
PASS: gdb.base/help.exp: help show print array
PASS: gdb.base/help.exp: help show print asm-demangle
PASS: gdb.base/help.exp: help show print demangle
PASS: gdb.base/help.exp: help show print elements
PASS: gdb.base/help.exp: help show print object
PASS: gdb.base/help.exp: help show print pretty
PASS: gdb.base/help.exp: help show print sevenbit-strings
PASS: gdb.base/help.exp: help show print union
PASS: gdb.base/help.exp: help show print vtbl
PASS: gdb.base/help.exp: help show prompt
PASS: gdb.base/help.exp: help show radix
PASS: gdb.base/help.exp: help show symbol-reloading
PASS: gdb.base/help.exp: help show user
PASS: gdb.base/help.exp: help show values
PASS: gdb.base/help.exp: help show verbose
PASS: gdb.base/help.exp: help show version
PASS: gdb.base/help.exp: help show width
PASS: gdb.base/help.exp: help show write
PASS: gdb.base/help.exp: help show
PASS: gdb.base/help.exp: help step #2
PASS: gdb.base/help.exp: help stepi "si" abbreviation
PASS: gdb.base/help.exp: help stepi
PASS: gdb.base/help.exp: help signal
PASS: gdb.base/help.exp: help source
PASS: gdb.base/help.exp: help stack
PASS: gdb.base/help.exp: help status
PASS: gdb.base/help.exp: help support
PASS: gdb.base/help.exp: help symbol-file
PASS: gdb.base/help.exp: help target child
PASS: gdb.base/help.exp: help target procfs (procfs version)
PASS: gdb.base/help.exp: help target core
PASS: gdb.base/help.exp: help target exec
PASS: gdb.base/help.exp: help target remote
PASS: gdb.base/help.exp: help target
PASS: gdb.base/help.exp: help tbreak
PASS: gdb.base/help.exp: help tty
PASS: gdb.base/help.exp: help until "u" abbreviation
PASS: gdb.base/help.exp: help until
PASS: gdb.base/help.exp: help undisplay
PASS: gdb.base/help.exp: help unset environment
PASS: gdb.base/help.exp: help unset
PASS: gdb.base/help.exp: help up
PASS: gdb.base/help.exp: help up-silently
PASS: gdb.base/help.exp: help user-defined
PASS: gdb.base/help.exp: help watch
PASS: gdb.base/help.exp: help whatis
PASS: gdb.base/help.exp: help where
PASS: gdb.base/help.exp: help x
PASS: gdb.base/help.exp: help info bogus-gdb-command
PASS: gdb.base/help.exp: help gotcha
PASS: gdb.base/help.exp: apropos \(print[^ bsiedf\".-]\)
PASS: gdb.base/help.exp: apropos handle a signal
PASS: gdb.base/help.exp: apropos apropos
Running ../../../gdb/testsuite/gdb.base/pc-fp.exp ...
PASS: gdb.base/pc-fp.exp: get hexadecimal valueof "$pc"
PASS: gdb.base/pc-fp.exp: get hexadecimal valueof "$fp"
PASS: gdb.base/pc-fp.exp: display/i $pc
PASS: gdb.base/pc-fp.exp: display/w $fp
Running ../../../gdb/testsuite/gdb.base/until.exp ...
PASS: gdb.base/until.exp: until line number
PASS: gdb.base/until.exp: malformed until
PASS: gdb.base/until.exp: until factorial, recursive function
PASS: gdb.base/until.exp: until func, not called by current frame
Running ../../../gdb/testsuite/gdb.base/whatis-exp.exp ...
PASS: gdb.base/whatis-exp.exp: set variable x=14
PASS: gdb.base/whatis-exp.exp: set variable y=2
PASS: gdb.base/whatis-exp.exp: set variable z=2
PASS: gdb.base/whatis-exp.exp: set variable w=3
PASS: gdb.base/whatis-exp.exp: print value of x
PASS: gdb.base/whatis-exp.exp: print value of y
PASS: gdb.base/whatis-exp.exp: print value of z
PASS: gdb.base/whatis-exp.exp: print value of w
PASS: gdb.base/whatis-exp.exp: whatis value of x+y
PASS: gdb.base/whatis-exp.exp: whatis value of x-y
PASS: gdb.base/whatis-exp.exp: whatis value of x*y
PASS: gdb.base/whatis-exp.exp: whatis value of x/y
PASS: gdb.base/whatis-exp.exp: whatis value of x%y
PASS: gdb.base/whatis-exp.exp: whatis value of x=y
PASS: gdb.base/whatis-exp.exp: whatis value of x+=2
PASS: gdb.base/whatis-exp.exp: whatis value of ++x
PASS: gdb.base/whatis-exp.exp: whatis value of --x
PASS: gdb.base/whatis-exp.exp: whatis value of x++
PASS: gdb.base/whatis-exp.exp: whatis value of x--
Running ../../../gdb/testsuite/gdb.base/dbx.exp ...
PASS: gdb.base/dbx.exp: stop in main
PASS: gdb.base/dbx.exp: status
PASS: gdb.base/dbx.exp: stop at average.c:43
PASS: gdb.base/dbx.exp: stop in average.c:43
PASS: gdb.base/dbx.exp: stop at main
PASS: gdb.base/dbx.exp: running to main
PASS: gdb.base/dbx.exp: assign first
PASS: gdb.base/dbx.exp: print first
PASS: gdb.base/dbx.exp: whereis my_list
PASS: gdb.base/dbx.exp: file average.c:1
PASS: gdb.base/dbx.exp: cont 1
PASS: gdb.base/dbx.exp: step
XFAIL: gdb.base/dbx.exp: func sum
PASS: gdb.base/dbx.exp: stop in sum
PASS: gdb.base/dbx.exp: cont 2
XFAIL: gdb.base/dbx.exp: func print_average
Running ../../../gdb/testsuite/gdb.base/bitops.exp ...
PASS: gdb.base/bitops.exp: print value of !1
PASS: gdb.base/bitops.exp: print value of !0
PASS: gdb.base/bitops.exp: print value of !100
PASS: gdb.base/bitops.exp: print value of !1000
PASS: gdb.base/bitops.exp: print value of !10
PASS: gdb.base/bitops.exp: print value of !2
PASS: gdb.base/bitops.exp: print value of 10 | 5
PASS: gdb.base/bitops.exp: print value of 10 & 5
PASS: gdb.base/bitops.exp: print value of 10 ^ 5
PASS: gdb.base/bitops.exp: print value of -!0
PASS: gdb.base/bitops.exp: print value of ~-!0
PASS: gdb.base/bitops.exp: print value of 3 * 2 / 4.0 * 2.0
PASS: gdb.base/bitops.exp: print value of 8 << 2 >> 4
PASS: gdb.base/bitops.exp: print value of -1 < 0 > 1
PASS: gdb.base/bitops.exp: print value of 15 ^ 10 ^ 5 ^ 7
PASS: gdb.base/bitops.exp: print value of 3.5 < 4.0
PASS: gdb.base/bitops.exp: print value of 3.5 < -4.0
PASS: gdb.base/bitops.exp: print value of 2 > -3
PASS: gdb.base/bitops.exp: print value of -3>4
PASS: gdb.base/bitops.exp: print value of (-3 > 4)
PASS: gdb.base/bitops.exp: print value of 3>=2.5
PASS: gdb.base/bitops.exp: print value of 3>=4.5
PASS: gdb.base/bitops.exp: print value of 3==3.0
PASS: gdb.base/bitops.exp: print value of 3==4.0
PASS: gdb.base/bitops.exp: print value of 3!=3.0
PASS: gdb.base/bitops.exp: print value of 3!=5.0
PASS: gdb.base/bitops.exp: print value of 0 || 1 && 0 | 0 ^ 0 == 8 > 128 >>1 +2 *2
PASS: gdb.base/bitops.exp: print value of 1.0 || 0
PASS: gdb.base/bitops.exp: print value of 0.0 || 1.0
PASS: gdb.base/bitops.exp: print value of 0.0 || 0
PASS: gdb.base/bitops.exp: print value of 0 || 1 && 0 | 0 ^ 0 == 8
PASS: gdb.base/bitops.exp: print value of 0 == 8 > 128 >> 1 + 2 * 2
Running ../../../gdb/testsuite/gdb.base/unload.exp ...
Running ../../../gdb/testsuite/gdb.base/watch-read.exp ...
PASS: gdb.base/watch-read.exp: set hardware read watchpoint on global variable
PASS: gdb.base/watch-read.exp: read watchpoint triggers on first read
PASS: gdb.base/watch-read.exp: read watchpoint triggers on read after value changed
PASS: gdb.base/watch-read.exp: set write watchpoint on global variable
PASS: gdb.base/watch-read.exp: write watchpoint triggers
PASS: gdb.base/watch-read.exp: only write watchpoint triggers when value changes
PASS: gdb.base/watch-read.exp: read watchpoint triggers when value doesn't change, trapping reads and writes
PASS: gdb.base/watch-read.exp: only read watchpoint triggers when value doesn't change
Running ../../../gdb/testsuite/gdb.base/foll-vfork.exp ...
Running ../../../gdb/testsuite/gdb.base/annota3.exp ...
Running ../../../gdb/testsuite/gdb.base/detach.exp ...
Running ../../../gdb/testsuite/gdb.base/ptr-typedef.exp ...
PASS: gdb.base/ptr-typedef.exp: print foo_ptr
PASS: gdb.base/ptr-typedef.exp: print foz_ptr
Running ../../../gdb/testsuite/gdb.base/return-nodebug.exp ...
PASS: gdb.base/return-nodebug.exp: signed-char: return from function with no debug info without a cast
PASS: gdb.base/return-nodebug.exp: signed-char: return from function with no debug info with a cast
PASS: gdb.base/return-nodebug.exp: signed-char: advance to marker
PASS: gdb.base/return-nodebug.exp: signed-char: full width of the returned result
PASS: gdb.base/return-nodebug.exp: short: return from function with no debug info without a cast
PASS: gdb.base/return-nodebug.exp: short: return from function with no debug info with a cast
PASS: gdb.base/return-nodebug.exp: short: advance to marker
PASS: gdb.base/return-nodebug.exp: short: full width of the returned result
PASS: gdb.base/return-nodebug.exp: int: return from function with no debug info without a cast
PASS: gdb.base/return-nodebug.exp: int: return from function with no debug info with a cast
PASS: gdb.base/return-nodebug.exp: int: advance to marker
PASS: gdb.base/return-nodebug.exp: int: full width of the returned result
PASS: gdb.base/return-nodebug.exp: long: return from function with no debug info without a cast
PASS: gdb.base/return-nodebug.exp: long: return from function with no debug info with a cast
PASS: gdb.base/return-nodebug.exp: long: advance to marker
PASS: gdb.base/return-nodebug.exp: long: full width of the returned result
PASS: gdb.base/return-nodebug.exp: long-long: return from function with no debug info without a cast
PASS: gdb.base/return-nodebug.exp: long-long: return from function with no debug info with a cast
PASS: gdb.base/return-nodebug.exp: long-long: advance to marker
PASS: gdb.base/return-nodebug.exp: long-long: full width of the returned result
Running ../../../gdb/testsuite/gdb.base/signull.exp ...
Running ../../../gdb/testsuite/gdb.base/value-double-free.exp ...
PASS: gdb.base/value-double-free.exp: watch var
PASS: gdb.base/value-double-free.exp: continue
FAIL: gdb.base/value-double-free.exp: print empty()
PASS: gdb.base/value-double-free.exp: help help
Running ../../../gdb/testsuite/gdb.base/randomize.exp ...
UNTESTED: gdb.base/randomize.exp: Disabling randomization is not supported on this GDB platform
Running ../../../gdb/testsuite/gdb.base/huge.exp ...
Running ../../../gdb/testsuite/gdb.base/structs3.exp ...
PASS: gdb.base/structs3.exp: print two
PASS: gdb.base/structs3.exp: print *twop
PASS: gdb.base/structs3.exp: print *(struct Two *)onep
PASS: gdb.base/structs3.exp: print *(tTwo *)onep
Running ../../../gdb/testsuite/gdb.base/varargs.exp ...

		=== gdb Summary ===

# of expected passes		6537
# of unexpected failures	73
# of unexpected successes	2
# of expected failures		42
# of unknown successes		2
# of known failures		2
# of unresolved testcases	1
# of untested testcases		7
# of unsupported tests		17
/work1/friss/tools/gdb/k1_build/gdb/testsuite/../../gdb/gdb version  7.1.50.20100303-cvs -nw -nx 

